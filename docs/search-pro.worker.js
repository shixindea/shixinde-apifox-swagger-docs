const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":213,\"nextId\":213,\"documentIds\":{\"0\":\"0\",\"1\":\"0#目录\",\"2\":\"0#简介\",\"3\":\"0#特性\",\"4\":\"0#快速开始\",\"5\":\"0#安装\",\"6\":\"0#基本使用\",\"7\":\"0#使用指南\",\"8\":\"0#配置\",\"9\":\"0#贡献\",\"10\":\"0#相关项目\",\"11\":\"0#许可证\",\"12\":\"0#作者\",\"13\":\"1\",\"14\":\"1#基本用法\",\"15\":\"1#导入模块\",\"16\":\"1#简单导出\",\"17\":\"1#api-参考\",\"18\":\"1#exportswagger-options\",\"19\":\"1#参数\",\"20\":\"1#返回值\",\"21\":\"1#使用示例\",\"22\":\"1#_1-基本导出\",\"23\":\"1#_2-导出指定文件夹\",\"24\":\"1#_3-批量导出多个模块\",\"25\":\"1#_4-并行导出\",\"26\":\"1#配置文件集成\",\"27\":\"1#_1-使用配置文件\",\"28\":\"1#_2-动态配置\",\"29\":\"1#错误处理\",\"30\":\"1#_1-基本错误处理\",\"31\":\"1#_2-重试机制\",\"32\":\"1#集成示例\",\"33\":\"1#_1-express-js-集成\",\"34\":\"1#_2-定时任务集成\",\"35\":\"1#_3-webpack-插件集成\",\"36\":\"1#最佳实践\",\"37\":\"1#_1-环境变量管理\",\"38\":\"1#_2-日志记录\",\"39\":\"1#_3-缓存机制\",\"40\":\"1#下一步\",\"41\":\"2\",\"42\":\"2#基本语法\",\"43\":\"2#命令行选项\",\"44\":\"2#必需选项\",\"45\":\"2#认证选项\",\"46\":\"2#导出范围选项\",\"47\":\"2#其他选项\",\"48\":\"2#使用示例\",\"49\":\"2#_1-基本导出\",\"50\":\"2#_2-使用访问令牌\",\"51\":\"2#_3-导出指定文件夹\",\"52\":\"2#_4-环境变量配合使用\",\"53\":\"2#_5-在-package-json-中使用\",\"54\":\"2#高级用法\",\"55\":\"2#_1-批量导出多个模块\",\"56\":\"2#_2-与-ci-cd-集成\",\"57\":\"2#_3-监听文件变化自动导出\",\"58\":\"2#错误处理\",\"59\":\"2#常见错误码\",\"60\":\"2#调试模式\",\"61\":\"2#性能优化\",\"62\":\"2#_1-并行导出\",\"63\":\"2#_2-缓存策略\",\"64\":\"2#下一步\",\"65\":\"3\",\"66\":\"3#配置方式\",\"67\":\"3#_1-环境变量\",\"68\":\"3#_2-配置文件\",\"69\":\"3#apifox-config-js-推荐\",\"70\":\"3#apifox-config-json\",\"71\":\"3#_3-package-json-配置\",\"72\":\"3#配置选项详解\",\"73\":\"3#基本选项\",\"74\":\"3#projectid\",\"75\":\"3#token\",\"76\":\"3#outdir\",\"77\":\"3#导出选项\",\"78\":\"3#uselocal\",\"79\":\"3#folderid\",\"80\":\"3#foldername\",\"81\":\"3#网络选项\",\"82\":\"3#baseurl\",\"83\":\"3#timeout\",\"84\":\"3#retries\",\"85\":\"3#输出选项\",\"86\":\"3#filename\",\"87\":\"3#format\",\"88\":\"3#多模块配置\",\"89\":\"3#modules\",\"90\":\"3#配置示例\",\"91\":\"3#_1-简单项目配置\",\"92\":\"3#_2-多模块项目配置\",\"93\":\"3#_3-开发环境配置\",\"94\":\"3#_4-生产环境配置\",\"95\":\"3#_5-本地开发配置\",\"96\":\"3#配置文件优先级\",\"97\":\"3#环境变量参考\",\"98\":\"3#动态配置\",\"99\":\"3#_1-基于环境的配置\",\"100\":\"3#_2-基于分支的配置\",\"101\":\"3#_3-基于用户的配置\",\"102\":\"3#配置验证\",\"103\":\"3#_1-基本验证\",\"104\":\"3#_2-运行时验证\",\"105\":\"3#配置模板\",\"106\":\"3#_1-小型项目模板\",\"107\":\"3#_2-中型项目模板\",\"108\":\"3#_3-大型项目模板\",\"109\":\"3#下一步\",\"110\":\"4\",\"111\":\"4#系统要求\",\"112\":\"4#安装方式\",\"113\":\"4#使用-npm\",\"114\":\"4#使用-yarn\",\"115\":\"4#使用-pnpm\",\"116\":\"4#全局安装\",\"117\":\"4#验证安装\",\"118\":\"4#下一步\",\"119\":\"5\",\"120\":\"5#前置准备\",\"121\":\"5#_1-获取-apifox-访问令牌\",\"122\":\"5#_2-获取项目-id\",\"123\":\"5#第一次使用\",\"124\":\"5#方式一-命令行工具-推荐新手\",\"125\":\"5#方式二-编程接口\",\"126\":\"5#查看输出结果\",\"127\":\"5#使用生成的类型\",\"128\":\"5#常见问题\",\"129\":\"5#_1-令牌认证失败\",\"130\":\"5#_2-项目-id-错误\",\"131\":\"5#_3-网络连接问题\",\"132\":\"5#下一步\",\"133\":\"6\",\"134\":\"6#常见错误\",\"135\":\"6#_1-认证相关错误\",\"136\":\"6#错误-401-unauthorized\",\"137\":\"6#错误-403-forbidden\",\"138\":\"6#_2-网络相关错误\",\"139\":\"6#错误-econnrefused-或-etimedout\",\"140\":\"6#错误-ssl-certificate-problem\",\"141\":\"6#_3-文件系统错误\",\"142\":\"6#错误-enoent-no-such-file-or-directory\",\"143\":\"6#错误-eacces-permission-denied\",\"144\":\"6#_4-typescript-相关错误\",\"145\":\"6#错误-cannot-find-module-shixinde-apifox-swagger-types\",\"146\":\"6#错误-type-never-is-not-assignable-to-type\",\"147\":\"6#_5-本地模式错误\",\"148\":\"6#错误-local-apifox-client-not-found\",\"149\":\"6#错误-project-not-found-in-local-client\",\"150\":\"6#调试技巧\",\"151\":\"6#_1-启用详细日志\",\"152\":\"6#_2-检查网络请求\",\"153\":\"6#_3-验证配置\",\"154\":\"6#_4-测试连接\",\"155\":\"6#性能问题\",\"156\":\"6#_1-导出速度慢\",\"157\":\"6#_2-内存使用过高\",\"158\":\"6#_3-文件过大\",\"159\":\"6#环境相关问题\",\"160\":\"6#_1-windows-环境\",\"161\":\"6#路径分隔符问题\",\"162\":\"6#powershell-执行策略\",\"163\":\"6#_2-docker-环境\",\"164\":\"6#_3-ci-cd-环境\",\"165\":\"6#github-actions\",\"166\":\"6#gitlab-ci\",\"167\":\"6#版本兼容性\",\"168\":\"6#node-js-版本\",\"169\":\"6#typescript-版本\",\"170\":\"6#获取帮助\",\"171\":\"6#_1-检查文档\",\"172\":\"6#_2-社区支持\",\"173\":\"6#_3-提交-bug-报告\",\"174\":\"6#其他信息\",\"175\":\"7\",\"176\":\"7#核心概念\",\"177\":\"7#类型生成流程\",\"178\":\"7#核心类型\",\"179\":\"7#快速开始\",\"180\":\"7#_1-生成类型文件\",\"181\":\"7#_2-基本使用\",\"182\":\"7#详细使用指南\",\"183\":\"7#_1-类型定义\",\"184\":\"7#基本-api-类型定义\",\"185\":\"7#提取具体类型\",\"186\":\"7#_2-运行时-url-构建\",\"187\":\"7#基本用法\",\"188\":\"7#动态-url-构建\",\"189\":\"7#_3-创建类型安全的-api-客户端\",\"190\":\"7#基础-api-客户端\",\"191\":\"7#使用示例\",\"192\":\"7#_4-react-hook-集成\",\"193\":\"7#通用-api-hook\",\"194\":\"7#react-组件使用示例\",\"195\":\"7#_5-多模块类型管理\",\"196\":\"7#统一类型导入-推荐\",\"197\":\"7#业务代码使用\",\"198\":\"7#_6-高级用法\",\"199\":\"7#条件类型和类型守卫\",\"200\":\"7#自定义类型工具\",\"201\":\"7#常见问题和解决方案\",\"202\":\"7#_1-类型不能赋给类型-never-的参数-错误\",\"203\":\"7#_2-类型推断错误\",\"204\":\"7#_3-路径参数类型问题\",\"205\":\"7#最佳实践\",\"206\":\"7#_1-项目结构\",\"207\":\"7#_2-类型命名约定\",\"208\":\"7#_3-错误处理\",\"209\":\"7#_4-自动更新\",\"210\":\"7#下一步\",\"211\":\"8\",\"212\":\"9\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,35],\"1\":[1,12],\"2\":[1,22],\"3\":[1,34],\"4\":[1],\"5\":[1,12],\"6\":[1,19],\"7\":[1,19],\"8\":[1,30],\"9\":[1,19],\"10\":[1,21],\"11\":[1,6],\"12\":[1,11],\"13\":[1,12],\"14\":[1],\"15\":[1,13],\"16\":[1,29],\"17\":[2],\"18\":[3,4],\"19\":[1,24],\"20\":[1,13],\"21\":[1],\"22\":[2,33],\"23\":[2,26],\"24\":[2,54],\"25\":[2,57],\"26\":[1],\"27\":[2,45],\"28\":[2,68],\"29\":[1],\"30\":[2,39],\"31\":[2,44],\"32\":[1],\"33\":[4,45],\"34\":[2,42],\"35\":[3,56],\"36\":[1],\"37\":[2,32],\"38\":[2,37],\"39\":[2,70],\"40\":[1,5],\"41\":[1,5],\"42\":[1,4],\"43\":[1],\"44\":[1,15],\"45\":[1,11],\"46\":[1,15],\"47\":[1,13],\"48\":[1],\"49\":[2,10],\"50\":[2,11],\"51\":[2,18],\"52\":[2,19],\"53\":[5,21],\"54\":[1],\"55\":[2,35],\"56\":[5,81],\"57\":[2,18],\"58\":[1],\"59\":[1,17],\"60\":[1,12],\"61\":[1],\"62\":[2,24],\"63\":[2,50],\"64\":[1,5],\"65\":[1,6],\"66\":[1],\"67\":[2,19],\"68\":[2],\"69\":[5,35],\"70\":[3,14],\"71\":[4,12],\"72\":[1],\"73\":[1],\"74\":[1,12],\"75\":[1,18],\"76\":[1,10],\"77\":[1],\"78\":[1,10],\"79\":[1,11],\"80\":[1,10],\"81\":[1],\"82\":[1,14],\"83\":[1,9],\"84\":[1,8],\"85\":[1],\"86\":[1,10],\"87\":[1,10],\"88\":[1],\"89\":[1,22],\"90\":[1],\"91\":[2,18],\"92\":[2,36],\"93\":[2,29],\"94\":[2,37],\"95\":[2,20],\"96\":[1,12],\"97\":[1,31],\"98\":[1],\"99\":[2,43],\"100\":[2,64],\"101\":[2,40],\"102\":[1],\"103\":[2,56],\"104\":[2,35],\"105\":[1],\"106\":[2,19],\"107\":[2,29],\"108\":[2,57],\"109\":[1,5],\"110\":[1],\"111\":[1,10],\"112\":[1],\"113\":[2,6],\"114\":[2,6],\"115\":[2,6],\"116\":[1,10],\"117\":[1,8],\"118\":[1,13],\"119\":[1,12],\"120\":[1],\"121\":[4,9],\"122\":[3,17],\"123\":[1],\"124\":[4,17],\"125\":[2,36],\"126\":[1,16],\"127\":[1,35],\"128\":[1],\"129\":[2,3],\"130\":[4,5],\"131\":[2,3],\"132\":[1,6],\"133\":[1,6],\"134\":[1],\"135\":[2],\"136\":[2,28],\"137\":[2,6],\"138\":[2],\"139\":[2,37],\"140\":[2,21],\"141\":[2],\"142\":[2,22],\"143\":[2,19],\"144\":[3],\"145\":[2,28],\"146\":[2,21],\"147\":[2],\"148\":[2,21],\"149\":[2,10],\"150\":[1],\"151\":[2,33],\"152\":[2,25],\"153\":[2,32],\"154\":[2,51],\"155\":[1],\"156\":[2,32],\"157\":[2,26],\"158\":[2,28],\"159\":[1],\"160\":[3],\"161\":[1,24],\"162\":[2,15],\"163\":[3,50],\"164\":[4],\"165\":[2,81],\"166\":[2,60],\"167\":[1],\"168\":[3,22],\"169\":[2,20],\"170\":[1],\"171\":[2,5],\"172\":[2,5],\"173\":[4,44],\"174\":[1,32],\"175\":[2,11],\"176\":[1],\"177\":[1,24],\"178\":[1,19],\"179\":[1],\"180\":[2,22],\"181\":[2,44],\"182\":[1],\"183\":[2],\"184\":[3,34],\"185\":[1,19],\"186\":[4],\"187\":[1,29],\"188\":[3,21],\"189\":[4],\"190\":[3,110],\"191\":[1,52],\"192\":[4],\"193\":[3,97],\"194\":[2,90],\"195\":[2],\"196\":[3,46],\"197\":[1,33],\"198\":[2],\"199\":[1,46],\"200\":[1,41],\"201\":[1],\"202\":[5,35],\"203\":[2,28],\"204\":[2,30],\"205\":[1],\"206\":[2,28],\"207\":[2,33],\"208\":[2,36],\"209\":[2,21],\"210\":[1,4],\"211\":[2,12],\"212\":[1,3]},\"averageFieldLength\":[1.727699530516432,25.49467870429725],\"storedFields\":{\"0\":{\"h\":\"\",\"t\":[\"@shixinde/apifox-swagger\",\" 一个强大的 Apifox API 文档导出工具，支持将 Apifox 项目导出为 Swagger JSON 和 TypeScript 类型定义。提供命令行工具和编程接口，让 API 文档管理变得简单高效。 \",\" 支持多种导出方式：云端项目导出、本地客户端导出、模块化导出等。生成的 TypeScript 类型定义具有完整的类型安全保障，让前端开发更加可靠。 \",\"让 API 文档管理变得简单，让类型安全成为开发标准！ 快速开始 »安装指南 · NPM 包 · 命令行工具 · 报告 Bug · 提出新特性\"]},\"1\":{\"h\":\"目录\",\"t\":[\"目录\",\"简介\",\"特性\",\"快速开始\",\"安装\",\"基本使用\",\"使用指南\",\"配置\",\"贡献\",\"相关项目\",\"许可证\",\"作者\"]},\"2\":{\"h\":\"简介\",\"t\":[\"@shixinde/apifox-swagger 是一个专为 Apifox 用户设计的 API 文档导出工具。它可以将 Apifox 项目中的 API 文档导出为标准的 Swagger JSON 格式和 TypeScript 类型定义文件，让前端开发者能够享受完整的类型安全保障。\",\"该工具支持云端和本地两种导出方式，提供了灵活的配置选项和强大的 TypeScript 类型工具，是现代前端开发的理想选择。\"]},\"3\":{\"h\":\"特性\",\"t\":[\"🚀 多种导出方式 - 支持云端项目和本地客户端导出\",\"📦 模块化导出 - 支持按文件夹分模块导出，便于大型项目管理\",\"🔧 命令行工具 - 提供简单易用的 CLI 工具\",\"💻 编程接口 - 支持在 Node.js 项目中编程调用\",\"🎯 TypeScript 支持 - 生成完整的类型定义，享受类型安全\",\"⚡ 高性能 - 支持并行导出和缓存机制\",\"🔄 CI/CD 集成 - 完美支持各种持续集成环境\",\"📝 丰富配置 - 灵活的配置选项满足不同需求\"]},\"4\":{\"h\":\"快速开始\"},\"5\":{\"h\":\"安装\",\"t\":[\"# 使用 npm npm install -g @shixinde/apifox-swagger # 使用 yarn yarn global add @shixinde/apifox-swagger # 使用 pnpm pnpm add -g @shixinde/apifox-swagger \"]},\"6\":{\"h\":\"基本使用\",\"t\":[\"# 导出 Apifox 项目 apifox-swagger export --project-id YOUR_PROJECT_ID --token YOUR_ACCESS_TOKEN # 查看帮助 apifox-swagger --help \",\"更多详细信息请查看 快速开始指南。\"]},\"7\":{\"h\":\"使用指南\",\"t\":[\"我们提供了详细的文档来帮助你快速上手：\",\"安装指南 - 详细的安装步骤和环境要求\",\"命令行工具 - CLI 工具的完整使用说明\",\"编程接口 - Node.js 编程接口文档\",\"TypeScript 类型工具 - 类型安全的 API 调用方法\",\"配置参考 - 完整的配置选项说明\",\"故障排除 - 常见问题和解决方案\"]},\"8\":{\"h\":\"配置\",\"t\":[\"支持多种配置方式：\",\"// apifox.config.js export default { projectId: 'YOUR_PROJECT_ID', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', // 模块化导出 modules: [ { name: '用户模块', folderId: 'USER_FOLDER_ID', outdir: './src/types/user' } ] }; \",\"更多配置选项请查看 配置参考。\"]},\"9\":{\"h\":\"贡献\",\"t\":[\"我们欢迎所有形式的贡献！如果你有任何想法、建议或发现了 bug，请：\",\"查看 Issues 是否已有相关问题\",\"创建新的 Issue 描述问题或建议\",\"提交 Pull Request\",\"在提交代码前，请确保：\",\"代码通过所有测试\",\"遵循项目的代码规范\",\"添加必要的文档和测试\"]},\"10\":{\"h\":\"相关项目\",\"t\":[\"Vue3 组件库 Element ProMax\",\"Git 提交规范 Guoguo-cz\",\"JavaScript 工具类 Guoguo-utils\",\"vuepress 快速模板 Guoguo-vuepress\",\"个人笔记 guoguo-notes\",\"Apifox Swagger文档生成与TS类型解析工具 @shixinde/apifox-swagger\"]},\"11\":{\"h\":\"许可证\",\"t\":[\"该项目基于 MIT 许可证开源，详情请参阅 LICENSE。\"]},\"12\":{\"h\":\"作者\",\"t\":[\"袁果锅 (@shixinde)\",\"GitHub: @shixinde\",\"Email: 2914310412@qq.com\",\"如果这个项目对你有帮助，请给我们一个 ⭐️！\"]},\"13\":{\"h\":\"编程接口\",\"t\":[\"除了命令行工具，@shixinde/apifox-swagger 还提供了强大的编程接口，让你可以在 Node.js 应用中集成 API 文档导出功能。\"]},\"14\":{\"h\":\"基本用法\"},\"15\":{\"h\":\"导入模块\",\"t\":[\"// ES6 模块 import { exportSwagger } from '@shixinde/apifox-swagger'; // CommonJS const { exportSwagger } = require('@shixinde/apifox-swagger'); \"]},\"16\":{\"h\":\"简单导出\",\"t\":[\"import { exportSwagger } from '@shixinde/apifox-swagger'; async function exportAPI() { try { const result = await exportSwagger({ projectId: '2364643', token: 'your-access-token', outdir: './output' }); console.log('导出成功:', result); } catch (error) { console.error('导出失败:', error.message); } } exportAPI(); \"]},\"17\":{\"h\":\"API 参考\"},\"18\":{\"h\":\"exportSwagger(options)\",\"t\":[\"导出 Swagger 文档的主要函数。\"]},\"19\":{\"h\":\"参数\",\"t\":[\"interface ExportOptions { // 必需参数 projectId: string; // Apifox 项目 ID outdir: string; // 输出目录路径 // 可选参数 token?: string; // 访问令牌（优先级高于环境变量） useLocal?: boolean; // 是否使用本地客户端（默认：false） folderId?: string; // 文件夹 ID folderName?: string; // 文件夹名称 } \"]},\"20\":{\"h\":\"返回值\",\"t\":[\"interface ExportResult { success: boolean; // 是否成功 message: string; // 结果消息 files: string[]; // 生成的文件列表 outputDir: string; // 输出目录 } \"]},\"21\":{\"h\":\"使用示例\"},\"22\":{\"h\":\"1. 基本导出\",\"t\":[\"import { exportSwagger } from '@shixinde/apifox-swagger'; async function basicExport() { const result = await exportSwagger({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types' }); console.log(`导出完成，生成文件: ${result.files.join(', ')}`); } \"]},\"23\":{\"h\":\"2. 导出指定文件夹\",\"t\":[\"async function exportFolder() { const result = await exportSwagger({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types/user', folderId: '123456', folderName: '用户模块' }); return result; } \"]},\"24\":{\"h\":\"3. 批量导出多个模块\",\"t\":[\"async function exportMultipleModules() { const modules = [ { name: '用户模块', folderId: '123456', outdir: './src/types/user' }, { name: '订单模块', folderId: '123457', outdir: './src/types/order' }, { name: '产品模块', folderId: '123458', outdir: './src/types/product' } ]; const results = []; for (const module of modules) { try { console.log(`正在导出 ${module.name}...`); const result = await exportSwagger({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: module.outdir, folderId: module.folderId, folderName: module.name }); results.push({ module: module.name, success: true, result }); console.log(`${module.name} 导出成功`); } catch (error) { results.push({ module: module.name, success: false, error: error.message }); console.error(`${module.name} 导出失败:`, error.message); } } return results; } \"]},\"25\":{\"h\":\"4. 并行导出\",\"t\":[\"async function parallelExport() { const modules = [ { name: '用户模块', folderId: '123456', outdir: './src/types/user' }, { name: '订单模块', folderId: '123457', outdir: './src/types/order' }, { name: '产品模块', folderId: '123458', outdir: './src/types/product' } ]; const promises = modules.map(module => exportSwagger({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: module.outdir, folderId: module.folderId, folderName: module.name }).then(result => ({ module: module.name, success: true, result })) .catch(error => ({ module: module.name, success: false, error: error.message })) ); const results = await Promise.all(promises); results.forEach(result => { if (result.success) { console.log(`${result.module} 导出成功`); } else { console.error(`${result.module} 导出失败:`, result.error); } }); return results; } \"]},\"26\":{\"h\":\"配置文件集成\"},\"27\":{\"h\":\"1. 使用配置文件\",\"t\":[\"创建 apifox.config.js：\",\"export default { projectId: '2364643', outdir: './src/types', token: process.env.APIFOX_ACCESS_TOKEN, // 模块配置 modules: [ { name: '用户模块', folderId: '123456', outdir: './src/types/user' }, { name: '订单模块', folderId: '123457', outdir: './src/types/order' } ] }; \",\"使用配置文件：\",\"import { exportSwagger } from '@shixinde/apifox-swagger'; import config from './apifox.config.js'; async function exportWithConfig() { // 导出主项目 await exportSwagger(config); // 导出各个模块 if (config.modules) { for (const module of config.modules) { await exportSwagger({ ...config, ...module }); } } } \"]},\"28\":{\"h\":\"2. 动态配置\",\"t\":[\"import { exportSwagger } from '@shixinde/apifox-swagger'; class APIExporter { constructor(baseConfig) { this.baseConfig = baseConfig; } async exportProject(options = {}) { return await exportSwagger({ ...this.baseConfig, ...options }); } async exportModule(moduleName, moduleConfig) { return await exportSwagger({ ...this.baseConfig, ...moduleConfig, folderName: moduleName }); } async exportAll(modules) { const results = []; // 导出主项目 try { const mainResult = await this.exportProject(); results.push({ type: 'main', success: true, result: mainResult }); } catch (error) { results.push({ type: 'main', success: false, error: error.message }); } // 导出各个模块 for (const [name, config] of Object.entries(modules)) { try { const result = await this.exportModule(name, config); results.push({ type: 'module', name, success: true, result }); } catch (error) { results.push({ type: 'module', name, success: false, error: error.message }); } } return results; } } // 使用示例 const exporter = new APIExporter({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN }); const modules = { '用户模块': { folderId: '123456', outdir: './src/types/user' }, '订单模块': { folderId: '123457', outdir: './src/types/order' } }; const results = await exporter.exportAll(modules); \"]},\"29\":{\"h\":\"错误处理\"},\"30\":{\"h\":\"1. 基本错误处理\",\"t\":[\"async function exportWithErrorHandling() { try { const result = await exportSwagger({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './output' }); return result; } catch (error) { // 根据错误类型进行不同处理 if (error.message.includes('401')) { console.error('认证失败，请检查访问令牌'); } else if (error.message.includes('403')) { console.error('权限不足，请检查项目访问权限'); } else if (error.message.includes('404')) { console.error('项目或文件夹不存在'); } else { console.error('导出失败:', error.message); } throw error; } } \"]},\"31\":{\"h\":\"2. 重试机制\",\"t\":[\"async function exportWithRetry(options, maxRetries = 3) { let lastError; for (let i = 0; i < maxRetries; i++) { try { const result = await exportSwagger(options); return result; } catch (error) { lastError = error; if (i < maxRetries - 1) { const delay = Math.pow(2, i) * 1000; // 指数退避 console.log(`导出失败，${delay}ms 后重试...`); await new Promise(resolve => setTimeout(resolve, delay)); } } } throw lastError; } \"]},\"32\":{\"h\":\"集成示例\"},\"33\":{\"h\":\"1. Express.js 集成\",\"t\":[\"import express from 'express'; import { exportSwagger } from '@shixinde/apifox-swagger'; const app = express(); app.post('/api/export-swagger', async (req, res) => { try { const { projectId, folderId, folderName } = req.body; const result = await exportSwagger({ projectId, folderId, folderName, token: process.env.APIFOX_ACCESS_TOKEN, outdir: './temp/exports' }); res.json({ success: true, result }); } catch (error) { res.status(500).json({ success: false, error: error.message }); } }); app.listen(3000); \"]},\"34\":{\"h\":\"2. 定时任务集成\",\"t\":[\"import cron from 'node-cron'; import { exportSwagger } from '@shixinde/apifox-swagger'; // 每天凌晨 2 点自动导出 cron.schedule('0 2 * * *', async () => { console.log('开始定时导出 API 文档...'); try { const result = await exportSwagger({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types' }); console.log('定时导出完成:', result); } catch (error) { console.error('定时导出失败:', error.message); } }); \"]},\"35\":{\"h\":\"3. Webpack 插件集成\",\"t\":[\"// webpack-apifox-plugin.js import { exportSwagger } from '@shixinde/apifox-swagger'; class ApifoxWebpackPlugin { constructor(options) { this.options = options; } apply(compiler) { compiler.hooks.beforeCompile.tapAsync('ApifoxWebpackPlugin', async (params, callback) => { try { console.log('正在导出 API 文档...'); await exportSwagger(this.options); console.log('API 文档导出完成'); callback(); } catch (error) { console.error('API 文档导出失败:', error.message); callback(error); } }); } } export default ApifoxWebpackPlugin; \",\"在 webpack.config.js 中使用：\",\"import ApifoxWebpackPlugin from './webpack-apifox-plugin.js'; export default { // ... 其他配置 plugins: [ new ApifoxWebpackPlugin({ projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types' }) ] }; \"]},\"36\":{\"h\":\"最佳实践\"},\"37\":{\"h\":\"1. 环境变量管理\",\"t\":[\"// config/env.js import dotenv from 'dotenv'; dotenv.config(); export const config = { apifox: { token: process.env.APIFOX_ACCESS_TOKEN, projectId: process.env.APIFOX_PROJECT_ID, baseUrl: process.env.APIFOX_BASE_URL || 'https://api.apifox.cn' }, output: { baseDir: process.env.OUTPUT_DIR || './src/types' } }; \"]},\"38\":{\"h\":\"2. 日志记录\",\"t\":[\"import winston from 'winston'; const logger = winston.createLogger({ level: 'info', format: winston.format.json(), transports: [ new winston.transports.File({ filename: 'export.log' }), new winston.transports.Console() ] }); async function exportWithLogging(options) { logger.info('开始导出 API 文档', { options }); try { const result = await exportSwagger(options); logger.info('API 文档导出成功', { result }); return result; } catch (error) { logger.error('API 文档导出失败', { error: error.message, options }); throw error; } } \"]},\"39\":{\"h\":\"3. 缓存机制\",\"t\":[\"import fs from 'fs/promises'; import path from 'path'; import crypto from 'crypto'; class CachedExporter { constructor(cacheDir = './.cache') { this.cacheDir = cacheDir; } getCacheKey(options) { const key = JSON.stringify(options); return crypto.createHash('md5').update(key).digest('hex'); } async getCachedResult(options, maxAge = 3600000) { // 1小时 const cacheKey = this.getCacheKey(options); const cachePath = path.join(this.cacheDir, `${cacheKey}.json`); try { const stats = await fs.stat(cachePath); const age = Date.now() - stats.mtime.getTime(); if (age < maxAge) { const cached = await fs.readFile(cachePath, 'utf8'); return JSON.parse(cached); } } catch (error) { // 缓存不存在或读取失败 } return null; } async setCachedResult(options, result) { const cacheKey = this.getCacheKey(options); const cachePath = path.join(this.cacheDir, `${cacheKey}.json`); await fs.mkdir(this.cacheDir, { recursive: true }); await fs.writeFile(cachePath, JSON.stringify(result, null, 2)); } async export(options) { // 尝试从缓存获取 const cached = await this.getCachedResult(options); if (cached) { console.log('使用缓存的结果'); return cached; } // 执行导出 const result = await exportSwagger(options); // 缓存结果 await this.setCachedResult(options, result); return result; } } \"]},\"40\":{\"h\":\"下一步\",\"t\":[\"TypeScript 类型安全工具\",\"配置文件详解\",\"故障排除指南\",\"命令行工具使用\"]},\"41\":{\"h\":\"命令行工具\",\"t\":[\"apifox-swagger 提供了强大的命令行工具，支持多种导出模式和配置选项。\"]},\"42\":{\"h\":\"基本语法\",\"t\":[\"apifox-swagger [选项] \"]},\"43\":{\"h\":\"命令行选项\"},\"44\":{\"h\":\"必需选项\",\"t\":[\"选项\",\"类型\",\"描述\",\"示例\",\"--projectId <id>\",\"string\",\"Apifox 项目 ID\",\"--projectId 2364643\",\"--outdir <path>\",\"string\",\"输出目录路径\",\"--outdir ./output\"]},\"45\":{\"h\":\"认证选项\",\"t\":[\"选项\",\"类型\",\"描述\",\"示例\",\"--token <token>\",\"string\",\"访问令牌（可选，优先级高于环境变量）\",\"--token abc123\"]},\"46\":{\"h\":\"导出范围选项\",\"t\":[\"选项\",\"类型\",\"描述\",\"示例\",\"--folderId <id>\",\"string\",\"指定文件夹 ID\",\"--folderId 123456\",\"--folderName <name>\",\"string\",\"指定文件夹名称\",\"--folderName \\\"用户模块\\\"\"]},\"47\":{\"h\":\"其他选项\",\"t\":[\"选项\",\"类型\",\"描述\",\"示例\",\"--local\",\"boolean\",\"从本地 Apifox 客户端导出\",\"--local\",\"--help\",\"boolean\",\"显示帮助信息\",\"--help\",\"--version\",\"boolean\",\"显示版本信息\",\"--version\"]},\"48\":{\"h\":\"使用示例\"},\"49\":{\"h\":\"1. 基本导出\",\"t\":[\"导出整个项目的 API 文档：\",\"apifox-swagger --projectId 2364643 --outdir ./output \"]},\"50\":{\"h\":\"2. 使用访问令牌\",\"t\":[\"直接在命令中指定访问令牌：\",\"apifox-swagger --projectId 2364643 --token your-access-token --outdir ./output \"]},\"51\":{\"h\":\"3. 导出指定文件夹\",\"t\":[\"只导出特定文件夹的 API：\",\"# 使用文件夹 ID apifox-swagger --projectId 2364643 --folderId 123456 --outdir ./output # 使用文件夹名称 apifox-swagger --projectId 2364643 --folderName \\\"用户模块\\\" --outdir ./output # 同时指定文件夹 ID 和名称 apifox-swagger --projectId 2364643 --folderId 123456 --folderName \\\"用户模块\\\" --outdir ./output \"]},\"52\":{\"h\":\"4. 环境变量配合使用\",\"t\":[\"设置环境变量后简化命令：\",\"# 设置环境变量 export APIFOX_ACCESS_TOKEN=your-access-token export APIFOX_PROJECT_ID=2364643 # 简化的命令 apifox-swagger --projectId $APIFOX_PROJECT_ID --outdir ./output \"]},\"53\":{\"h\":\"5. 在 package.json 中使用\",\"t\":[\"将命令添加到 npm scripts：\",\"{ \\\"scripts\\\": { \\\"export-api\\\": \\\"apifox-swagger --projectId 2364643 --outdir ./src/types\\\", \\\"export-user-api\\\": \\\"apifox-swagger --projectId 2364643 --folderName \\\\\\\"用户模块\\\\\\\" --outdir ./src/types/user\\\", \\\"export-order-api\\\": \\\"apifox-swagger --projectId 2364643 --folderName \\\\\\\"订单模块\\\\\\\" --outdir ./src/types/order\\\" } } \",\"然后使用 npm 运行：\",\"npm run export-api npm run export-user-api npm run export-order-api \"]},\"54\":{\"h\":\"高级用法\"},\"55\":{\"h\":\"1. 批量导出多个模块\",\"t\":[\"创建批量导出脚本：\",\"#!/bin/bash # export-all.sh echo \\\"开始导出 API 文档...\\\" # 导出用户模块 apifox-swagger --projectId 2364643 --folderName \\\"用户模块\\\" --outdir ./src/types/user echo \\\"用户模块导出完成\\\" # 导出订单模块 apifox-swagger --projectId 2364643 --folderName \\\"订单模块\\\" --outdir ./src/types/order echo \\\"订单模块导出完成\\\" # 导出产品模块 apifox-swagger --projectId 2364643 --folderName \\\"产品模块\\\" --outdir ./src/types/product echo \\\"产品模块导出完成\\\" echo \\\"所有模块导出完成！\\\" \",\"运行脚本：\",\"chmod +x export-all.sh ./export-all.sh \"]},\"56\":{\"h\":\"2. 与 CI/CD 集成\",\"t\":[\"在 GitHub Actions 中使用：\",\"# .github/workflows/export-api.yml name: Export API Documentation on: schedule: - cron: '0 2 * * *' # 每天凌晨 2 点运行 workflow_dispatch: # 手动触发 jobs: export: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - name: Setup Node.js uses: actions/setup-node@v3 with: node-version: '18' - name: Install dependencies run: npm install - name: Export API documentation env: APIFOX_ACCESS_TOKEN: ${{ secrets.APIFOX_ACCESS_TOKEN }} run: | npx apifox-swagger --projectId 2364643 --outdir ./src/types - name: Commit changes run: | git config --local user.email \\\"action@github.com\\\" git config --local user.name \\\"GitHub Action\\\" git add . git diff --staged --quiet || git commit -m \\\"Update API documentation\\\" git push \"]},\"57\":{\"h\":\"3. 监听文件变化自动导出\",\"t\":[\"使用 nodemon 监听配置文件变化：\",\"# 安装 nodemon npm install -g nodemon # 监听 apifox.config.js 变化 nodemon --watch apifox.config.js --exec \\\"npm run export-api\\\" \"]},\"58\":{\"h\":\"错误处理\"},\"59\":{\"h\":\"常见错误码\",\"t\":[\"错误码\",\"描述\",\"解决方案\",\"401\",\"认证失败\",\"检查访问令牌是否正确\",\"403\",\"权限不足\",\"确保有项目访问权限\",\"404\",\"项目或文件夹不存在\",\"检查项目 ID 和文件夹 ID\",\"500\",\"服务器错误\",\"稍后重试或联系支持\"]},\"60\":{\"h\":\"调试模式\",\"t\":[\"启用详细日志输出：\",\"# 设置调试环境变量 export DEBUG=apifox-swagger:* # 运行命令 apifox-swagger --projectId 2364643 --outdir ./output \"]},\"61\":{\"h\":\"性能优化\"},\"62\":{\"h\":\"1. 并行导出\",\"t\":[\"对于大型项目，可以并行导出不同模块：\",\"# 使用 GNU parallel（如果可用） parallel -j 4 ::: \\\\ \\\"apifox-swagger --projectId 2364643 --folderName '用户模块' --outdir ./types/user\\\" \\\\ \\\"apifox-swagger --projectId 2364643 --folderName '订单模块' --outdir ./types/order\\\" \\\\ \\\"apifox-swagger --projectId 2364643 --folderName '产品模块' --outdir ./types/product\\\" \\\\ \\\"apifox-swagger --projectId 2364643 --folderName '支付模块' --outdir ./types/payment\\\" \"]},\"63\":{\"h\":\"2. 缓存策略\",\"t\":[\"实现简单的缓存机制：\",\"#!/bin/bash # export-with-cache.sh CACHE_FILE=\\\".api-cache\\\" CURRENT_TIME=$(date +%s) CACHE_DURATION=3600 # 1小时 if [ -f \\\"$CACHE_FILE\\\" ]; then CACHE_TIME=$(cat \\\"$CACHE_FILE\\\") TIME_DIFF=$((CURRENT_TIME - CACHE_TIME)) if [ $TIME_DIFF -lt $CACHE_DURATION ]; then echo \\\"使用缓存的 API 文档（${TIME_DIFF}秒前更新）\\\" exit 0 fi fi echo \\\"导出新的 API 文档...\\\" apifox-swagger --projectId 2364643 --outdir ./output if [ $? -eq 0 ]; then echo $CURRENT_TIME > \\\"$CACHE_FILE\\\" echo \\\"API 文档导出完成并已缓存\\\" fi \"]},\"64\":{\"h\":\"下一步\",\"t\":[\"编程接口使用\",\"配置文件详解\",\"TypeScript 类型工具\",\"故障排除指南\"]},\"65\":{\"h\":\"配置参考\",\"t\":[\"@shixinde/apifox-swagger 支持多种配置方式，让你可以灵活地定制导出行为。\"]},\"66\":{\"h\":\"配置方式\"},\"67\":{\"h\":\"1. 环境变量\",\"t\":[\"# .env 文件 APIFOX_ACCESS_TOKEN=your-access-token APIFOX_PROJECT_ID=2364643 APIFOX_BASE_URL=https://api.apifox.cn OUTPUT_DIR=./src/types \"]},\"68\":{\"h\":\"2. 配置文件\"},\"69\":{\"h\":\"apifox.config.js（推荐）\",\"t\":[\"export default { // 基本配置 projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', // 导出选项 useLocal: false, folderId: null, folderName: null, // 高级配置 timeout: 30000, retries: 3, // 多模块配置 modules: [ { name: '用户模块', folderId: '123456', outdir: './src/types/user' }, { name: '订单模块', folderId: '123457', outdir: './src/types/order' } ] }; \"]},\"70\":{\"h\":\"apifox.config.json\",\"t\":[\"{ \\\"projectId\\\": \\\"2364643\\\", \\\"outdir\\\": \\\"./src/types\\\", \\\"useLocal\\\": false, \\\"modules\\\": [ { \\\"name\\\": \\\"用户模块\\\", \\\"folderId\\\": \\\"123456\\\", \\\"outdir\\\": \\\"./src/types/user\\\" } ] } \"]},\"71\":{\"h\":\"3. package.json 配置\",\"t\":[\"{ \\\"apifox\\\": { \\\"projectId\\\": \\\"2364643\\\", \\\"outdir\\\": \\\"./src/types\\\", \\\"modules\\\": [ { \\\"name\\\": \\\"用户模块\\\", \\\"folderId\\\": \\\"123456\\\" } ] } } \"]},\"72\":{\"h\":\"配置选项详解\"},\"73\":{\"h\":\"基本选项\"},\"74\":{\"h\":\"projectId\",\"t\":[\"类型: string\",\"必需: 是（云端模式）\",\"描述: Apifox 项目 ID\",\"示例: \\\"2364643\\\"\"]},\"75\":{\"h\":\"token\",\"t\":[\"类型: string\",\"必需: 是（云端模式）\",\"描述: Apifox 访问令牌\",\"示例: \\\"your-access-token\\\"\",\"注意: 可以通过环境变量 APIFOX_ACCESS_TOKEN 设置\"]},\"76\":{\"h\":\"outdir\",\"t\":[\"类型: string\",\"默认值: \\\"./apifox\\\"\",\"描述: 输出目录路径\",\"示例: \\\"./src/types\\\"\"]},\"77\":{\"h\":\"导出选项\"},\"78\":{\"h\":\"useLocal\",\"t\":[\"类型: boolean\",\"默认值: false\",\"描述: 是否从本地 Apifox 客户端导出\",\"示例: true\"]},\"79\":{\"h\":\"folderId\",\"t\":[\"类型: string | null\",\"默认值: null\",\"描述: 指定要导出的文件夹 ID\",\"示例: \\\"123456\\\"\"]},\"80\":{\"h\":\"folderName\",\"t\":[\"类型: string | null\",\"默认值: null\",\"描述: 指定要导出的文件夹名称\",\"示例: \\\"用户模块\\\"\"]},\"81\":{\"h\":\"网络选项\"},\"82\":{\"h\":\"baseUrl\",\"t\":[\"类型: string\",\"默认值: \\\"https://api.apifox.cn\\\"\",\"描述: Apifox API 基础 URL\",\"示例: \\\"https://api.apifox.cn\\\"\"]},\"83\":{\"h\":\"timeout\",\"t\":[\"类型: number\",\"默认值: 30000\",\"描述: 请求超时时间（毫秒）\",\"示例: 60000\"]},\"84\":{\"h\":\"retries\",\"t\":[\"类型: number\",\"默认值: 3\",\"描述: 失败重试次数\",\"示例: 5\"]},\"85\":{\"h\":\"输出选项\"},\"86\":{\"h\":\"filename\",\"t\":[\"类型: string\",\"默认值: \\\"all\\\"\",\"描述: 输出文件名（不包含扩展名）\",\"示例: \\\"api\\\"\"]},\"87\":{\"h\":\"format\",\"t\":[\"类型: \\\"json\\\" | \\\"typescript\\\" | \\\"both\\\"\",\"默认值: \\\"both\\\"\",\"描述: 输出格式\",\"示例: \\\"typescript\\\"\"]},\"88\":{\"h\":\"多模块配置\"},\"89\":{\"h\":\"modules\",\"t\":[\"类型: ModuleConfig[]\",\"默认值: []\",\"描述: 多模块配置数组\",\"interface ModuleConfig { name: string; // 模块名称 folderId?: string; // 文件夹 ID folderName?: string; // 文件夹名称 outdir?: string; // 输出目录（可选，默认使用主配置） filename?: string; // 文件名（可选，默认使用模块名） } \"]},\"90\":{\"h\":\"配置示例\"},\"91\":{\"h\":\"1. 简单项目配置\",\"t\":[\"// apifox.config.js export default { projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/api/types' }; \"]},\"92\":{\"h\":\"2. 多模块项目配置\",\"t\":[\"// apifox.config.js export default { projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', modules: [ { name: '用户模块', folderId: '123456', outdir: './src/types/user', filename: 'user-api' }, { name: '订单模块', folderId: '123457', outdir: './src/types/order', filename: 'order-api' }, { name: '产品模块', folderId: '123458', outdir: './src/types/product', filename: 'product-api' }, { name: '支付模块', folderName: '支付相关接口', // 也可以使用文件夹名称 outdir: './src/types/payment' } ] }; \"]},\"93\":{\"h\":\"3. 开发环境配置\",\"t\":[\"// apifox.config.dev.js export default { projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', // 开发环境特定配置 timeout: 60000, retries: 1, // 只导出特定模块进行快速开发 modules: [ { name: '用户模块', folderId: '123456' } ] }; \"]},\"94\":{\"h\":\"4. 生产环境配置\",\"t\":[\"// apifox.config.prod.js export default { projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './dist/types', // 生产环境配置 timeout: 30000, retries: 5, // 导出所有模块 modules: [ { name: '用户模块', folderId: '123456' }, { name: '订单模块', folderId: '123457' }, { name: '产品模块', folderId: '123458' }, { name: '支付模块', folderId: '123459' }, { name: '通知模块', folderId: '123460' } ] }; \"]},\"95\":{\"h\":\"5. 本地开发配置\",\"t\":[\"// apifox.config.local.js export default { useLocal: true, outdir: './src/types/local', // 本地模式不需要 projectId 和 token timeout: 10000, retries: 1 }; \"]},\"96\":{\"h\":\"配置文件优先级\",\"t\":[\"配置文件的加载优先级（从高到低）：\",\"命令行参数\",\"apifox.config.js\",\"apifox.config.json\",\"package.json 中的 apifox 字段\",\"环境变量\",\"默认值\"]},\"97\":{\"h\":\"环境变量参考\",\"t\":[\"环境变量\",\"对应配置\",\"描述\",\"APIFOX_ACCESS_TOKEN\",\"token\",\"访问令牌\",\"APIFOX_PROJECT_ID\",\"projectId\",\"项目 ID\",\"APIFOX_BASE_URL\",\"baseUrl\",\"API 基础 URL\",\"OUTPUT_DIR\",\"outdir\",\"输出目录\",\"USE_LOCAL\",\"useLocal\",\"是否使用本地模式\",\"TIMEOUT\",\"timeout\",\"请求超时时间\",\"RETRIES\",\"retries\",\"重试次数\"]},\"98\":{\"h\":\"动态配置\"},\"99\":{\"h\":\"1. 基于环境的配置\",\"t\":[\"// apifox.config.js const isDev = process.env.NODE_ENV === 'development'; const isProd = process.env.NODE_ENV === 'production'; export default { projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: isDev ? './src/types' : './dist/types', // 开发环境只导出核心模块 modules: isDev ? [ { name: '用户模块', folderId: '123456' } ] : [ { name: '用户模块', folderId: '123456' }, { name: '订单模块', folderId: '123457' }, { name: '产品模块', folderId: '123458' } ], timeout: isDev ? 10000 : 30000, retries: isDev ? 1 : 3 }; \"]},\"100\":{\"h\":\"2. 基于分支的配置\",\"t\":[\"// apifox.config.js import { execSync } from 'child_process'; const currentBranch = execSync('git branch --show-current', { encoding: 'utf8' }).trim(); const branchConfigs = { 'main': { projectId: '2364643', // 生产项目 modules: [ { name: '用户模块', folderId: '123456' }, { name: '订单模块', folderId: '123457' } ] }, 'develop': { projectId: '2364644', // 开发项目 modules: [ { name: '用户模块', folderId: '123460' } ] }, 'feature/*': { projectId: '2364645', // 功能分支项目 modules: [ { name: '新功能模块', folderId: '123470' } ] } }; function getBranchConfig() { if (branchConfigs[currentBranch]) { return branchConfigs[currentBranch]; } // 检查通配符匹配 for (const [pattern, config] of Object.entries(branchConfigs)) { if (pattern.includes('*') && currentBranch.startsWith(pattern.replace('*', ''))) { return config; } } // 默认配置 return branchConfigs['develop']; } export default { token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', ...getBranchConfig() }; \"]},\"101\":{\"h\":\"3. 基于用户的配置\",\"t\":[\"// apifox.config.js import os from 'os'; const username = os.userInfo().username; const userConfigs = { 'developer1': { modules: [ { name: '用户模块', folderId: '123456' }, { name: '订单模块', folderId: '123457' } ] }, 'developer2': { modules: [ { name: '产品模块', folderId: '123458' }, { name: '支付模块', folderId: '123459' } ] } }; export default { projectId: '2364643', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', // 根据用户加载不同的模块 modules: userConfigs[username] || [ { name: '用户模块', folderId: '123456' } ] }; \"]},\"102\":{\"h\":\"配置验证\"},\"103\":{\"h\":\"1. 基本验证\",\"t\":[\"// scripts/validate-config.js import config from '../apifox.config.js'; function validateConfig(config) { const errors = []; // 检查必需字段 if (!config.projectId && !config.useLocal) { errors.push('projectId 是必需的（除非使用本地模式）'); } if (!config.token && !config.useLocal && !process.env.APIFOX_ACCESS_TOKEN) { errors.push('token 是必需的（除非使用本地模式）'); } if (!config.outdir) { errors.push('outdir 是必需的'); } // 检查模块配置 if (config.modules) { config.modules.forEach((module, index) => { if (!module.name) { errors.push(`模块 ${index} 缺少 name 字段`); } if (!module.folderId && !module.folderName) { errors.push(`模块 ${module.name} 需要 folderId 或 folderName`); } }); } return errors; } const errors = validateConfig(config); if (errors.length > 0) { console.error('配置验证失败:'); errors.forEach(error => console.error(` - ${error}`)); process.exit(1); } else { console.log('配置验证通过'); } \"]},\"104\":{\"h\":\"2. 运行时验证\",\"t\":[\"// src/utils/config-validator.js export function validateRuntimeConfig(config) { const warnings = []; // 检查输出目录是否存在 if (!fs.existsSync(config.outdir)) { warnings.push(`输出目录 ${config.outdir} 不存在，将自动创建`); } // 检查超时时间 if (config.timeout < 5000) { warnings.push('超时时间过短，可能导致请求失败'); } // 检查重试次数 if (config.retries > 10) { warnings.push('重试次数过多，可能导致长时间等待'); } return warnings; } \"]},\"105\":{\"h\":\"配置模板\"},\"106\":{\"h\":\"1. 小型项目模板\",\"t\":[\"// apifox.config.js export default { projectId: 'YOUR_PROJECT_ID', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types' }; \"]},\"107\":{\"h\":\"2. 中型项目模板\",\"t\":[\"// apifox.config.js export default { projectId: 'YOUR_PROJECT_ID', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', modules: [ { name: '用户模块', folderId: 'USER_FOLDER_ID', outdir: './src/types/user' }, { name: '业务模块', folderId: 'BUSINESS_FOLDER_ID', outdir: './src/types/business' } ] }; \"]},\"108\":{\"h\":\"3. 大型项目模板\",\"t\":[\"// apifox.config.js const isDev = process.env.NODE_ENV === 'development'; export default { projectId: 'YOUR_PROJECT_ID', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', timeout: 30000, retries: 3, modules: [ { name: '用户管理', folderId: 'USER_FOLDER_ID', outdir: './src/types/user' }, { name: '订单管理', folderId: 'ORDER_FOLDER_ID', outdir: './src/types/order' }, { name: '产品管理', folderId: 'PRODUCT_FOLDER_ID', outdir: './src/types/product' }, { name: '支付系统', folderId: 'PAYMENT_FOLDER_ID', outdir: './src/types/payment' }, { name: '通知系统', folderId: 'NOTIFICATION_FOLDER_ID', outdir: './src/types/notification' } ].filter(module => { // 开发环境只导出核心模块 if (isDev) { return ['用户管理', '订单管理'].includes(module.name); } return true; }) }; \"]},\"109\":{\"h\":\"下一步\",\"t\":[\"故障排除指南\",\"TypeScript 类型工具\",\"编程接口使用\",\"命令行工具使用\"]},\"110\":{\"h\":\"安装\"},\"111\":{\"h\":\"系统要求\",\"t\":[\"Node.js 14.0 或更高版本\",\"npm、yarn 或 pnpm 包管理器\"]},\"112\":{\"h\":\"安装方式\"},\"113\":{\"h\":\"使用 npm\",\"t\":[\"npm install @shixinde/apifox-swagger \"]},\"114\":{\"h\":\"使用 yarn\",\"t\":[\"yarn add @shixinde/apifox-swagger \"]},\"115\":{\"h\":\"使用 pnpm\",\"t\":[\"pnpm add @shixinde/apifox-swagger \"]},\"116\":{\"h\":\"全局安装\",\"t\":[\"如果你希望在任何地方都能使用 apifox-swagger 命令，可以全局安装：\",\"npm install -g @shixinde/apifox-swagger \"]},\"117\":{\"h\":\"验证安装\",\"t\":[\"安装完成后，你可以通过以下命令验证安装是否成功：\",\"apifox-swagger --version \",\"如果显示版本号，说明安装成功。\"]},\"118\":{\"h\":\"下一步\",\"t\":[\"安装完成后，你可以：\",\"快速开始 - 了解基本使用方法\",\"命令行工具 - 学习命令行工具的详细用法\",\"编程接口 - 在代码中使用编程接口\",\"TypeScript 类型 - 使用类型安全的 API 工具\"]},\"119\":{\"h\":\"快速开始\",\"t\":[\"本指南将帮助你快速上手 @shixinde/apifox-swagger，从 Apifox 导出 Swagger 文档并生成 TypeScript 类型定义。\"]},\"120\":{\"h\":\"前置准备\"},\"121\":{\"h\":\"1. 获取 Apifox 访问令牌\",\"t\":[\"登录 Apifox 网页版\",\"进入个人设置 → API 访问令牌\",\"创建新的访问令牌\",\"复制令牌并妥善保存\"]},\"122\":{\"h\":\"2. 获取项目 ID\",\"t\":[\"在 Apifox 中打开你的项目\",\"查看浏览器地址栏，URL 中包含项目 ID\",\"例如：https://www.apifox.cn/web/project/2364643 中的 2364643 就是项目 ID\"]},\"123\":{\"h\":\"第一次使用\"},\"124\":{\"h\":\"方式一：命令行工具（推荐新手）\",\"t\":[\"# 基本导出 apifox-swagger --projectId 2364643 --outdir ./output # 使用环境变量设置令牌 export APIFOX_ACCESS_TOKEN=your-access-token apifox-swagger --projectId 2364643 --outdir ./output # 或直接在命令中指定令牌 apifox-swagger --projectId 2364643 --token your-access-token --outdir ./output \"]},\"125\":{\"h\":\"方式二：编程接口\",\"t\":[\"创建一个简单的导出脚本：\",\"// export-api.js import { exportSwagger } from '@shixinde/apifox-swagger'; async function main() { try { const result = await exportSwagger({ projectId: '2364643', token: 'your-access-token', // 或使用环境变量 outdir: './output' }); console.log('导出成功:', result); } catch (error) { console.error('导出失败:', error.message); } } main(); \",\"运行脚本：\",\"node export-api.js \"]},\"126\":{\"h\":\"查看输出结果\",\"t\":[\"导出成功后，你会在输出目录下看到：\",\"output/ └── swagger/ ├── all.json # OpenAPI/Swagger JSON 文档 └── all.ts # TypeScript 类型定义文件 \"]},\"127\":{\"h\":\"使用生成的类型\",\"t\":[\"// 导入生成的类型 import type { paths } from './output/swagger/all'; import { makeURL, type MakeURL } from '@shixinde/apifox-swagger/types'; // 定义 API 类型 type UserLoginAPI = MakeURL<paths, '/api/user/login', 'post'>; // 提取请求和响应类型 type LoginRequest = UserLoginAPI['jsonData']; type LoginResponse = UserLoginAPI['responseData']; // 创建类型安全的 URL const loginUrl = makeURL<paths, '/api/user/login', 'post'>('/api/user/login', 'post'); \"]},\"128\":{\"h\":\"常见问题\"},\"129\":{\"h\":\"1. 令牌认证失败\",\"t\":[\"确保你的访问令牌是有效的，并且有项目的访问权限。\"]},\"130\":{\"h\":\"2. 项目 ID 错误\",\"t\":[\"检查项目 ID 是否正确，确保你有该项目的访问权限。\"]},\"131\":{\"h\":\"3. 网络连接问题\",\"t\":[\"确保网络连接正常，没有代理或防火墙限制。\"]},\"132\":{\"h\":\"下一步\",\"t\":[\"命令行工具详细用法\",\"编程接口完整指南\",\"TypeScript 类型安全工具\",\"配置文件使用\",\"故障排除指南\"]},\"133\":{\"h\":\"故障排除\",\"t\":[\"本文档帮助你解决使用 @shixinde/apifox-swagger 时可能遇到的常见问题。\"]},\"134\":{\"h\":\"常见错误\"},\"135\":{\"h\":\"1. 认证相关错误\"},\"136\":{\"h\":\"错误：\",\"t\":[\"原因：访问令牌无效或已过期\",\"解决方案：\",\"# 检查令牌是否正确设置 echo $APIFOX_ACCESS_TOKEN # 重新获取令牌 # 1. 登录 Apifox 网页版 # 2. 进入个人设置 > 访问令牌 # 3. 生成新的令牌 # 4. 更新环境变量 export APIFOX_ACCESS_TOKEN=\\\"your-new-token\\\" \"]},\"137\":{\"h\":\"错误：\",\"t\":[\"原因：令牌权限不足或项目访问受限\",\"解决方案：\",\"确认你有项目的访问权限\",\"检查令牌是否有足够的权限\",\"联系项目管理员添加权限\"]},\"138\":{\"h\":\"2. 网络相关错误\"},\"139\":{\"h\":\"错误： 或\",\"t\":[\"原因：网络连接问题或防火墙阻止\",\"解决方案：\",\"// apifox.config.js - 增加超时时间和重试次数 export default { projectId: 'your-project-id', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', // 网络配置 timeout: 60000, // 增加到 60 秒 retries: 5, // 增加重试次数 // 如果在企业网络环境中，可能需要配置代理 proxy: process.env.HTTP_PROXY }; \"]},\"140\":{\"h\":\"错误：\",\"t\":[\"原因：SSL 证书验证失败\",\"解决方案：\",\"# 临时禁用 SSL 验证（不推荐用于生产环境） export NODE_TLS_REJECT_UNAUTHORIZED=0 # 或者更新 Node.js 和 npm 到最新版本 npm update -g npm \"]},\"141\":{\"h\":\"3. 文件系统错误\"},\"142\":{\"h\":\"错误：\",\"t\":[\"原因：输出目录不存在\",\"解决方案：\",\"# 手动创建目录 mkdir -p ./src/types # 或者在配置中启用自动创建 \",\"// 在代码中自动创建目录 import { mkdirSync } from 'fs'; import { dirname } from 'path'; const outdir = './src/types'; mkdirSync(dirname(outdir), { recursive: true }); \"]},\"143\":{\"h\":\"错误：\",\"t\":[\"原因：文件权限不足\",\"解决方案：\",\"# 检查文件权限 ls -la ./src/types # 修改权限 chmod 755 ./src/types # 或者使用 sudo（不推荐） sudo npx apifox-swagger export \"]},\"144\":{\"h\":\"4. TypeScript 相关错误\"},\"145\":{\"h\":\"错误：\",\"t\":[\"原因：类型文件未生成或路径错误\",\"解决方案：\",\"# 1. 确保已导出类型文件 npx apifox-swagger export --project-id your-project-id # 2. 检查文件是否存在 ls -la ./src/types/ # 3. 检查 TypeScript 配置 \",\"// tsconfig.json { \\\"compilerOptions\\\": { \\\"baseUrl\\\": \\\".\\\", \\\"paths\\\": { \\\"@/types/*\\\": [\\\"./src/types/*\\\"] } } } \"]},\"146\":{\"h\":\"错误：\",\"t\":[\"原因：类型推断失败或路径参数不匹配\",\"解决方案：\",\"// 错误的用法 type BadURL = MakeURL<typeof makeURL<UserPaths, '/user/{id}', 'GET'>>; // 正确的用法 type GoodURL = MakeURL<UserPaths, '/user/{id}', 'GET'>; // 检查路径是否在类型定义中存在 type UserPaths = { '/user/{id}': { GET: { // ... 接口定义 } } }; \"]},\"147\":{\"h\":\"5. 本地模式错误\"},\"148\":{\"h\":\"错误：\",\"t\":[\"原因：本地 Apifox 客户端未安装或未运行\",\"解决方案：\",\"下载并安装 Apifox 客户端\",\"启动 Apifox 客户端\",\"确保客户端版本支持 API 导出\",\"# 检查本地服务是否运行 curl http://localhost:4523/api/v1/projects # 如果无响应，启动 Apifox 客户端 \"]},\"149\":{\"h\":\"错误：\",\"t\":[\"原因：项目未在本地客户端中打开\",\"解决方案：\",\"在 Apifox 客户端中打开对应项目\",\"确保项目已同步到本地\",\"检查项目 ID 是否正确\"]},\"150\":{\"h\":\"调试技巧\"},\"151\":{\"h\":\"1. 启用详细日志\",\"t\":[\"# 设置调试模式 export DEBUG=apifox:* # 运行命令 npx apifox-swagger export --project-id your-project-id \",\"// 在代码中启用调试 import { exportSwagger } from '@shixinde/apifox-swagger'; const result = await exportSwagger({ projectId: 'your-project-id', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', debug: true // 启用调试模式 }); \"]},\"152\":{\"h\":\"2. 检查网络请求\",\"t\":[\"// 添加请求拦截器 import axios from 'axios'; axios.interceptors.request.use(request => { console.log('发送请求:', request.method?.toUpperCase(), request.url); return request; }); axios.interceptors.response.use( response => { console.log('收到响应:', response.status, response.statusText); return response; }, error => { console.error('请求失败:', error.message); return Promise.reject(error); } ); \"]},\"153\":{\"h\":\"3. 验证配置\",\"t\":[\"// scripts/debug-config.js import config from '../apifox.config.js'; console.log('当前配置:'); console.log(JSON.stringify(config, null, 2)); // 检查环境变量 console.log('\\\\n环境变量:'); console.log('APIFOX_ACCESS_TOKEN:', process.env.APIFOX_ACCESS_TOKEN ? '已设置' : '未设置'); console.log('NODE_ENV:', process.env.NODE_ENV); // 检查文件系统 import { existsSync } from 'fs'; console.log('\\\\n文件系统:'); console.log('输出目录存在:', existsSync(config.outdir)); \"]},\"154\":{\"h\":\"4. 测试连接\",\"t\":[\"// scripts/test-connection.js import axios from 'axios'; async function testConnection() { try { const response = await axios.get('https://api.apifox.cn/api/v1/projects', { headers: { 'Authorization': `Bearer ${process.env.APIFOX_ACCESS_TOKEN}` }, timeout: 10000 }); console.log('连接成功:', response.status); console.log('项目数量:', response.data.data?.length || 0); } catch (error) { console.error('连接失败:', error.message); if (error.response) { console.error('响应状态:', error.response.status); console.error('响应数据:', error.response.data); } } } testConnection(); \"]},\"155\":{\"h\":\"性能问题\"},\"156\":{\"h\":\"1. 导出速度慢\",\"t\":[\"原因：项目过大或网络延迟\",\"解决方案：\",\"// 使用模块化导出 export default { projectId: 'your-project-id', token: process.env.APIFOX_ACCESS_TOKEN, outdir: './src/types', // 只导出需要的模块 modules: [ { name: '核心模块', folderId: 'core-folder-id' } ], // 并行导出 parallel: true, maxConcurrency: 3 }; \"]},\"157\":{\"h\":\"2. 内存使用过高\",\"t\":[\"原因：大型项目或并发过高\",\"解决方案：\",\"# 增加 Node.js 内存限制 node --max-old-space-size=4096 node_modules/.bin/apifox-swagger export \",\"// 降低并发数 export default { // ... 其他配置 maxConcurrency: 1, // 降低并发数 batchSize: 10 // 减少批处理大小 }; \"]},\"158\":{\"h\":\"3. 文件过大\",\"t\":[\"原因：生成的类型文件过大\",\"解决方案：\",\"// 分模块导出 export default { projectId: 'your-project-id', token: process.env.APIFOX_ACCESS_TOKEN, modules: [ { name: '用户模块', folderId: 'user-folder-id', outdir: './src/types/user' }, { name: '订单模块', folderId: 'order-folder-id', outdir: './src/types/order' } ] }; \"]},\"159\":{\"h\":\"环境相关问题\"},\"160\":{\"h\":\"1. Windows 环境\"},\"161\":{\"h\":\"路径分隔符问题\",\"t\":[\"// 使用 path.join 而不是硬编码路径 import { join } from 'path'; export default { projectId: 'your-project-id', token: process.env.APIFOX_ACCESS_TOKEN, outdir: join(process.cwd(), 'src', 'types') // 跨平台路径 }; \"]},\"162\":{\"h\":\"PowerShell 执行策略\",\"t\":[\"# 如果遇到执行策略错误 Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser # 或者使用 npx npx apifox-swagger export --project-id your-project-id \"]},\"163\":{\"h\":\"2. Docker 环境\",\"t\":[\"# Dockerfile FROM node:18-alpine WORKDIR /app # 安装依赖 COPY package*.json ./ RUN npm ci --only=production # 复制源码 COPY . . # 导出类型 RUN npx apifox-swagger export --project-id $PROJECT_ID # 构建应用 RUN npm run build EXPOSE 3000 CMD [\\\"npm\\\", \\\"start\\\"] \",\"# docker-compose.yml version: '3.8' services: app: build: . environment: - APIFOX_ACCESS_TOKEN=${APIFOX_ACCESS_TOKEN} - PROJECT_ID=${PROJECT_ID} volumes: - ./src/types:/app/src/types \"]},\"164\":{\"h\":\"3. CI/CD 环境\"},\"165\":{\"h\":\"GitHub Actions\",\"t\":[\"# .github/workflows/api-types.yml name: Update API Types on: schedule: - cron: '0 2 * * *' # 每天凌晨 2 点 workflow_dispatch: jobs: update-types: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - name: Setup Node.js uses: actions/setup-node@v3 with: node-version: '18' cache: 'npm' - name: Install dependencies run: npm ci - name: Export API types env: APIFOX_ACCESS_TOKEN: ${{ secrets.APIFOX_ACCESS_TOKEN }} run: | npx apifox-swagger export --project-id ${{ vars.PROJECT_ID }} - name: Commit changes run: | git config --local user.email \\\"action@github.com\\\" git config --local user.name \\\"GitHub Action\\\" git add src/types/ git diff --staged --quiet || git commit -m \\\"chore: update API types\\\" git push \"]},\"166\":{\"h\":\"GitLab CI\",\"t\":[\"# .gitlab-ci.yml stages: - update-types update-api-types: stage: update-types image: node:18-alpine script: - npm ci - npx apifox-swagger export --project-id $PROJECT_ID - | if [ -n \\\"$(git status --porcelain src/types/)\\\" ]; then git config user.email \\\"gitlab-ci@example.com\\\" git config user.name \\\"GitLab CI\\\" git add src/types/ git commit -m \\\"chore: update API types\\\" git push origin $CI_COMMIT_REF_NAME fi variables: APIFOX_ACCESS_TOKEN: $APIFOX_ACCESS_TOKEN only: - schedules - web \"]},\"167\":{\"h\":\"版本兼容性\"},\"168\":{\"h\":\"Node.js 版本\",\"t\":[\"Node.js 版本\",\"支持状态\",\"说明\",\"18.x\",\"✅ 推荐\",\"完全支持\",\"16.x\",\"✅ 支持\",\"需要 16.14+\",\"14.x\",\"⚠️ 有限支持\",\"需要 14.18+\",\"12.x\",\"❌ 不支持\",\"请升级 Node.js\"]},\"169\":{\"h\":\"TypeScript 版本\",\"t\":[\"TypeScript 版本\",\"支持状态\",\"说明\",\"5.x\",\"✅ 推荐\",\"完全支持\",\"4.9+\",\"✅ 支持\",\"完全支持\",\"4.5-4.8\",\"⚠️ 有限支持\",\"部分功能受限\",\"< 4.5\",\"❌ 不支持\",\"请升级 TypeScript\"]},\"170\":{\"h\":\"获取帮助\"},\"171\":{\"h\":\"1. 检查文档\",\"t\":[\"安装指南\",\"快速开始\",\"配置参考\",\"TypeScript 类型工具\"]},\"172\":{\"h\":\"2. 社区支持\",\"t\":[\"GitHub Issues: 提交问题\",\"讨论区: 参与讨论\"]},\"173\":{\"h\":\"3. 提交 Bug 报告\",\"t\":[\"提交 Bug 时请包含以下信息：\",\"# 收集系统信息 node --version npm --version npx apifox-swagger --version # 收集错误信息 DEBUG=apifox:* npx apifox-swagger export --project-id your-project-id 2>&1 | tee debug.log \",\"Bug 报告模板：\",\"## 环境信息 - Node.js 版本: - npm 版本: - @shixinde/apifox-swagger 版本: - 操作系统: ## 问题描述 [详细描述遇到的问题] ## 重现步骤 1. 2. 3. ## 期望行为 [描述期望的正确行为] ## 实际行为 [描述实际发生的行为] ## 错误日志 \",\"[粘贴完整的错误日志]\",\" ## 配置文件 ```javascript [粘贴相关的配置文件内容] \"]},\"174\":{\"h\":\"其他信息\",\"t\":[\"[任何其他可能有用的信息]\",\" ### 4. 常见问题快速检查清单 在提交问题前，请检查以下项目： - [ ] Node.js 版本是否支持（>= 16.14） - [ ] 访问令牌是否正确设置 - [ ] 项目 ID 是否正确 - [ ] 网络连接是否正常 - [ ] 输出目录是否有写入权限 - [ ] 配置文件语法是否正确 - [ ] 是否尝试了最新版本 - [ ] 是否查看了相关文档 ## 下一步 - [配置参考](./configuration.md) - [TypeScript 类型工具](./typescript.md) - [编程接口使用](./api.md) - [命令行工具使用](./cli.md)\"]},\"175\":{\"h\":\"TypeScript 类型安全工具\",\"t\":[\"@shixinde/apifox-swagger 提供了强大的 TypeScript 类型安全工具，让你可以在编译时就发现 API 调用错误，享受完整的类型提示和自动补全。\"]},\"176\":{\"h\":\"核心概念\"},\"177\":{\"h\":\"类型生成流程\",\"t\":[\"Swagger 文档 → 2. TypeScript 类型定义 → 3. 类型安全的 API 工具\",\"graph LR A[Apifox API] --> B[Swagger JSON] B --> C[TypeScript 类型] C --> D[类型安全工具] D --> E[业务代码] \"]},\"178\":{\"h\":\"核心类型\",\"t\":[\"paths: 从 Swagger 文档生成的所有 API 路径类型\",\"MakeURL<TPaths, U, M>: 完整的 API 信息类型\",\"MakeRequest<TPaths, U, M>: 请求参数类型\",\"MakeResponse<TPaths, U, M>: 响应数据类型\",\"makeURL(): 运行时 URL 构建函数\"]},\"179\":{\"h\":\"快速开始\"},\"180\":{\"h\":\"1. 生成类型文件\",\"t\":[\"# 导出 API 文档并生成类型 apifox-swagger --projectId 2364643 --outdir ./src/types \",\"生成的文件结构：\",\"src/types/ └── swagger/ ├── all.json # Swagger JSON 文档 └── all.ts # TypeScript 类型定义 \"]},\"181\":{\"h\":\"2. 基本使用\",\"t\":[\"// 1. 导入生成的 paths 类型 import type { paths } from './types/swagger/all'; // 2. 导入类型工具 import { makeURL, type MakeURL, type MakeRequest, type MakeResponse } from '@shixinde/apifox-swagger/types'; // 3. 定义 API 类型 type UserLoginAPI = MakeURL<paths, '/api/user/login', 'post'>; // 4. 提取具体类型 type LoginRequest = UserLoginAPI['jsonData']; // 请求体类型 type LoginResponse = UserLoginAPI['responseData']; // 响应体类型 // 5. 创建类型安全的 URL const loginUrl = makeURL<paths, '/api/user/login', 'post'>('/api/user/login', 'post'); \"]},\"182\":{\"h\":\"详细使用指南\"},\"183\":{\"h\":\"1. 类型定义\"},\"184\":{\"h\":\"基本 API 类型定义\",\"t\":[\"import type { paths } from './types/swagger/all'; import { type MakeURL } from '@shixinde/apifox-swagger/types'; // 用户相关 API type UserLoginAPI = MakeURL<paths, '/api/user/login', 'post'>; type UserProfileAPI = MakeURL<paths, '/api/user/profile', 'get'>; type UserUpdateAPI = MakeURL<paths, '/api/user/profile', 'put'>; // 订单相关 API type OrderListAPI = MakeURL<paths, '/api/order/list', 'get'>; type OrderCreateAPI = MakeURL<paths, '/api/order/create', 'post'>; type OrderDetailAPI = MakeURL<paths, '/api/order/{id}', 'get'>; \"]},\"185\":{\"h\":\"提取具体类型\",\"t\":[\"// 从 API 类型中提取具体的请求和响应类型 type LoginRequest = UserLoginAPI['jsonData']; type LoginResponse = UserLoginAPI['responseData']; type OrderListQuery = OrderListAPI['query']; type OrderListResponse = OrderListAPI['responseData']; type OrderDetailParams = OrderDetailAPI['pathParams']; type OrderDetailResponse = OrderDetailAPI['responseData']; \"]},\"186\":{\"h\":\"2. 运行时 URL 构建\"},\"187\":{\"h\":\"基本用法\",\"t\":[\"import { makeURL } from '@shixinde/apifox-swagger/types'; // 创建类型安全的 URL const loginUrl = makeURL<paths, '/api/user/login', 'post'>('/api/user/login', 'post'); const profileUrl = makeURL<paths, '/api/user/profile', 'get'>('/api/user/profile', 'get'); const orderDetailUrl = makeURL<paths, '/api/order/{id}', 'get'>('/api/order/{id}', 'get'); // loginUrl 的类型是 readonly ['/api/user/login', 'post'] console.log(loginUrl); // ['/api/user/login', 'post'] \"]},\"188\":{\"h\":\"动态 URL 构建\",\"t\":[\"// 带路径参数的 URL function buildOrderDetailUrl(orderId: string) { const [path, method] = makeURL<paths, '/api/order/{id}', 'get'>('/api/order/{id}', 'get'); return path.replace('{id}', orderId); } const url = buildOrderDetailUrl('12345'); // '/api/order/12345' \"]},\"189\":{\"h\":\"3. 创建类型安全的 API 客户端\"},\"190\":{\"h\":\"基础 API 客户端\",\"t\":[\"import type { paths } from './types/swagger/all'; import { type MakeRequest, type MakeResponse, type InferMethodFromPaths } from '@shixinde/apifox-swagger/types'; // 通用 API 调用函数 async function apiCall< U extends keyof paths, M extends InferMethodFromPaths<paths, U> >( url: U, method: M, data?: MakeRequest<paths, U, M> ): Promise<MakeResponse<paths, U, M>> { const baseURL = 'https://api.example.com'; // 构建请求 URL let requestUrl = `${baseURL}${url}`; // 处理路径参数 if (data?.pathParams) { Object.entries(data.pathParams).forEach(([key, value]) => { requestUrl = requestUrl.replace(`{${key}}`, String(value)); }); } // 处理查询参数 if (data?.query) { const searchParams = new URLSearchParams(); Object.entries(data.query).forEach(([key, value]) => { if (value !== undefined) { searchParams.append(key, String(value)); } }); requestUrl += `?${searchParams.toString()}`; } // 构建请求选项 const options: RequestInit = { method: method as string, headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${getToken()}` } }; // 处理请求体 if (data?.jsonData) { options.body = JSON.stringify(data.jsonData); } else if (data?.formData) { const formData = new FormData(); Object.entries(data.formData).forEach(([key, value]) => { formData.append(key, value as string | Blob); }); options.body = formData; delete (options.headers as any)['Content-Type']; // 让浏览器自动设置 } const response = await fetch(requestUrl, options); if (!response.ok) { throw new Error(`HTTP ${response.status}: ${response.statusText}`); } return response.json(); } // 获取认证令牌的辅助函数 function getToken(): string { return localStorage.getItem('auth_token') || ''; } \"]},\"191\":{\"h\":\"使用示例\",\"t\":[\"// 用户登录 async function login(username: string, password: string) { const result = await apiCall('/api/user/login', 'post', { jsonData: { username, password } }); // result 的类型会被自动推断为 LoginResponse localStorage.setItem('auth_token', result.token); return result.user; } // 获取用户资料 async function getUserProfile() { const result = await apiCall('/api/user/profile', 'get'); // result 的类型会被自动推断为 UserProfileResponse return result.data; } // 获取订单列表 async function getOrderList(page: number = 1, size: number = 10) { const result = await apiCall('/api/order/list', 'get', { query: { page, size } }); // result 的类型会被自动推断为 OrderListResponse return result.data; } // 获取订单详情 async function getOrderDetail(orderId: string) { const result = await apiCall('/api/order/{id}', 'get', { pathParams: { id: orderId } }); // result 的类型会被自动推断为 OrderDetailResponse return result.data; } // 创建订单 async function createOrder(orderData: any) { const result = await apiCall('/api/order/create', 'post', { jsonData: orderData }); return result.data; } \"]},\"192\":{\"h\":\"4. React Hook 集成\"},\"193\":{\"h\":\"通用 API Hook\",\"t\":[\"import { useState, useEffect, useCallback } from 'react'; import type { paths } from './types/swagger/all'; import { type MakeRequest, type MakeResponse, type InferMethodFromPaths } from '@shixinde/apifox-swagger/types'; // API 状态类型 interface APIState<T> { data: T | null; loading: boolean; error: Error | null; } // 通用 API Hook function useAPI< U extends keyof paths, M extends InferMethodFromPaths<paths, U> >( url: U, method: M, requestData?: MakeRequest<paths, U, M>, options?: { immediate?: boolean; deps?: any[]; } ): APIState<MakeResponse<paths, U, M>> & { refetch: () => Promise<void>; } { const [state, setState] = useState<APIState<MakeResponse<paths, U, M>>>({ data: null, loading: false, error: null }); const fetchData = useCallback(async () => { setState(prev => ({ ...prev, loading: true, error: null })); try { const result = await apiCall(url, method, requestData); setState({ data: result, loading: false, error: null }); } catch (error) { setState({ data: null, loading: false, error: error as Error }); } }, [url, method, JSON.stringify(requestData)]); useEffect(() => { if (options?.immediate !== false) { fetchData(); } }, options?.deps || [fetchData]); return { ...state, refetch: fetchData }; } // 专用 Hook 示例 function useUserProfile() { return useAPI('/api/user/profile', 'get'); } function useOrderList(page: number, size: number) { return useAPI('/api/order/list', 'get', { query: { page, size } }, { deps: [page, size] }); } function useOrderDetail(orderId: string) { return useAPI('/api/order/{id}', 'get', { pathParams: { id: orderId } }, { deps: [orderId] }); } \"]},\"194\":{\"h\":\"React 组件使用示例\",\"t\":[\"import React from 'react'; // 用户资料组件 function UserProfile() { const { data: user, loading, error, refetch } = useUserProfile(); if (loading) return <div>加载中...</div>; if (error) return <div>错误: {error.message}</div>; if (!user) return <div>未找到用户信息</div>; return ( <div> <h1>{user.name}</h1> <p>邮箱: {user.email}</p> <button onClick={refetch}>刷新</button> </div> ); } // 订单列表组件 function OrderList() { const [page, setPage] = React.useState(1); const { data: orders, loading, error } = useOrderList(page, 10); if (loading) return <div>加载中...</div>; if (error) return <div>错误: {error.message}</div>; return ( <div> <h1>订单列表</h1> {orders?.data.map(order => ( <div key={order.id}> <h3>订单 #{order.id}</h3> <p>状态: {order.status}</p> <p>金额: ¥{order.amount}</p> </div> ))} <div> <button onClick={() => setPage(p => Math.max(1, p - 1))} disabled={page <= 1} > 上一页 </button> <span>第 {page} 页</span> <button onClick={() => setPage(p => p + 1)} disabled={!orders?.hasNext} > 下一页 </button> </div> </div> ); } // 订单详情组件 function OrderDetail({ orderId }: { orderId: string }) { const { data: order, loading, error } = useOrderDetail(orderId); if (loading) return <div>加载中...</div>; if (error) return <div>错误: {error.message}</div>; if (!order) return <div>未找到订单</div>; return ( <div> <h1>订单详情</h1> <p>订单号: {order.id}</p> <p>状态: {order.status}</p> <p>金额: ¥{order.amount}</p> <p>创建时间: {order.createdAt}</p> <h2>订单项目</h2> {order.items.map(item => ( <div key={item.id}> <p>{item.name} x {item.quantity}</p> <p>¥{item.price}</p> </div> ))} </div> ); } \"]},\"195\":{\"h\":\"5. 多模块类型管理\"},\"196\":{\"h\":\"统一类型导入（推荐）\",\"t\":[\"// src/types/api.ts - 统一的类型导入文件 import type { paths as UserPaths } from './swagger/user'; import type { paths as OrderPaths } from './swagger/order'; import type { paths as ProductPaths } from './swagger/product'; // 合并所有 API 路径类型 export type AllPaths = UserPaths & OrderPaths & ProductPaths; // 重新导出工具类型 export { makeURL, type MakeURL, type MakeRequest, type MakeResponse, type InferMethodFromPaths } from '@shixinde/apifox-swagger/types'; // 导出具体的业务类型 export type UserLoginAPI = MakeURL<AllPaths, '/api/user/login', 'post'>; export type UserProfileAPI = MakeURL<AllPaths, '/api/user/profile', 'get'>; export type OrderListAPI = MakeURL<AllPaths, '/api/order/list', 'get'>; export type OrderCreateAPI = MakeURL<AllPaths, '/api/order/create', 'post'>; export type ProductListAPI = MakeURL<AllPaths, '/api/product/list', 'get'>; \"]},\"197\":{\"h\":\"业务代码使用\",\"t\":[\"// 在业务代码中使用统一的类型 import { makeURL, type AllPaths, type MakeURL } from '../types/api'; // 现在可以直接使用所有 API 路径 const userLogin = makeURL<AllPaths, '/api/user/login', 'post'>('/api/user/login', 'post'); const orderCreate = makeURL<AllPaths, '/api/order/create', 'post'>('/api/order/create', 'post'); const productList = makeURL<AllPaths, '/api/product/list', 'get'>('/api/product/list', 'get'); // 类型推断也会正常工作 type UserLoginAPI = MakeURL<AllPaths, '/api/user/login', 'post'>; type OrderCreateAPI = MakeURL<AllPaths, '/api/order/create', 'post'>; type ProductListAPI = MakeURL<AllPaths, '/api/product/list', 'get'>; \"]},\"198\":{\"h\":\"6. 高级用法\"},\"199\":{\"h\":\"条件类型和类型守卫\",\"t\":[\"// 检查 API 是否需要认证 type RequiresAuth<T> = T extends { headers: { Authorization: string } } ? true : false; // 检查 API 是否有路径参数 type HasPathParams<T> = T extends { pathParams: any } ? true : false; // 类型守卫函数 function isAuthRequired<U extends keyof paths, M extends InferMethodFromPaths<paths, U>>( url: U, method: M ): boolean { // 这里可以根据实际需求实现逻辑 return !url.includes('/public/'); } // 使用示例 if (isAuthRequired('/api/user/profile', 'get')) { // 需要认证的 API 调用 console.log('需要认证'); } \"]},\"200\":{\"h\":\"自定义类型工具\",\"t\":[\"// 提取所有 GET 请求的路径 type GetPaths<T> = { [K in keyof T]: T[K] extends { get: any } ? K : never; }[keyof T]; // 提取所有 POST 请求的路径 type PostPaths<T> = { [K in keyof T]: T[K] extends { post: any } ? K : never; }[keyof T]; // 使用示例 type AllGetPaths = GetPaths<paths>; // 所有 GET 请求的路径 type AllPostPaths = PostPaths<paths>; // 所有 POST 请求的路径 // 创建只支持 GET 请求的 API 客户端 async function getRequest<U extends GetPaths<paths>>( url: U, data?: MakeRequest<paths, U, 'get'> ): Promise<MakeResponse<paths, U, 'get'>> { return apiCall(url, 'get', data); } \"]},\"201\":{\"h\":\"常见问题和解决方案\"},\"202\":{\"h\":\"1. \\\"类型不能赋给类型 never 的参数\\\" 错误\",\"t\":[\"问题：使用 makeURL 时出现类型错误。\",\"// ❌ 错误的用法 const url = makeURL('/api/user/login', 'post'); // 类型错误 \",\"解决方案：\",\"// ✅ 正确的用法 import type { paths } from './types/swagger/all'; const url = makeURL<paths, '/api/user/login', 'post'>('/api/user/login', 'post'); \",\"检查清单：\",\"是否正确导入了 paths 类型\",\"路径是否存在于 Swagger 文档中\",\"HTTP 方法是否正确\",\"是否已经运行了代码生成命令\"]},\"203\":{\"h\":\"2. 类型推断错误\",\"t\":[\"问题：从 makeURL 返回值推断类型。\",\"// ❌ 错误的类型推断 type API = MakeURL<paths, typeof makeURL('/api/user/login', 'post')[0], typeof makeURL('/api/user/login', 'post')[1]>; \",\"解决方案：\",\"// ✅ 正确的类型推断 type API = MakeURL<paths, '/api/user/login', 'post'>; // 如果需要运行时 URL 构建 const url = makeURL<paths, '/api/user/login', 'post'>('/api/user/login', 'post'); \"]},\"204\":{\"h\":\"3. 路径参数类型问题\",\"t\":[\"问题：路径参数类型不匹配。\",\"// 假设 API 路径是 '/api/user/{id}' const result = await apiCall('/api/user/{id}', 'get', { pathParams: { id: 123 // ❌ 可能需要字符串类型 } }); \",\"解决方案：\",\"// ✅ 检查生成的类型定义 type UserDetailAPI = MakeURL<paths, '/api/user/{id}', 'get'>; type PathParams = UserDetailAPI['pathParams']; // 查看 id 的实际类型 const result = await apiCall('/api/user/{id}', 'get', { pathParams: { id: '123' // 使用正确的类型 } }); \"]},\"205\":{\"h\":\"最佳实践\"},\"206\":{\"h\":\"1. 项目结构\",\"t\":[\"src/ ├── types/ │ ├── api.ts # 统一的类型导入 │ └── swagger/ │ ├── user.ts # 用户模块类型 │ ├── order.ts # 订单模块类型 │ └── product.ts # 产品模块类型 ├── api/ │ ├── client.ts # API 客户端 │ ├── hooks.ts # React Hooks │ └── types.ts # API 相关类型 └── components/ ├── UserProfile.tsx ├── OrderList.tsx └── ProductList.tsx \"]},\"207\":{\"h\":\"2. 类型命名约定\",\"t\":[\"// API 类型命名：[模块][操作]API type UserLoginAPI = MakeURL<paths, '/api/user/login', 'post'>; type UserProfileAPI = MakeURL<paths, '/api/user/profile', 'get'>; type OrderCreateAPI = MakeURL<paths, '/api/order/create', 'post'>; // 请求/响应类型命名：[模块][操作][Request|Response] type UserLoginRequest = UserLoginAPI['jsonData']; type UserLoginResponse = UserLoginAPI['responseData']; // Hook 命名：use[模块][操作] function useUserLogin() { /* ... */ } function useOrderList() { /* ... */ } \"]},\"208\":{\"h\":\"3. 错误处理\",\"t\":[\"// 统一的错误类型 interface APIError { code: string; message: string; details?: any; } // 错误处理装饰器 function withErrorHandling<T extends (...args: any[]) => Promise<any>>( fn: T ): T { return (async (...args: any[]) => { try { return await fn(...args); } catch (error) { // 统一错误处理逻辑 console.error('API 调用失败:', error); throw error; } }) as T; } // 使用示例 const safeApiCall = withErrorHandling(apiCall); \"]},\"209\":{\"h\":\"4. 自动更新\",\"t\":[\"{ \\\"scripts\\\": { \\\"dev\\\": \\\"npm run export-api && vite\\\", \\\"build\\\": \\\"npm run export-api && vite build\\\", \\\"export-api\\\": \\\"apifox-swagger --projectId 2364643 --outdir ./src/types\\\", \\\"watch-api\\\": \\\"nodemon --watch apifox.config.js --exec \\\\\\\"npm run export-api\\\\\\\"\\\" } } \"]},\"210\":{\"h\":\"下一步\",\"t\":[\"配置文件详解\",\"故障排除指南\",\"编程接口使用\",\"命令行工具使用\"]},\"211\":{\"h\":\"Hello VuePress\",\"t\":[\"/** * Phone number verification */ export declare const mobileCheck: (value: string) => boolean; export { } \"]},\"212\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"自动更新\",{\"0\":{\"209\":1}}],[\"自定义类型工具\",{\"0\":{\"200\":1}}],[\"命名\",{\"1\":{\"207\":1}}],[\"命令\",{\"1\":{\"116\":1}}],[\"命令行参数\",{\"1\":{\"96\":1}}],[\"命令行选项\",{\"0\":{\"43\":1}}],[\"命令行工具详细用法\",{\"1\":{\"132\":1}}],[\"命令行工具使用\",{\"1\":{\"40\":1,\"109\":1,\"174\":1,\"210\":1}}],[\"命令行工具\",{\"0\":{\"41\":1,\"124\":1},\"1\":{\"0\":1,\"3\":1,\"7\":1,\"118\":1}}],[\"操作\",{\"1\":{\"207\":3}}],[\"操作系统\",{\"1\":{\"173\":1}}],[\"│\",{\"1\":{\"206\":8}}],[\"假设\",{\"1\":{\"204\":1}}],[\"方法是否正确\",{\"1\":{\"202\":1}}],[\"方式二\",{\"0\":{\"125\":1}}],[\"方式一\",{\"0\":{\"124\":1}}],[\"问题\",{\"1\":{\"202\":1,\"203\":1,\"204\":1}}],[\"问题描述\",{\"1\":{\"173\":1}}],[\"的实际类型\",{\"1\":{\"204\":1}}],[\"的参数\",{\"0\":{\"202\":1}}],[\"的类型会被自动推断为\",{\"1\":{\"191\":4}}],[\"的类型是\",{\"1\":{\"187\":1}}],[\"所有\",{\"1\":{\"200\":2}}],[\"所有模块导出完成\",{\"1\":{\"55\":1}}],[\"k\",{\"1\":{\"200\":6}}],[\"key=\",{\"1\":{\"194\":2}}],[\"keyof\",{\"1\":{\"190\":1,\"193\":1,\"199\":1,\"200\":4}}],[\"key\",{\"1\":{\"39\":2,\"190\":6}}],[\"这里可以根据实际需求实现逻辑\",{\"1\":{\"199\":1}}],[\"条件类型和类型守卫\",{\"0\":{\"199\":1}}],[\"6\",{\"0\":{\"198\":1}}],[\"60\",{\"1\":{\"139\":1}}],[\"60000\",{\"1\":{\"83\":1,\"93\":1,\"139\":1}}],[\"现在可以直接使用所有\",{\"1\":{\"197\":1}}],[\"合并所有\",{\"1\":{\"196\":1}}],[\"统一错误处理逻辑\",{\"1\":{\"208\":1}}],[\"统一的错误类型\",{\"1\":{\"208\":1}}],[\"统一的类型导入\",{\"1\":{\"206\":1}}],[\"统一的类型导入文件\",{\"1\":{\"196\":1}}],[\"统一类型导入\",{\"0\":{\"196\":1}}],[\"页<\",{\"1\":{\"194\":1}}],[\"上一页\",{\"1\":{\"194\":1}}],[\"¥\",{\"1\":{\"194\":2}}],[\"组件使用示例\",{\"0\":{\"194\":1}}],[\"组件库\",{\"1\":{\"10\":1}}],[\"专用\",{\"1\":{\"193\":1}}],[\"状态类型\",{\"1\":{\"193\":1}}],[\"处理请求体\",{\"1\":{\"190\":1}}],[\"处理查询参数\",{\"1\":{\"190\":1}}],[\"处理路径参数\",{\"1\":{\"190\":1}}],[\"通用\",{\"0\":{\"193\":1},\"1\":{\"190\":1,\"193\":1}}],[\"通知系统\",{\"1\":{\"108\":1}}],[\"通知模块\",{\"1\":{\"94\":1}}],[\"带路径参数的\",{\"1\":{\"188\":1}}],[\"动态\",{\"0\":{\"188\":1}}],[\"动态配置\",{\"0\":{\"28\":1,\"98\":1}}],[\"构建请求选项\",{\"1\":{\"190\":1}}],[\"构建请求\",{\"1\":{\"190\":1}}],[\"构建\",{\"0\":{\"186\":1,\"188\":1},\"1\":{\"203\":1}}],[\"构建函数\",{\"1\":{\"178\":1}}],[\"构建应用\",{\"1\":{\"163\":1}}],[\"信息类型\",{\"1\":{\"178\":1}}],[\"路径是\",{\"1\":{\"204\":1}}],[\"路径是否存在于\",{\"1\":{\"202\":1}}],[\"路径参数类型不匹配\",{\"1\":{\"204\":1}}],[\"路径参数类型问题\",{\"0\":{\"204\":1}}],[\"路径\",{\"1\":{\"197\":1}}],[\"路径类型\",{\"1\":{\"178\":1,\"196\":1}}],[\"路径分隔符问题\",{\"0\":{\"161\":1}}],[\"业务代码使用\",{\"0\":{\"197\":1}}],[\"业务代码\",{\"1\":{\"177\":1}}],[\"业务模块\",{\"1\":{\"107\":1}}],[\"核心类型\",{\"0\":{\"178\":1}}],[\"核心概念\",{\"0\":{\"176\":1}}],[\"核心模块\",{\"1\":{\"156\":1}}],[\"享受完整的类型提示和自动补全\",{\"1\":{\"175\":1}}],[\"享受类型安全\",{\"1\":{\"3\":1}}],[\"任何其他可能有用的信息\",{\"1\":{\"174\":1}}],[\"粘贴相关的配置文件内容\",{\"1\":{\"173\":1}}],[\"粘贴完整的错误日志\",{\"1\":{\"173\":1}}],[\"实际行为\",{\"1\":{\"173\":1}}],[\"实现简单的缓存机制\",{\"1\":{\"63\":1}}],[\"期望行为\",{\"1\":{\"173\":1}}],[\"收集错误信息\",{\"1\":{\"173\":1}}],[\"收集系统信息\",{\"1\":{\"173\":1}}],[\"收到响应\",{\"1\":{\"152\":1}}],[\"时出现类型错误\",{\"1\":{\"202\":1}}],[\"时请包含以下信息\",{\"1\":{\"173\":1}}],[\"时可能遇到的常见问题\",{\"1\":{\"133\":1}}],[\"讨论区\",{\"1\":{\"172\":1}}],[\"社区支持\",{\"0\":{\"172\":1}}],[\"部分功能受限\",{\"1\":{\"169\":1}}],[\"9+\",{\"1\":{\"169\":1}}],[\"❌\",{\"1\":{\"168\":1,\"169\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"有限支持\",{\"1\":{\"168\":1,\"169\":1}}],[\"⚠️\",{\"1\":{\"168\":1,\"169\":1}}],[\"✅\",{\"1\":{\"168\":2,\"169\":2,\"202\":1,\"203\":1,\"204\":1}}],[\"x\",{\"1\":{\"168\":4,\"169\":1,\"194\":1}}],[\"说明\",{\"1\":{\"168\":1,\"169\":1}}],[\"说明安装成功\",{\"1\":{\"117\":1}}],[\"版本是否支持\",{\"1\":{\"174\":1}}],[\"版本\",{\"0\":{\"168\":1,\"169\":1},\"1\":{\"168\":1,\"169\":1,\"173\":3}}],[\"版本兼容性\",{\"0\":{\"167\":1}}],[\"8\",{\"1\":{\"163\":1,\"169\":1}}],[\"复制源码\",{\"1\":{\"163\":1}}],[\"复制令牌并妥善保存\",{\"1\":{\"121\":1}}],[\"执行策略\",{\"0\":{\"162\":1}}],[\"执行导出\",{\"1\":{\"39\":1}}],[\"跨平台路径\",{\"1\":{\"161\":1}}],[\"而不是硬编码路径\",{\"1\":{\"161\":1}}],[\"环境信息\",{\"1\":{\"173\":1}}],[\"环境\",{\"0\":{\"160\":1,\"163\":1,\"164\":1}}],[\"环境相关问题\",{\"0\":{\"159\":1}}],[\"环境变量参考\",{\"0\":{\"97\":1}}],[\"环境变量\",{\"0\":{\"67\":1},\"1\":{\"96\":1,\"97\":1}}],[\"环境变量配合使用\",{\"0\":{\"52\":1}}],[\"环境变量管理\",{\"0\":{\"37\":1}}],[\"分模块导出\",{\"1\":{\"158\":1}}],[\"减少批处理大小\",{\"1\":{\"157\":1}}],[\"降低并发数\",{\"1\":{\"157\":2}}],[\"内存限制\",{\"1\":{\"157\":1}}],[\"内存使用过高\",{\"0\":{\"157\":1}}],[\"大型项目或并发过高\",{\"1\":{\"157\":1}}],[\"大型项目模板\",{\"0\":{\"108\":1}}],[\"只导出需要的模块\",{\"1\":{\"156\":1}}],[\"只导出特定模块进行快速开发\",{\"1\":{\"93\":1}}],[\"只导出特定文件夹的\",{\"1\":{\"51\":1}}],[\"性能问题\",{\"0\":{\"155\":1}}],[\"性能优化\",{\"0\":{\"61\":1}}],[\"响应类型命名\",{\"1\":{\"207\":1}}],[\"响应体类型\",{\"1\":{\"181\":1}}],[\"响应数据类型\",{\"1\":{\"178\":1}}],[\"响应数据\",{\"1\":{\"154\":1}}],[\"响应状态\",{\"1\":{\"154\":1}}],[\"连接失败\",{\"1\":{\"154\":1}}],[\"连接成功\",{\"1\":{\"154\":1}}],[\"测试连接\",{\"0\":{\"154\":1}}],[\"未设置\",{\"1\":{\"153\":1}}],[\"已设置\",{\"1\":{\"153\":1}}],[\"当前配置\",{\"1\":{\"153\":1}}],[\"发送请求\",{\"1\":{\"152\":1}}],[\"添加请求拦截器\",{\"1\":{\"152\":1}}],[\"添加必要的文档和测试\",{\"1\":{\"9\":1}}],[\"启用调试模式\",{\"1\":{\"151\":1}}],[\"启用详细日志\",{\"0\":{\"151\":1}}],[\"启用详细日志输出\",{\"1\":{\"60\":1}}],[\"启动\",{\"1\":{\"148\":2}}],[\"下一页\",{\"1\":{\"194\":1}}],[\"下一步\",{\"0\":{\"40\":1,\"64\":1,\"109\":1,\"118\":1,\"132\":1,\"210\":1},\"1\":{\"174\":1}}],[\"下载并安装\",{\"1\":{\"148\":1}}],[\"客户端中打开对应项目\",{\"1\":{\"149\":1}}],[\"客户端\",{\"0\":{\"189\":1,\"190\":1},\"1\":{\"148\":3,\"200\":1,\"206\":1}}],[\"客户端未安装或未运行\",{\"1\":{\"148\":1}}],[\"客户端导出\",{\"1\":{\"47\":1,\"78\":1}}],[\"接口定义\",{\"1\":{\"146\":1}}],[\"正确的类型推断\",{\"1\":{\"203\":1}}],[\"正确的用法\",{\"1\":{\"146\":1,\"202\":1}}],[\"正在导出\",{\"1\":{\"35\":1}}],[\"相关类型\",{\"1\":{\"206\":1}}],[\"相关错误\",{\"0\":{\"144\":1}}],[\"相关项目\",{\"0\":{\"10\":1},\"1\":{\"1\":1}}],[\"755\",{\"1\":{\"143\":1}}],[\"修改权限\",{\"1\":{\"143\":1}}],[\"手动创建目录\",{\"1\":{\"142\":1}}],[\"手动触发\",{\"1\":{\"56\":1}}],[\"到最新版本\",{\"1\":{\"140\":1}}],[\"验证配置\",{\"0\":{\"153\":1}}],[\"验证\",{\"1\":{\"140\":1}}],[\"验证安装\",{\"0\":{\"117\":1}}],[\"临时禁用\",{\"1\":{\"140\":1}}],[\"证书验证失败\",{\"1\":{\"140\":1}}],[\"秒\",{\"1\":{\"139\":1}}],[\"秒前更新\",{\"1\":{\"63\":1}}],[\"增加\",{\"1\":{\"157\":1}}],[\"增加重试次数\",{\"1\":{\"139\":1}}],[\"增加到\",{\"1\":{\"139\":1}}],[\"增加超时时间和重试次数\",{\"1\":{\"139\":1}}],[\"联系项目管理员添加权限\",{\"1\":{\"137\":1}}],[\"确认你有项目的访问权限\",{\"1\":{\"137\":1}}],[\"确保项目已同步到本地\",{\"1\":{\"149\":1}}],[\"确保客户端版本支持\",{\"1\":{\"148\":1}}],[\"确保已导出类型文件\",{\"1\":{\"145\":1}}],[\"确保网络连接正常\",{\"1\":{\"131\":1}}],[\"确保你有该项目的访问权限\",{\"1\":{\"130\":1}}],[\"确保你的访问令牌是有效的\",{\"1\":{\"129\":1}}],[\"确保有项目访问权限\",{\"1\":{\"59\":1}}],[\"令牌权限不足或项目访问受限\",{\"1\":{\"137\":1}}],[\"令牌认证失败\",{\"0\":{\"129\":1}}],[\"更新环境变量\",{\"1\":{\"136\":1}}],[\"更多配置选项请查看\",{\"1\":{\"8\":1}}],[\"更多详细信息请查看\",{\"1\":{\"6\":1}}],[\"重新导出工具类型\",{\"1\":{\"196\":1}}],[\"重新获取令牌\",{\"1\":{\"136\":1}}],[\"重现步骤\",{\"1\":{\"173\":1}}],[\"重试次数过多\",{\"1\":{\"104\":1}}],[\"重试次数\",{\"1\":{\"97\":1}}],[\"重试机制\",{\"0\":{\"31\":1}}],[\"原因\",{\"1\":{\"136\":1,\"137\":1,\"139\":1,\"140\":1,\"142\":1,\"143\":1,\"145\":1,\"146\":1,\"148\":1,\"149\":1,\"156\":1,\"157\":1,\"158\":1}}],[\"没有代理或防火墙限制\",{\"1\":{\"131\":1}}],[\"并且有项目的访问权限\",{\"1\":{\"129\":1}}],[\"并行导出\",{\"0\":{\"25\":1,\"62\":1},\"1\":{\"156\":1}}],[\"定义\",{\"1\":{\"127\":1,\"181\":1}}],[\"定时导出失败\",{\"1\":{\"34\":1}}],[\"定时导出完成\",{\"1\":{\"34\":1}}],[\"定时任务集成\",{\"0\":{\"34\":1}}],[\"├──\",{\"1\":{\"126\":1,\"180\":1,\"206\":9}}],[\"└──\",{\"1\":{\"126\":2,\"180\":2,\"206\":5}}],[\"你会在输出目录下看到\",{\"1\":{\"126\":1}}],[\"你可以\",{\"1\":{\"118\":1}}],[\"你可以通过以下命令验证安装是否成功\",{\"1\":{\"117\":1}}],[\"第一次使用\",{\"0\":{\"123\":1}}],[\"就是项目\",{\"1\":{\"122\":1}}],[\"例如\",{\"1\":{\"122\":1}}],[\"→\",{\"1\":{\"121\":1,\"177\":2}}],[\"进入个人设置\",{\"1\":{\"121\":1,\"136\":1}}],[\"网络连接是否正常\",{\"1\":{\"174\":1}}],[\"网络连接问题或防火墙阻止\",{\"1\":{\"139\":1}}],[\"网络连接问题\",{\"0\":{\"131\":1}}],[\"网络配置\",{\"1\":{\"139\":1}}],[\"网络相关错误\",{\"0\":{\"138\":1}}],[\"网络选项\",{\"0\":{\"81\":1}}],[\"网页版\",{\"1\":{\"121\":1,\"136\":1}}],[\"登录\",{\"1\":{\"121\":1,\"136\":1}}],[\"获取订单详情\",{\"1\":{\"191\":1}}],[\"获取订单列表\",{\"1\":{\"191\":1}}],[\"获取用户资料\",{\"1\":{\"191\":1}}],[\"获取认证令牌的辅助函数\",{\"1\":{\"190\":1}}],[\"获取帮助\",{\"0\":{\"170\":1}}],[\"获取项目\",{\"0\":{\"122\":1}}],[\"获取\",{\"0\":{\"121\":1}}],[\"前置准备\",{\"0\":{\"120\":1}}],[\"本文档帮助你解决使用\",{\"1\":{\"133\":1}}],[\"本指南将帮助你快速上手\",{\"1\":{\"119\":1}}],[\"本地\",{\"1\":{\"148\":1}}],[\"本地模式错误\",{\"0\":{\"147\":1}}],[\"本地模式不需要\",{\"1\":{\"95\":1}}],[\"本地开发配置\",{\"0\":{\"95\":1}}],[\"本地客户端导出\",{\"1\":{\"0\":1}}],[\"学习命令行工具的详细用法\",{\"1\":{\"118\":1}}],[\"了解基本使用方法\",{\"1\":{\"118\":1}}],[\"全局安装\",{\"0\":{\"116\":1}}],[\"系统要求\",{\"0\":{\"111\":1}}],[\"产品管理\",{\"1\":{\"108\":1}}],[\"产品模块类型\",{\"1\":{\"206\":1}}],[\"产品模块导出完成\",{\"1\":{\"55\":1}}],[\"产品模块\",{\"1\":{\"24\":1,\"25\":1,\"55\":1,\"62\":1,\"92\":1,\"94\":1,\"99\":1,\"101\":1}}],[\"订单详情组件\",{\"1\":{\"194\":1}}],[\"订单列表组件\",{\"1\":{\"194\":1}}],[\"订单相关\",{\"1\":{\"184\":1}}],[\"订单管理\",{\"1\":{\"108\":2}}],[\"订单模块类型\",{\"1\":{\"206\":1}}],[\"订单模块导出完成\",{\"1\":{\"55\":1}}],[\"订单模块\",{\"1\":{\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"53\":1,\"55\":1,\"62\":1,\"69\":1,\"92\":1,\"94\":1,\"99\":1,\"100\":1,\"101\":1,\"158\":1}}],[\"小型项目模板\",{\"0\":{\"106\":1}}],[\"超时时间过短\",{\"1\":{\"104\":1}}],[\"将自动创建`\",{\"1\":{\"104\":1}}],[\"将命令添加到\",{\"1\":{\"53\":1}}],[\"不支持\",{\"1\":{\"168\":1,\"169\":1}}],[\"不推荐\",{\"1\":{\"143\":1}}],[\"不推荐用于生产环境\",{\"1\":{\"140\":1}}],[\"不存在\",{\"1\":{\"104\":1}}],[\"不包含扩展名\",{\"1\":{\"86\":1}}],[\"或者使用\",{\"1\":{\"143\":1,\"162\":1}}],[\"或者在配置中启用自动创建\",{\"1\":{\"142\":1}}],[\"或者更新\",{\"1\":{\"140\":1}}],[\"或使用环境变量\",{\"1\":{\"125\":1}}],[\"或直接在命令中指定令牌\",{\"1\":{\"124\":1}}],[\"或更高版本\",{\"1\":{\"111\":1}}],[\"或\",{\"0\":{\"139\":1},\"1\":{\"103\":1,\"111\":1}}],[\"需要认证\",{\"1\":{\"199\":1}}],[\"需要认证的\",{\"1\":{\"199\":1}}],[\"需要\",{\"1\":{\"103\":1,\"168\":2}}],[\"缺少\",{\"1\":{\"103\":1}}],[\"除非使用本地模式\",{\"1\":{\"103\":2}}],[\"除了命令行工具\",{\"1\":{\"13\":1}}],[\"根据用户加载不同的模块\",{\"1\":{\"101\":1}}],[\"根据错误类型进行不同处理\",{\"1\":{\"30\":1}}],[\"新功能模块\",{\"1\":{\"100\":1}}],[\"功能分支项目\",{\"1\":{\"100\":1}}],[\"对应配置\",{\"1\":{\"97\":1}}],[\"对于大型项目\",{\"1\":{\"62\":1}}],[\"字段`\",{\"1\":{\"103\":1}}],[\"字段\",{\"1\":{\"96\":1}}],[\"中包含项目\",{\"1\":{\"122\":1}}],[\"中打开你的项目\",{\"1\":{\"122\":1}}],[\"中型项目模板\",{\"0\":{\"107\":1}}],[\"中的\",{\"1\":{\"96\":1,\"122\":1}}],[\"中使用\",{\"0\":{\"53\":1},\"1\":{\"35\":1,\"56\":1}}],[\"从\",{\"1\":{\"119\":1,\"178\":1,\"185\":1,\"203\":1}}],[\"从高到低\",{\"1\":{\"96\":1}}],[\"从本地\",{\"1\":{\"47\":1}}],[\"生产项目\",{\"1\":{\"100\":1}}],[\"生产环境配置\",{\"0\":{\"94\":1},\"1\":{\"94\":1}}],[\"生成类型文件\",{\"0\":{\"180\":1}}],[\"生成新的令牌\",{\"1\":{\"136\":1}}],[\"生成文件\",{\"1\":{\"22\":1}}],[\"生成完整的类型定义\",{\"1\":{\"3\":1}}],[\"生成的文件结构\",{\"1\":{\"180\":1}}],[\"生成的文件列表\",{\"1\":{\"20\":1}}],[\"生成的类型文件过大\",{\"1\":{\"158\":1}}],[\"生成的\",{\"1\":{\"0\":1}}],[\"开发项目\",{\"1\":{\"100\":1}}],[\"开发环境只导出核心模块\",{\"1\":{\"99\":1,\"108\":1}}],[\"开发环境特定配置\",{\"1\":{\"93\":1}}],[\"开发环境配置\",{\"0\":{\"93\":1}}],[\"开始导出\",{\"1\":{\"38\":1,\"55\":1}}],[\"开始定时导出\",{\"1\":{\"34\":1}}],[\"也可以使用文件夹名称\",{\"1\":{\"92\":1}}],[\"输出格式\",{\"1\":{\"87\":1}}],[\"输出文件名\",{\"1\":{\"86\":1}}],[\"输出选项\",{\"0\":{\"85\":1}}],[\"输出目录是否有写入权限\",{\"1\":{\"174\":1}}],[\"输出目录存在\",{\"1\":{\"153\":1}}],[\"输出目录不存在\",{\"1\":{\"142\":1}}],[\"输出目录\",{\"1\":{\"20\":1,\"89\":1,\"97\":1}}],[\"输出目录路径\",{\"1\":{\"19\":1,\"44\":1,\"76\":1}}],[\"失败重试次数\",{\"1\":{\"84\":1}}],[\"毫秒\",{\"1\":{\"83\":1}}],[\"基于用户的配置\",{\"0\":{\"101\":1}}],[\"基于分支的配置\",{\"0\":{\"100\":1}}],[\"基于环境的配置\",{\"0\":{\"99\":1}}],[\"基础\",{\"0\":{\"190\":1},\"1\":{\"82\":1,\"97\":1}}],[\"基本\",{\"0\":{\"184\":1}}],[\"基本验证\",{\"0\":{\"103\":1}}],[\"基本选项\",{\"0\":{\"73\":1}}],[\"基本配置\",{\"1\":{\"69\":1}}],[\"基本语法\",{\"0\":{\"42\":1}}],[\"基本错误处理\",{\"0\":{\"30\":1}}],[\"基本导出\",{\"0\":{\"22\":1,\"49\":1},\"1\":{\"124\":1}}],[\"基本用法\",{\"0\":{\"14\":1,\"187\":1}}],[\"基本使用\",{\"0\":{\"6\":1,\"181\":1},\"1\":{\"1\":1}}],[\"注意\",{\"1\":{\"75\":1}}],[\"云端模式\",{\"1\":{\"74\":1,\"75\":1}}],[\"云端项目导出\",{\"1\":{\"0\":1}}],[\"多模块类型管理\",{\"0\":{\"195\":1}}],[\"多模块项目配置\",{\"0\":{\"92\":1}}],[\"多模块配置数组\",{\"1\":{\"89\":1}}],[\"多模块配置\",{\"0\":{\"88\":1},\"1\":{\"69\":1}}],[\"多种导出方式\",{\"1\":{\"3\":1}}],[\"推荐新手\",{\"0\":{\"124\":1}}],[\"推荐\",{\"0\":{\"69\":1,\"196\":1},\"1\":{\"168\":1,\"169\":1}}],[\">刷新<\",{\"1\":{\"194\":1}}],[\">=\",{\"1\":{\"174\":1}}],[\">>\",{\"1\":{\"146\":1,\"200\":1}}],[\">\",{\"1\":{\"63\":1,\"103\":1,\"104\":1,\"127\":2,\"136\":1,\"146\":1,\"177\":4,\"181\":2,\"184\":6,\"187\":3,\"188\":1,\"190\":1,\"193\":1,\"194\":4,\"196\":5,\"197\":6,\"200\":1,\"202\":1,\"203\":3,\"204\":1,\"207\":3}}],[\"+=\",{\"1\":{\"190\":1}}],[\"+\",{\"1\":{\"63\":1,\"194\":1}}],[\"+x\",{\"1\":{\"55\":1}}],[\"支付系统\",{\"1\":{\"108\":1}}],[\"支付相关接口\",{\"1\":{\"92\":1}}],[\"支付模块\",{\"1\":{\"62\":1,\"92\":1,\"94\":1,\"101\":1}}],[\"支持状态\",{\"1\":{\"168\":1,\"169\":1}}],[\"支持多种导出模式和配置选项\",{\"1\":{\"41\":1}}],[\"支持多种导出方式\",{\"1\":{\"0\":1}}],[\"支持多种配置方式\",{\"1\":{\"8\":1,\"65\":1}}],[\"支持并行导出和缓存机制\",{\"1\":{\"3\":1}}],[\"支持\",{\"1\":{\"3\":1,\"168\":1,\"169\":1}}],[\"支持在\",{\"1\":{\"3\":1}}],[\"支持按文件夹分模块导出\",{\"1\":{\"3\":1}}],[\"支持云端项目和本地客户端导出\",{\"1\":{\"3\":1}}],[\"支持将\",{\"1\":{\"0\":1}}],[\"可能需要字符串类型\",{\"1\":{\"204\":1}}],[\"可能需要配置代理\",{\"1\":{\"139\":1}}],[\"可能导致长时间等待\",{\"1\":{\"104\":1}}],[\"可能导致请求失败\",{\"1\":{\"104\":1}}],[\"可以全局安装\",{\"1\":{\"116\":1}}],[\"可以通过环境变量\",{\"1\":{\"75\":1}}],[\"可以并行导出不同模块\",{\"1\":{\"62\":1}}],[\"可选\",{\"1\":{\"45\":1,\"89\":2}}],[\"可选参数\",{\"1\":{\"19\":1}}],[\"设置调试模式\",{\"1\":{\"151\":1}}],[\"设置调试环境变量\",{\"1\":{\"60\":1}}],[\"设置\",{\"1\":{\"75\":1}}],[\"设置环境变量\",{\"1\":{\"52\":1}}],[\"设置环境变量后简化命令\",{\"1\":{\"52\":1}}],[\"调用失败\",{\"1\":{\"208\":1}}],[\"调用\",{\"1\":{\"199\":1}}],[\"调用函数\",{\"1\":{\"190\":1}}],[\"调用错误\",{\"1\":{\"175\":1}}],[\"调用方法\",{\"1\":{\"7\":1}}],[\"调试技巧\",{\"0\":{\"150\":1}}],[\"调试模式\",{\"0\":{\"60\":1}}],[\"稍后重试或联系支持\",{\"1\":{\"59\":1}}],[\"服务器错误\",{\"1\":{\"59\":1}}],[\"检查生成的类型定义\",{\"1\":{\"204\":1}}],[\"检查清单\",{\"1\":{\"202\":1}}],[\"检查文档\",{\"0\":{\"171\":1}}],[\"检查文件系统\",{\"1\":{\"153\":1}}],[\"检查文件是否存在\",{\"1\":{\"145\":1}}],[\"检查文件权限\",{\"1\":{\"143\":1}}],[\"检查环境变量\",{\"1\":{\"153\":1}}],[\"检查网络请求\",{\"0\":{\"152\":1}}],[\"检查本地服务是否运行\",{\"1\":{\"148\":1}}],[\"检查路径是否在类型定义中存在\",{\"1\":{\"146\":1}}],[\"检查\",{\"1\":{\"145\":1,\"199\":2}}],[\"检查令牌是否有足够的权限\",{\"1\":{\"137\":1}}],[\"检查令牌是否正确设置\",{\"1\":{\"136\":1}}],[\"检查重试次数\",{\"1\":{\"104\":1}}],[\"检查超时时间\",{\"1\":{\"104\":1}}],[\"检查输出目录是否存在\",{\"1\":{\"104\":1}}],[\"检查模块配置\",{\"1\":{\"103\":1}}],[\"检查必需字段\",{\"1\":{\"103\":1}}],[\"检查通配符匹配\",{\"1\":{\"100\":1}}],[\"检查项目\",{\"1\":{\"59\":1,\"130\":1,\"149\":1}}],[\"检查访问令牌是否正确\",{\"1\":{\"59\":1}}],[\"解决方案\",{\"1\":{\"59\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":1,\"142\":1,\"143\":1,\"145\":1,\"146\":1,\"148\":1,\"149\":1,\"156\":1,\"157\":1,\"158\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"错误的类型推断\",{\"1\":{\"203\":1}}],[\"错误的用法\",{\"1\":{\"146\":1,\"202\":1}}],[\"错误日志\",{\"1\":{\"173\":1}}],[\"错误\",{\"0\":{\"130\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":1,\"142\":1,\"143\":1,\"145\":1,\"146\":1,\"148\":1,\"149\":1,\"202\":1}}],[\"错误码\",{\"1\":{\"59\":1}}],[\"错误处理装饰器\",{\"1\":{\"208\":1}}],[\"错误处理\",{\"0\":{\"29\":1,\"58\":1,\"208\":1}}],[\"常见错误\",{\"0\":{\"134\":1}}],[\"常见错误码\",{\"0\":{\"59\":1}}],[\"常见问题快速检查清单\",{\"1\":{\"174\":1}}],[\"常见问题\",{\"0\":{\"128\":1}}],[\"常见问题和解决方案\",{\"0\":{\"201\":1},\"1\":{\"7\":1}}],[\"变化\",{\"1\":{\"57\":1}}],[\"监听\",{\"1\":{\"57\":1}}],[\"监听配置文件变化\",{\"1\":{\"57\":1}}],[\"监听文件变化自动导出\",{\"0\":{\"57\":1}}],[\"quantity\",{\"1\":{\"194\":1}}],[\"query\",{\"1\":{\"185\":1,\"190\":2,\"191\":1,\"193\":1}}],[\"quiet\",{\"1\":{\"56\":1,\"165\":1}}],[\"qq\",{\"1\":{\"12\":1}}],[\"|\",{\"1\":{\"56\":2,\"79\":1,\"80\":1,\"87\":2,\"165\":2,\"166\":1,\"173\":1,\"190\":1,\"193\":2}}],[\"||\",{\"1\":{\"37\":2,\"56\":1,\"101\":1,\"154\":1,\"165\":1,\"190\":1,\"193\":1}}],[\"点\",{\"1\":{\"165\":1}}],[\"点运行\",{\"1\":{\"56\":1}}],[\"点自动导出\",{\"1\":{\"34\":1}}],[\"与\",{\"0\":{\"56\":1}}],[\"高级配置\",{\"1\":{\"69\":1}}],[\"高级用法\",{\"0\":{\"54\":1,\"198\":1}}],[\"高性能\",{\"1\":{\"3\":1}}],[\"runs\",{\"1\":{\"56\":1,\"165\":1}}],[\"run\",{\"1\":{\"53\":3,\"56\":3,\"57\":1,\"163\":4,\"165\":3,\"209\":3}}],[\"react\",{\"0\":{\"192\":1,\"194\":1},\"1\":{\"193\":1,\"194\":3,\"206\":1}}],[\"readonly\",{\"1\":{\"187\":1}}],[\"readfile\",{\"1\":{\"39\":1}}],[\"refetch\",{\"1\":{\"193\":2,\"194\":2}}],[\"ref\",{\"1\":{\"166\":1}}],[\"remotesigned\",{\"1\":{\"162\":1}}],[\"reject\",{\"1\":{\"140\":1,\"152\":1}}],[\"replace\",{\"1\":{\"100\":1,\"188\":1,\"190\":1}}],[\"retries\",{\"0\":{\"84\":1},\"1\":{\"69\":1,\"93\":1,\"94\":1,\"95\":1,\"97\":2,\"99\":1,\"104\":1,\"108\":1,\"139\":1}}],[\"return\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"28\":3,\"30\":1,\"31\":1,\"38\":1,\"39\":5,\"100\":3,\"103\":1,\"104\":1,\"108\":2,\"152\":3,\"188\":1,\"190\":2,\"191\":5,\"193\":4,\"194\":11,\"199\":1,\"200\":1,\"208\":2}}],[\"recursive\",{\"1\":{\"39\":1,\"142\":1}}],[\"req\",{\"1\":{\"33\":2}}],[\"requiresauth<t>\",{\"1\":{\"199\":1}}],[\"require\",{\"1\":{\"15\":1}}],[\"request|response\",{\"1\":{\"207\":1}}],[\"requestdata\",{\"1\":{\"193\":3}}],[\"requestinit\",{\"1\":{\"190\":1}}],[\"requesturl\",{\"1\":{\"190\":5}}],[\"request\",{\"1\":{\"9\":1,\"152\":5}}],[\"response\",{\"1\":{\"152\":5,\"154\":6,\"190\":5}}],[\"responsedata\",{\"1\":{\"127\":1,\"181\":1,\"185\":3,\"207\":1}}],[\"res\",{\"1\":{\"33\":3}}],[\"resolve\",{\"1\":{\"31\":2}}],[\"results\",{\"1\":{\"24\":4,\"25\":3,\"28\":7}}],[\"result\",{\"1\":{\"16\":2,\"22\":2,\"23\":2,\"24\":2,\"25\":7,\"28\":3,\"30\":2,\"31\":2,\"33\":2,\"34\":2,\"38\":3,\"39\":5,\"125\":2,\"151\":1,\"191\":15,\"193\":2,\"204\":2}}],[\"运行时\",{\"0\":{\"186\":1},\"1\":{\"178\":1}}],[\"运行时验证\",{\"0\":{\"104\":1}}],[\"运行命令\",{\"1\":{\"60\":1,\"151\":1}}],[\"运行脚本\",{\"1\":{\"55\":1,\"125\":1}}],[\"运行\",{\"1\":{\"53\":1}}],[\"然后使用\",{\"1\":{\"53\":1}}],[\"5\",{\"0\":{\"53\":1,\"95\":1,\"147\":1,\"195\":1},\"1\":{\"84\":1,\"94\":1,\"139\":1,\"169\":3,\"181\":1}}],[\"5000\",{\"1\":{\"104\":1}}],[\"500\",{\"1\":{\"33\":1,\"59\":1}}],[\"同时指定文件夹\",{\"1\":{\"51\":1}}],[\"直接在命令中指定访问令牌\",{\"1\":{\"50\":1}}],[\"显示版本信息\",{\"1\":{\"47\":1}}],[\"显示帮助信息\",{\"1\":{\"47\":1}}],[\"verification\",{\"1\":{\"211\":1}}],[\"version\",{\"1\":{\"47\":2,\"56\":1,\"117\":1,\"163\":1,\"165\":1,\"173\":3}}],[\"vite\",{\"1\":{\"209\":2}}],[\"value\",{\"1\":{\"190\":7,\"211\":1}}],[\"validator\",{\"1\":{\"104\":1}}],[\"validateruntimeconfig\",{\"1\":{\"104\":1}}],[\"validateconfig\",{\"1\":{\"103\":2}}],[\"validate\",{\"1\":{\"103\":1}}],[\"variables\",{\"1\":{\"166\":1}}],[\"vars\",{\"1\":{\"165\":1}}],[\"volumes\",{\"1\":{\"163\":1}}],[\"v1\",{\"1\":{\"148\":1,\"154\":1}}],[\"v3\",{\"1\":{\"56\":2,\"165\":2}}],[\"vuepress\",{\"0\":{\"211\":1},\"1\":{\"10\":2}}],[\"vue3\",{\"1\":{\"10\":1}}],[\"其他信息\",{\"0\":{\"174\":1}}],[\"其他选项\",{\"0\":{\"47\":1}}],[\"其他配置\",{\"1\":{\"35\":1,\"157\":1}}],[\"指定要导出的文件夹名称\",{\"1\":{\"80\":1}}],[\"指定要导出的文件夹\",{\"1\":{\"79\":1}}],[\"指定文件夹名称\",{\"1\":{\"46\":1}}],[\"指定文件夹\",{\"1\":{\"46\":1}}],[\"指数退避\",{\"1\":{\"31\":1}}],[\"认证相关错误\",{\"0\":{\"135\":1}}],[\"认证选项\",{\"0\":{\"45\":1}}],[\"认证失败\",{\"1\":{\"30\":1,\"59\":1}}],[\"示例\",{\"1\":{\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"74\":1,\"75\":1,\"76\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"84\":1,\"86\":1,\"87\":1,\"193\":1}}],[\"描述实际发生的行为\",{\"1\":{\"173\":1}}],[\"描述期望的正确行为\",{\"1\":{\"173\":1}}],[\"描述\",{\"1\":{\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"59\":1,\"74\":1,\"75\":1,\"76\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"84\":1,\"86\":1,\"87\":1,\"89\":1,\"97\":1}}],[\"描述问题或建议\",{\"1\":{\"9\":1}}],[\"必需\",{\"1\":{\"74\":1,\"75\":1}}],[\"必需选项\",{\"0\":{\"44\":1}}],[\"必需参数\",{\"1\":{\"19\":1}}],[\"选项\",{\"1\":{\"42\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1}}],[\"尝试从缓存获取\",{\"1\":{\"39\":1}}],[\"缓存策略\",{\"0\":{\"63\":1}}],[\"缓存结果\",{\"1\":{\"39\":1}}],[\"缓存不存在或读取失败\",{\"1\":{\"39\":1}}],[\"缓存机制\",{\"0\":{\"39\":1}}],[\"workdir\",{\"1\":{\"163\":1}}],[\"workflow\",{\"1\":{\"56\":1,\"165\":1}}],[\"workflows\",{\"1\":{\"56\":1,\"165\":1}}],[\"web\",{\"1\":{\"122\":1,\"166\":1}}],[\"webpack\",{\"0\":{\"35\":1},\"1\":{\"35\":3}}],[\"www\",{\"1\":{\"122\":1}}],[\"warnings\",{\"1\":{\"104\":5}}],[\"watch\",{\"1\":{\"57\":1,\"209\":2}}],[\"windows\",{\"0\":{\"160\":1}}],[\"winston\",{\"1\":{\"38\":6}}],[\"witherrorhandling\",{\"1\":{\"208\":1}}],[\"witherrorhandling<t\",{\"1\":{\"208\":1}}],[\"with\",{\"1\":{\"56\":1,\"63\":1,\"165\":1}}],[\"writefile\",{\"1\":{\"39\":1}}],[\"日志记录\",{\"0\":{\"38\":1}}],[\"d\",{\"1\":{\"177\":2}}],[\"data\",{\"1\":{\"154\":3,\"190\":9,\"191\":4,\"193\":4,\"194\":4,\"200\":2}}],[\"date\",{\"1\":{\"39\":1,\"63\":1}}],[\"duration\",{\"1\":{\"63\":1}}],[\"duration=3600\",{\"1\":{\"63\":1}}],[\"dockerfile\",{\"1\":{\"163\":1}}],[\"docker\",{\"0\":{\"163\":1},\"1\":{\"163\":1}}],[\"documentation\",{\"1\":{\"56\":3}}],[\"dotenv\",{\"1\":{\"37\":3}}],[\"div>\",{\"1\":{\"194\":14}}],[\"disabled=\",{\"1\":{\"194\":2}}],[\"dist\",{\"1\":{\"94\":1,\"99\":1}}],[\"dispatch\",{\"1\":{\"56\":1,\"165\":1}}],[\"diff=$\",{\"1\":{\"63\":1}}],[\"diff\",{\"1\":{\"56\":1,\"63\":2,\"165\":1}}],[\"digest\",{\"1\":{\"39\":1}}],[\"dirname\",{\"1\":{\"142\":2}}],[\"dir=\",{\"1\":{\"67\":1}}],[\"dir\",{\"1\":{\"37\":1,\"97\":1}}],[\"declare\",{\"1\":{\"211\":1}}],[\"details\",{\"1\":{\"208\":1}}],[\"deps\",{\"1\":{\"193\":4}}],[\"dependencies\",{\"1\":{\"56\":1,\"165\":1}}],[\"delete\",{\"1\":{\"190\":1}}],[\"delay\",{\"1\":{\"31\":3}}],[\"debug\",{\"1\":{\"151\":1,\"153\":1,\"173\":1}}],[\"debug=apifox\",{\"1\":{\"60\":1,\"151\":1,\"173\":1}}],[\"developer2\",{\"1\":{\"101\":1}}],[\"developer1\",{\"1\":{\"101\":1}}],[\"develop\",{\"1\":{\"100\":2}}],[\"development\",{\"1\":{\"99\":1,\"108\":1}}],[\"dev\",{\"1\":{\"93\":1,\"209\":1}}],[\"default\",{\"1\":{\"8\":1,\"27\":1,\"35\":2,\"69\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"99\":1,\"100\":1,\"101\":1,\"106\":1,\"107\":1,\"108\":1,\"139\":1,\"156\":1,\"157\":1,\"158\":1,\"161\":1}}],[\"最佳实践\",{\"0\":{\"36\":1,\"205\":1}}],[\"在业务代码中使用统一的类型\",{\"1\":{\"197\":1}}],[\"在提交问题前\",{\"1\":{\"174\":1}}],[\"在提交代码前\",{\"1\":{\"9\":1}}],[\"在代码中启用调试\",{\"1\":{\"151\":1}}],[\"在代码中自动创建目录\",{\"1\":{\"142\":1}}],[\"在代码中使用编程接口\",{\"1\":{\"118\":1}}],[\"在\",{\"0\":{\"53\":1},\"1\":{\"35\":1,\"56\":1,\"122\":1,\"149\":1}}],[\"haspathparams<t>\",{\"1\":{\"199\":1}}],[\"hasnext\",{\"1\":{\"194\":1}}],[\"h2>\",{\"1\":{\"194\":1}}],[\"h3>\",{\"1\":{\"194\":1}}],[\"h1>\",{\"1\":{\"194\":3}}],[\"hook\",{\"0\":{\"192\":1,\"193\":1},\"1\":{\"193\":2,\"207\":1}}],[\"hooks\",{\"1\":{\"35\":1,\"206\":2}}],[\"http\",{\"1\":{\"139\":1,\"148\":1,\"202\":1}}],[\"https\",{\"1\":{\"37\":1,\"82\":2,\"122\":1,\"154\":1,\"190\":1}}],[\"hello\",{\"0\":{\"211\":1}}],[\"help\",{\"1\":{\"6\":1,\"47\":2}}],[\"headers\",{\"1\":{\"154\":1,\"190\":2,\"199\":1}}],[\"hex\",{\"1\":{\"39\":1}}],[\"插件集成\",{\"0\":{\"35\":1}}],[\"每天凌晨\",{\"1\":{\"34\":1,\"56\":1,\"165\":1}}],[\"后重试\",{\"1\":{\"31\":1}}],[\"<span>第\",{\"1\":{\"194\":1}}],[\"<=\",{\"1\":{\"194\":1}}],[\"<h2>订单项目<\",{\"1\":{\"194\":1}}],[\"<h3>订单\",{\"1\":{\"194\":1}}],[\"<h1>订单详情<\",{\"1\":{\"194\":1}}],[\"<h1>订单列表<\",{\"1\":{\"194\":1}}],[\"<h1>\",{\"1\":{\"194\":1}}],[\"<div\",{\"1\":{\"194\":2}}],[\"<div>未找到订单<\",{\"1\":{\"194\":1}}],[\"<div>未找到用户信息<\",{\"1\":{\"194\":1}}],[\"<div>\",{\"1\":{\"194\":4}}],[\"<div>错误\",{\"1\":{\"194\":3}}],[\"<div>加载中\",{\"1\":{\"194\":3}}],[\"<button\",{\"1\":{\"194\":3}}],[\"<p>¥\",{\"1\":{\"194\":1}}],[\"<p>\",{\"1\":{\"194\":1}}],[\"<p>创建时间\",{\"1\":{\"194\":1}}],[\"<p>订单号\",{\"1\":{\"194\":1}}],[\"<p>金额\",{\"1\":{\"194\":2}}],[\"<p>状态\",{\"1\":{\"194\":2}}],[\"<p>邮箱\",{\"1\":{\"194\":1}}],[\"<path>\",{\"1\":{\"44\":1}}],[\"<name>\",{\"1\":{\"46\":1}}],[\"<token>\",{\"1\":{\"45\":1}}],[\"<id>\",{\"1\":{\"44\":1,\"46\":1}}],[\"<\",{\"1\":{\"31\":2,\"39\":1,\"104\":1,\"169\":1,\"194\":25}}],[\"0\",{\"1\":{\"31\":1,\"34\":1,\"56\":1,\"63\":2,\"103\":1,\"111\":1,\"154\":1,\"165\":1,\"203\":1}}],[\"权限不足\",{\"1\":{\"30\":1,\"59\":1}}],[\"创建只支持\",{\"1\":{\"200\":1}}],[\"创建订单\",{\"1\":{\"191\":1}}],[\"创建类型安全的\",{\"0\":{\"189\":1},\"1\":{\"127\":1,\"181\":1,\"187\":1}}],[\"创建一个简单的导出脚本\",{\"1\":{\"125\":1}}],[\"创建批量导出脚本\",{\"1\":{\"55\":1}}],[\"创建\",{\"1\":{\"27\":1}}],[\"创建新的访问令牌\",{\"1\":{\"121\":1}}],[\"创建新的\",{\"1\":{\"9\":1}}],[\"4523\",{\"1\":{\"148\":1}}],[\"404\",{\"1\":{\"30\":1,\"59\":1,\"212\":1}}],[\"403\",{\"1\":{\"30\":1,\"59\":1}}],[\"401\",{\"1\":{\"30\":1,\"59\":1}}],[\"4\",{\"0\":{\"25\":1,\"52\":1,\"94\":1,\"144\":1,\"154\":1,\"192\":1,\"209\":1},\"1\":{\"62\":1,\"136\":1,\"169\":4,\"174\":1,\"181\":1}}],[\"批量导出多个模块\",{\"0\":{\"24\":1,\"55\":1}}],[\"3600000\",{\"1\":{\"39\":1}}],[\"30000\",{\"1\":{\"69\":1,\"83\":1,\"94\":1,\"99\":1,\"108\":1}}],[\"3000\",{\"1\":{\"33\":1,\"163\":1}}],[\"3\",{\"0\":{\"24\":1,\"35\":1,\"39\":1,\"51\":1,\"57\":1,\"71\":1,\"93\":1,\"101\":1,\"108\":1,\"131\":1,\"141\":1,\"153\":1,\"158\":1,\"164\":1,\"173\":1,\"189\":1,\"204\":1,\"208\":1},\"1\":{\"31\":1,\"69\":1,\"84\":1,\"99\":1,\"108\":1,\"136\":1,\"145\":1,\"156\":1,\"163\":1,\"173\":1,\"177\":1,\"181\":1}}],[\"`http\",{\"1\":{\"190\":1}}],[\"```javascript\",{\"1\":{\"173\":1}}],[\"`bearer\",{\"1\":{\"154\":1,\"190\":1}}],[\"`输出目录\",{\"1\":{\"104\":1}}],[\"`模块\",{\"1\":{\"103\":2}}],[\"`导出失败\",{\"1\":{\"31\":1}}],[\"`导出完成\",{\"1\":{\"22\":1}}],[\"`$\",{\"1\":{\"24\":2,\"25\":2,\"39\":2,\"190\":1}}],[\"`正在导出\",{\"1\":{\"24\":1}}],[\"`\",{\"1\":{\"22\":1,\"24\":2,\"25\":1,\"31\":1,\"103\":2,\"154\":1,\"190\":7}}],[\"$project\",{\"1\":{\"163\":1,\"166\":1}}],[\"$ci\",{\"1\":{\"166\":1}}],[\"$current\",{\"1\":{\"63\":1}}],[\"$cache\",{\"1\":{\"63\":4}}],[\"$time\",{\"1\":{\"63\":1}}],[\"$apifox\",{\"1\":{\"52\":1,\"136\":1,\"166\":1}}],[\"$\",{\"1\":{\"22\":1,\"24\":1,\"31\":1,\"56\":1,\"63\":2,\"103\":3,\"104\":1,\"154\":1,\"165\":2,\"166\":1,\"190\":6}}],[\"123\",{\"1\":{\"204\":2}}],[\"123470\",{\"1\":{\"100\":1}}],[\"123460\",{\"1\":{\"94\":1,\"100\":1}}],[\"12345\",{\"1\":{\"188\":2}}],[\"123459\",{\"1\":{\"94\":1,\"101\":1}}],[\"123458\",{\"1\":{\"24\":1,\"25\":1,\"92\":1,\"94\":1,\"99\":1,\"101\":1}}],[\"123457\",{\"1\":{\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"69\":1,\"92\":1,\"94\":1,\"99\":1,\"100\":1,\"101\":1}}],[\"123456\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"46\":1,\"51\":2,\"69\":1,\"70\":1,\"71\":1,\"79\":1,\"92\":1,\"93\":1,\"94\":1,\"99\":2,\"100\":1,\"101\":2}}],[\"12\",{\"1\":{\"168\":1}}],[\"16\",{\"1\":{\"168\":2,\"174\":1}}],[\"14+\",{\"1\":{\"168\":1}}],[\"14\",{\"1\":{\"111\":1,\"168\":2,\"174\":1}}],[\"10\",{\"1\":{\"104\":1,\"157\":1,\"191\":1,\"194\":1}}],[\"10000\",{\"1\":{\"95\":1,\"99\":1,\"154\":1}}],[\"1000\",{\"1\":{\"31\":1}}],[\"18+\",{\"1\":{\"168\":1}}],[\"18\",{\"1\":{\"56\":1,\"163\":1,\"165\":1,\"166\":1,\"168\":1}}],[\"1小时\",{\"1\":{\"39\":1,\"63\":1}}],[\"1\",{\"0\":{\"22\":1,\"27\":1,\"30\":1,\"33\":1,\"37\":1,\"49\":1,\"55\":1,\"62\":1,\"67\":1,\"91\":1,\"99\":1,\"103\":1,\"106\":1,\"121\":1,\"129\":1,\"135\":1,\"151\":1,\"156\":1,\"160\":1,\"171\":1,\"180\":1,\"183\":1,\"202\":1,\"206\":1},\"1\":{\"31\":1,\"93\":1,\"95\":1,\"99\":1,\"103\":1,\"136\":1,\"145\":1,\"157\":1,\"173\":2,\"181\":1,\"191\":1,\"194\":5,\"203\":1}}],[\"结果消息\",{\"1\":{\"20\":1}}],[\"返回值推断类型\",{\"1\":{\"203\":1}}],[\"返回值\",{\"0\":{\"20\":1}}],[\"文件过大\",{\"0\":{\"158\":1}}],[\"文件权限不足\",{\"1\":{\"143\":1}}],[\"文件系统错误\",{\"0\":{\"141\":1}}],[\"文件名\",{\"1\":{\"89\":1}}],[\"文件\",{\"1\":{\"67\":1}}],[\"文件夹名称\",{\"1\":{\"19\":1,\"89\":1}}],[\"文件夹\",{\"1\":{\"19\":1,\"89\":1}}],[\"文档中\",{\"1\":{\"202\":1}}],[\"文档生成的所有\",{\"1\":{\"178\":1}}],[\"文档并生成类型\",{\"1\":{\"180\":1}}],[\"文档并生成\",{\"1\":{\"119\":1}}],[\"文档\",{\"1\":{\"34\":1,\"35\":1,\"38\":1,\"49\":1,\"55\":1,\"63\":2,\"126\":1,\"177\":1,\"180\":1}}],[\"文档的主要函数\",{\"1\":{\"18\":1}}],[\"文档导出成功\",{\"1\":{\"38\":1}}],[\"文档导出失败\",{\"1\":{\"35\":1,\"38\":1}}],[\"文档导出完成并已缓存\",{\"1\":{\"63\":1}}],[\"文档导出完成\",{\"1\":{\"35\":1}}],[\"文档导出功能\",{\"1\":{\"13\":1}}],[\"文档导出为标准的\",{\"1\":{\"2\":1}}],[\"文档导出工具\",{\"1\":{\"0\":1,\"2\":1}}],[\"文档管理变得简单\",{\"1\":{\"0\":1}}],[\"文档管理变得简单高效\",{\"1\":{\"0\":1}}],[\"默认配置\",{\"1\":{\"100\":1}}],[\"默认使用模块名\",{\"1\":{\"89\":1}}],[\"默认使用主配置\",{\"1\":{\"89\":1}}],[\"默认值\",{\"1\":{\"76\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"84\":1,\"86\":1,\"87\":1,\"89\":1,\"96\":1}}],[\"默认\",{\"1\":{\"19\":1}}],[\"blob\",{\"1\":{\"190\":1}}],[\"b\",{\"1\":{\"177\":2}}],[\"batchsize\",{\"1\":{\"157\":1}}],[\"badurl\",{\"1\":{\"146\":1}}],[\"bash\",{\"1\":{\"55\":1,\"63\":1}}],[\"basedir\",{\"1\":{\"37\":1}}],[\"base\",{\"1\":{\"37\":1,\"67\":1,\"97\":1}}],[\"baseurl\",{\"0\":{\"82\":1},\"1\":{\"37\":1,\"97\":1,\"145\":1,\"190\":2}}],[\"baseconfig\",{\"1\":{\"28\":5}}],[\"basicexport\",{\"1\":{\"22\":1}}],[\"button>\",{\"1\":{\"194\":3}}],[\"buildorderdetailurl\",{\"1\":{\"188\":2}}],[\"build\",{\"1\":{\"163\":2,\"209\":2}}],[\"business\",{\"1\":{\"107\":2}}],[\"bug\",{\"0\":{\"173\":1},\"1\":{\"0\":1,\"9\":1,\"173\":2}}],[\"branchconfigs\",{\"1\":{\"100\":5}}],[\"branch\",{\"1\":{\"100\":1}}],[\"bin\",{\"1\":{\"55\":1,\"63\":1,\"157\":1}}],[\"beforecompile\",{\"1\":{\"35\":1}}],[\"both\",{\"1\":{\"87\":2}}],[\"body\",{\"1\":{\"33\":1,\"190\":2}}],[\"boolean\",{\"1\":{\"19\":1,\"20\":1,\"47\":3,\"78\":1,\"193\":2,\"199\":1,\"211\":1}}],[\"优先级高于环境变量\",{\"1\":{\"19\":1,\"45\":1}}],[\"访问令牌是否正确设置\",{\"1\":{\"174\":1}}],[\"访问令牌无效或已过期\",{\"1\":{\"136\":1}}],[\"访问令牌\",{\"0\":{\"121\":1},\"1\":{\"19\":1,\"45\":1,\"75\":1,\"97\":1,\"121\":1,\"136\":1}}],[\"参与讨论\",{\"1\":{\"172\":1}}],[\"参数\",{\"0\":{\"19\":1}}],[\"参考\",{\"0\":{\"17\":1}}],[\"ok\",{\"1\":{\"190\":1}}],[\"origin\",{\"1\":{\"166\":1}}],[\"ordercreate\",{\"1\":{\"197\":1}}],[\"ordercreateapi\",{\"1\":{\"184\":1,\"196\":1,\"197\":1,\"207\":1}}],[\"orderpaths\",{\"1\":{\"196\":2}}],[\"orders\",{\"1\":{\"194\":3}}],[\"orderdata\",{\"1\":{\"191\":2}}],[\"orderdetail\",{\"1\":{\"194\":1}}],[\"orderdetailurl\",{\"1\":{\"187\":1}}],[\"orderdetailresponse\",{\"1\":{\"185\":1,\"191\":1}}],[\"orderdetailparams\",{\"1\":{\"185\":1}}],[\"orderdetailapi\",{\"1\":{\"184\":1,\"185\":2}}],[\"orderid\",{\"1\":{\"188\":2,\"191\":2,\"193\":3,\"194\":3}}],[\"orderlist\",{\"1\":{\"194\":1,\"206\":1}}],[\"orderlistresponse\",{\"1\":{\"185\":1,\"191\":1}}],[\"orderlistquery\",{\"1\":{\"185\":1}}],[\"orderlistapi\",{\"1\":{\"184\":1,\"185\":2,\"196\":1}}],[\"order\",{\"1\":{\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"53\":3,\"55\":1,\"62\":1,\"69\":1,\"92\":2,\"108\":2,\"158\":2,\"184\":3,\"187\":2,\"188\":3,\"191\":3,\"193\":2,\"194\":12,\"196\":3,\"197\":3,\"206\":1,\"207\":1}}],[\"old\",{\"1\":{\"157\":1}}],[\"openapi\",{\"1\":{\"126\":1}}],[\"options\",{\"0\":{\"18\":1},\"1\":{\"28\":2,\"31\":2,\"35\":4,\"38\":4,\"39\":10,\"190\":5,\"193\":3}}],[\"os\",{\"1\":{\"101\":3}}],[\"onclick=\",{\"1\":{\"194\":3}}],[\"only\",{\"1\":{\"166\":1}}],[\"only=production\",{\"1\":{\"163\":1}}],[\"on\",{\"1\":{\"56\":2,\"165\":2}}],[\"object\",{\"1\":{\"28\":1,\"100\":1,\"190\":3}}],[\"of\",{\"1\":{\"24\":1,\"27\":1,\"28\":1,\"100\":1}}],[\"outputdir\",{\"1\":{\"20\":1}}],[\"output\",{\"1\":{\"16\":1,\"30\":1,\"37\":2,\"44\":1,\"49\":1,\"50\":1,\"51\":3,\"52\":1,\"60\":1,\"63\":1,\"67\":1,\"97\":1,\"124\":3,\"125\":1,\"126\":1,\"127\":1}}],[\"outdir\",{\"0\":{\"76\":1},\"1\":{\"8\":2,\"16\":1,\"19\":1,\"22\":1,\"23\":1,\"24\":5,\"25\":5,\"27\":3,\"28\":2,\"30\":1,\"33\":1,\"34\":1,\"35\":1,\"44\":2,\"49\":1,\"50\":1,\"51\":3,\"52\":1,\"53\":3,\"55\":3,\"56\":1,\"60\":1,\"62\":4,\"63\":1,\"69\":3,\"70\":2,\"71\":1,\"89\":1,\"91\":1,\"92\":5,\"93\":1,\"94\":1,\"95\":1,\"97\":1,\"99\":1,\"100\":1,\"101\":1,\"103\":2,\"104\":2,\"106\":1,\"107\":3,\"108\":6,\"124\":3,\"125\":1,\"139\":1,\"142\":2,\"151\":1,\"153\":1,\"156\":1,\"158\":2,\"161\":1,\"180\":1,\"209\":1}}],[\"lr\",{\"1\":{\"177\":1}}],[\"ls\",{\"1\":{\"143\":1,\"145\":1}}],[\"lt\",{\"1\":{\"63\":1}}],[\"la\",{\"1\":{\"143\":1,\"145\":1}}],[\"latest\",{\"1\":{\"56\":1,\"165\":1}}],[\"lasterror\",{\"1\":{\"31\":3}}],[\"loading\",{\"1\":{\"193\":5,\"194\":6}}],[\"localstorage\",{\"1\":{\"190\":1,\"191\":1}}],[\"localhost\",{\"1\":{\"148\":1}}],[\"local\",{\"1\":{\"47\":2,\"56\":2,\"95\":2,\"97\":1,\"165\":2}}],[\"loginurl\",{\"1\":{\"127\":1,\"181\":1,\"187\":3}}],[\"loginresponse\",{\"1\":{\"127\":1,\"181\":1,\"185\":1,\"191\":1}}],[\"loginrequest\",{\"1\":{\"127\":1,\"181\":1,\"185\":1}}],[\"login\",{\"1\":{\"127\":3,\"181\":3,\"184\":1,\"187\":4,\"191\":2,\"196\":1,\"197\":3,\"202\":3,\"203\":5,\"207\":1}}],[\"logger\",{\"1\":{\"38\":4}}],[\"log\",{\"1\":{\"16\":1,\"22\":1,\"24\":2,\"25\":1,\"31\":1,\"34\":2,\"35\":2,\"38\":1,\"39\":1,\"103\":1,\"125\":1,\"152\":2,\"153\":7,\"154\":2,\"173\":1,\"187\":1,\"199\":1}}],[\"length\",{\"1\":{\"103\":1,\"154\":1}}],[\"level\",{\"1\":{\"38\":1}}],[\"let\",{\"1\":{\"31\":2,\"190\":1}}],[\"list\",{\"1\":{\"184\":1,\"191\":1,\"193\":1,\"196\":2,\"197\":3}}],[\"listen\",{\"1\":{\"33\":1}}],[\"license\",{\"1\":{\"11\":1}}],[\"2>\",{\"1\":{\"173\":1}}],[\"2364645\",{\"1\":{\"100\":1}}],[\"2364644\",{\"1\":{\"100\":1}}],[\"2364643\",{\"1\":{\"16\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"34\":1,\"35\":1,\"44\":1,\"49\":1,\"50\":1,\"51\":3,\"53\":3,\"55\":3,\"56\":1,\"60\":1,\"62\":4,\"63\":1,\"69\":1,\"70\":1,\"71\":1,\"74\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"99\":1,\"100\":1,\"101\":1,\"122\":2,\"124\":3,\"125\":1,\"180\":1,\"209\":1}}],[\"2\",{\"0\":{\"23\":1,\"28\":1,\"31\":1,\"34\":1,\"38\":1,\"50\":1,\"56\":1,\"63\":1,\"68\":1,\"92\":1,\"100\":1,\"104\":1,\"107\":1,\"122\":1,\"130\":1,\"138\":1,\"152\":1,\"157\":1,\"163\":1,\"172\":1,\"181\":1,\"186\":1,\"203\":1,\"207\":1},\"1\":{\"31\":1,\"34\":2,\"39\":1,\"56\":2,\"136\":1,\"145\":1,\"153\":1,\"165\":2,\"173\":1,\"177\":1,\"181\":1}}],[\"2914310412\",{\"1\":{\"12\":1}}],[\"简单项目配置\",{\"0\":{\"91\":1}}],[\"简单导出\",{\"0\":{\"16\":1}}],[\"简化的命令\",{\"1\":{\"52\":1}}],[\"简介\",{\"0\":{\"2\":1},\"1\":{\"1\":1}}],[\"==\",{\"1\":{\"190\":1,\"193\":1}}],[\"===\",{\"1\":{\"99\":2,\"108\":1}}],[\"=>\",{\"1\":{\"25\":4,\"31\":1,\"33\":1,\"34\":1,\"35\":1,\"103\":2,\"108\":1,\"152\":3,\"190\":3,\"193\":4,\"194\":6,\"208\":2,\"211\":1}}],[\"=\",{\"1\":{\"15\":1,\"16\":1,\"22\":1,\"23\":1,\"24\":3,\"25\":3,\"28\":8,\"30\":1,\"31\":5,\"33\":3,\"34\":1,\"35\":1,\"37\":1,\"38\":2,\"39\":13,\"99\":2,\"100\":2,\"101\":2,\"103\":2,\"104\":1,\"108\":1,\"125\":1,\"127\":4,\"142\":1,\"146\":3,\"151\":1,\"154\":1,\"181\":4,\"184\":6,\"185\":6,\"187\":3,\"188\":2,\"190\":9,\"191\":7,\"193\":3,\"194\":4,\"196\":6,\"197\":6,\"199\":2,\"200\":4,\"202\":2,\"203\":3,\"204\":4,\"207\":5,\"208\":1}}],[\"fn\",{\"1\":{\"208\":2}}],[\"fetchdata\",{\"1\":{\"193\":4}}],[\"fetch\",{\"1\":{\"190\":1}}],[\"feature\",{\"1\":{\"100\":1}}],[\"filter\",{\"1\":{\"108\":1}}],[\"file=\",{\"1\":{\"63\":1}}],[\"filename\",{\"0\":{\"86\":1},\"1\":{\"38\":1,\"89\":1,\"92\":3}}],[\"file\",{\"1\":{\"38\":1,\"63\":3}}],[\"files\",{\"1\":{\"20\":1,\"22\":1}}],[\"fi\",{\"1\":{\"63\":3,\"166\":1}}],[\"f\",{\"1\":{\"63\":1}}],[\"fs\",{\"1\":{\"39\":6,\"104\":1,\"142\":1,\"153\":1}}],[\"found\",{\"1\":{\"212\":1}}],[\"formdata\",{\"1\":{\"190\":6}}],[\"format\",{\"0\":{\"87\":1},\"1\":{\"38\":2}}],[\"foreach\",{\"1\":{\"25\":1,\"103\":2,\"190\":3}}],[\"for\",{\"1\":{\"24\":1,\"27\":1,\"28\":1,\"31\":1,\"100\":1}}],[\"foldername`\",{\"1\":{\"103\":1}}],[\"foldername\",{\"0\":{\"80\":1},\"1\":{\"19\":1,\"23\":1,\"24\":1,\"25\":1,\"28\":1,\"33\":2,\"46\":2,\"51\":2,\"53\":2,\"55\":3,\"62\":4,\"69\":1,\"89\":1,\"92\":1,\"103\":1}}],[\"folder\",{\"1\":{\"8\":1,\"107\":2,\"108\":5,\"156\":1,\"158\":2}}],[\"folderid\",{\"0\":{\"79\":1},\"1\":{\"8\":1,\"19\":1,\"23\":1,\"24\":5,\"25\":5,\"27\":2,\"28\":2,\"33\":2,\"46\":2,\"51\":2,\"69\":3,\"70\":1,\"71\":1,\"89\":1,\"92\":3,\"93\":1,\"94\":5,\"99\":4,\"100\":4,\"101\":5,\"103\":2,\"107\":2,\"108\":5,\"156\":1,\"158\":2}}],[\"false\",{\"1\":{\"19\":1,\"24\":1,\"25\":1,\"28\":2,\"33\":1,\"69\":1,\"70\":1,\"78\":1,\"193\":4,\"199\":2}}],[\"function\",{\"1\":{\"16\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"30\":1,\"31\":1,\"38\":1,\"100\":1,\"103\":1,\"104\":1,\"125\":1,\"154\":1,\"188\":1,\"190\":2,\"191\":5,\"193\":4,\"194\":3,\"199\":1,\"200\":1,\"207\":2,\"208\":1}}],[\"from\",{\"1\":{\"15\":1,\"16\":1,\"22\":1,\"27\":2,\"28\":1,\"33\":2,\"34\":2,\"35\":2,\"37\":1,\"38\":1,\"39\":3,\"100\":1,\"101\":1,\"103\":1,\"125\":1,\"127\":2,\"142\":2,\"151\":1,\"152\":1,\"153\":2,\"154\":1,\"161\":1,\"163\":1,\"181\":2,\"184\":2,\"187\":1,\"190\":2,\"193\":3,\"194\":1,\"196\":4,\"197\":1,\"202\":1}}],[\"模块名称\",{\"1\":{\"89\":1}}],[\"模块配置\",{\"1\":{\"27\":1}}],[\"模块\",{\"1\":{\"15\":1,\"207\":3}}],[\"模块化导出\",{\"1\":{\"3\":1,\"8\":1}}],[\"模块化导出等\",{\"1\":{\"0\":1}}],[\"导入类型工具\",{\"1\":{\"181\":1}}],[\"导入生成的\",{\"1\":{\"181\":1}}],[\"导入生成的类型\",{\"1\":{\"127\":1}}],[\"导入模块\",{\"0\":{\"15\":1}}],[\"导出具体的业务类型\",{\"1\":{\"196\":1}}],[\"导出类型\",{\"1\":{\"163\":1}}],[\"导出速度慢\",{\"0\":{\"156\":1}}],[\"导出所有模块\",{\"1\":{\"94\":1}}],[\"导出选项\",{\"0\":{\"77\":1},\"1\":{\"69\":1}}],[\"导出新的\",{\"1\":{\"63\":1}}],[\"导出产品模块\",{\"1\":{\"55\":1}}],[\"导出订单模块\",{\"1\":{\"55\":1}}],[\"导出用户模块\",{\"1\":{\"55\":1}}],[\"导出整个项目的\",{\"1\":{\"49\":1}}],[\"导出范围选项\",{\"0\":{\"46\":1}}],[\"导出各个模块\",{\"1\":{\"27\":1,\"28\":1}}],[\"导出主项目\",{\"1\":{\"27\":1,\"28\":1}}],[\"导出指定文件夹\",{\"0\":{\"23\":1,\"51\":1}}],[\"导出失败\",{\"1\":{\"16\":1,\"24\":1,\"25\":1,\"30\":1,\"125\":1}}],[\"导出成功后\",{\"1\":{\"126\":1}}],[\"导出成功`\",{\"1\":{\"24\":1,\"25\":1}}],[\"导出成功\",{\"1\":{\"16\":1,\"125\":1}}],[\"导出\",{\"1\":{\"6\":1,\"18\":1,\"119\":1,\"148\":1,\"180\":1}}],[\"应用中集成\",{\"1\":{\"13\":1}}],[\"还提供了强大的编程接口\",{\"1\":{\"13\":1}}],[\"⭐️\",{\"1\":{\"12\":1}}],[\"如果需要运行时\",{\"1\":{\"203\":1}}],[\"如果遇到执行策略错误\",{\"1\":{\"162\":1}}],[\"如果无响应\",{\"1\":{\"148\":1}}],[\"如果在企业网络环境中\",{\"1\":{\"139\":1}}],[\"如果显示版本号\",{\"1\":{\"117\":1}}],[\"如果你希望在任何地方都能使用\",{\"1\":{\"116\":1}}],[\"如果你有任何想法\",{\"1\":{\"9\":1}}],[\"如果可用\",{\"1\":{\"62\":1}}],[\"如果这个项目对你有帮助\",{\"1\":{\"12\":1}}],[\"袁果锅\",{\"1\":{\"12\":1}}],[\"详细使用指南\",{\"0\":{\"182\":1}}],[\"详细描述遇到的问题\",{\"1\":{\"173\":1}}],[\"详细的安装步骤和环境要求\",{\"1\":{\"7\":1}}],[\"详情请参阅\",{\"1\":{\"11\":1}}],[\"mobilecheck\",{\"1\":{\"211\":1}}],[\"moduleconfig\",{\"1\":{\"28\":2,\"89\":2}}],[\"modulename\",{\"1\":{\"28\":2}}],[\"module\",{\"1\":{\"24\":11,\"25\":10,\"27\":2,\"28\":2,\"103\":5,\"108\":2}}],[\"modules\",{\"0\":{\"89\":1},\"1\":{\"8\":1,\"24\":2,\"25\":2,\"27\":3,\"28\":4,\"69\":1,\"70\":1,\"71\":1,\"92\":1,\"93\":1,\"94\":1,\"99\":1,\"100\":3,\"101\":3,\"103\":2,\"107\":1,\"108\":1,\"156\":1,\"157\":1,\"158\":1}}],[\"m>>>\",{\"1\":{\"193\":1}}],[\"m>>\",{\"1\":{\"190\":1,\"193\":1}}],[\"m>\",{\"1\":{\"178\":3,\"190\":1,\"193\":1}}],[\"md\",{\"1\":{\"174\":4}}],[\"md5\",{\"1\":{\"39\":1}}],[\"method\",{\"1\":{\"152\":1,\"188\":1,\"190\":3,\"193\":3,\"199\":1}}],[\"message\",{\"1\":{\"16\":1,\"20\":1,\"24\":2,\"25\":1,\"28\":2,\"30\":4,\"33\":1,\"34\":1,\"35\":1,\"38\":1,\"125\":1,\"152\":1,\"154\":1,\"194\":3,\"208\":1}}],[\"m\",{\"1\":{\"56\":1,\"165\":1,\"166\":1,\"190\":2,\"193\":2,\"199\":2}}],[\"mkdirsync\",{\"1\":{\"142\":2}}],[\"mkdir\",{\"1\":{\"39\":1,\"142\":1}}],[\"mtime\",{\"1\":{\"39\":1}}],[\"ms\",{\"1\":{\"31\":1}}],[\"makeresponse\",{\"1\":{\"181\":1,\"190\":1,\"193\":1,\"196\":1}}],[\"makeresponse<tpaths\",{\"1\":{\"178\":1}}],[\"makerequest<paths\",{\"1\":{\"190\":1,\"193\":1,\"200\":1}}],[\"makerequest<tpaths\",{\"1\":{\"178\":1}}],[\"makerequest\",{\"1\":{\"181\":1,\"190\":1,\"193\":1,\"196\":1}}],[\"makeurl<allpaths\",{\"1\":{\"196\":5,\"197\":6}}],[\"makeurl<tpaths\",{\"1\":{\"178\":1}}],[\"makeurl<typeof\",{\"1\":{\"146\":1}}],[\"makeurl<userpaths\",{\"1\":{\"146\":2}}],[\"makeurl<paths\",{\"1\":{\"127\":2,\"181\":2,\"184\":6,\"187\":3,\"188\":1,\"202\":1,\"203\":3,\"204\":1,\"207\":3}}],[\"makeurl\",{\"1\":{\"127\":2,\"178\":1,\"181\":2,\"184\":1,\"187\":1,\"196\":2,\"197\":2,\"202\":2,\"203\":3}}],[\"max\",{\"1\":{\"157\":1,\"194\":1}}],[\"maxconcurrency\",{\"1\":{\"156\":1,\"157\":1}}],[\"maxage\",{\"1\":{\"39\":2}}],[\"maxretries\",{\"1\":{\"31\":3}}],[\"math\",{\"1\":{\"31\":1,\"194\":1}}],[\"main\",{\"1\":{\"28\":2,\"100\":1,\"125\":2}}],[\"mainresult\",{\"1\":{\"28\":2}}],[\"map\",{\"1\":{\"25\":1,\"194\":2}}],[\"mit\",{\"1\":{\"11\":1}}],[\"该项目基于\",{\"1\":{\"11\":1}}],[\"该工具支持云端和本地两种导出方式\",{\"1\":{\"2\":1}}],[\"个人笔记\",{\"1\":{\"10\":1}}],[\"快速模板\",{\"1\":{\"10\":1}}],[\"快速开始指南\",{\"1\":{\"6\":1}}],[\"快速开始\",{\"0\":{\"4\":1,\"119\":1,\"179\":1},\"1\":{\"0\":1,\"1\":1,\"118\":1,\"171\":1}}],[\"undefined\",{\"1\":{\"190\":1}}],[\"unauthorized=0\",{\"1\":{\"140\":1}}],[\"u>>\",{\"1\":{\"199\":1}}],[\"u>\",{\"1\":{\"190\":1,\"193\":1}}],[\"u\",{\"1\":{\"178\":3,\"190\":4,\"193\":5,\"199\":1,\"200\":3}}],[\"ubuntu\",{\"1\":{\"56\":1,\"165\":1}}],[\"utf8\",{\"1\":{\"39\":1,\"100\":1}}],[\"utils\",{\"1\":{\"10\":1,\"104\":1}}],[\"update\",{\"1\":{\"39\":1,\"56\":1,\"140\":1,\"165\":3,\"166\":4}}],[\"urlsearchparams\",{\"1\":{\"190\":1}}],[\"url=https\",{\"1\":{\"67\":1}}],[\"url\",{\"0\":{\"186\":1,\"188\":1},\"1\":{\"37\":1,\"82\":1,\"97\":2,\"122\":1,\"127\":1,\"152\":1,\"178\":1,\"181\":1,\"187\":1,\"188\":2,\"190\":3,\"193\":3,\"199\":2,\"200\":2,\"202\":2,\"203\":2}}],[\"useuserlogin\",{\"1\":{\"207\":1}}],[\"useuserprofile\",{\"1\":{\"193\":1,\"194\":1}}],[\"useorderdetail\",{\"1\":{\"193\":1,\"194\":1}}],[\"useorderlist\",{\"1\":{\"193\":1,\"194\":1,\"207\":1}}],[\"useapi\",{\"1\":{\"193\":3}}],[\"useapi<\",{\"1\":{\"193\":1}}],[\"usecallback\",{\"1\":{\"193\":2}}],[\"useeffect\",{\"1\":{\"193\":2}}],[\"use\",{\"1\":{\"97\":1,\"152\":2,\"207\":1}}],[\"usestate<apistate<makeresponse<paths\",{\"1\":{\"193\":1}}],[\"usestate\",{\"1\":{\"193\":1,\"194\":1}}],[\"uses\",{\"1\":{\"56\":2,\"165\":2}}],[\"uselocal\",{\"0\":{\"78\":1},\"1\":{\"19\":1,\"69\":1,\"70\":1,\"95\":1,\"97\":1,\"103\":2}}],[\"userdetailapi\",{\"1\":{\"204\":2}}],[\"userloginresponse\",{\"1\":{\"207\":1}}],[\"userloginrequest\",{\"1\":{\"207\":1}}],[\"userlogin\",{\"1\":{\"197\":1}}],[\"userloginapi\",{\"1\":{\"127\":3,\"181\":3,\"184\":1,\"185\":2,\"196\":1,\"197\":1,\"207\":3}}],[\"userupdateapi\",{\"1\":{\"184\":1}}],[\"userprofile\",{\"1\":{\"194\":1,\"206\":1}}],[\"userprofileresponse\",{\"1\":{\"191\":1}}],[\"userprofileapi\",{\"1\":{\"184\":1,\"196\":1,\"207\":1}}],[\"userpaths\",{\"1\":{\"146\":1,\"196\":2}}],[\"userconfigs\",{\"1\":{\"101\":2}}],[\"userinfo\",{\"1\":{\"101\":1}}],[\"username\",{\"1\":{\"101\":3,\"191\":2}}],[\"user\",{\"1\":{\"8\":2,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"53\":3,\"55\":1,\"56\":2,\"62\":1,\"69\":1,\"70\":1,\"92\":2,\"107\":2,\"108\":2,\"127\":3,\"146\":3,\"158\":2,\"165\":2,\"166\":2,\"181\":3,\"184\":3,\"187\":6,\"191\":3,\"193\":1,\"194\":4,\"196\":3,\"197\":3,\"199\":1,\"202\":3,\"203\":5,\"204\":4,\"206\":1,\"207\":2}}],[\"j\",{\"1\":{\"62\":1}}],[\"jobs\",{\"1\":{\"56\":1,\"165\":1}}],[\"join\",{\"1\":{\"22\":1,\"39\":2,\"161\":3}}],[\"javascript\",{\"1\":{\"10\":1}}],[\"js\",{\"0\":{\"33\":1,\"69\":1,\"168\":1},\"1\":{\"3\":1,\"7\":1,\"8\":1,\"13\":1,\"27\":2,\"35\":3,\"37\":1,\"56\":1,\"57\":2,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"99\":1,\"100\":1,\"101\":1,\"103\":2,\"104\":1,\"106\":1,\"107\":1,\"108\":1,\"111\":1,\"125\":2,\"139\":1,\"140\":1,\"153\":2,\"154\":1,\"157\":1,\"165\":1,\"168\":2,\"173\":1,\"174\":1,\"209\":1}}],[\"jsondata\",{\"1\":{\"127\":1,\"181\":1,\"185\":1,\"190\":2,\"191\":2,\"207\":1}}],[\"json`\",{\"1\":{\"39\":2}}],[\"json\",{\"0\":{\"53\":1,\"70\":1,\"71\":1},\"1\":{\"0\":1,\"2\":1,\"33\":2,\"38\":1,\"39\":3,\"87\":1,\"96\":2,\"126\":2,\"145\":1,\"153\":1,\"163\":1,\"177\":1,\"180\":2,\"190\":3,\"193\":1}}],[\"遵循项目的代码规范\",{\"1\":{\"9\":1}}],[\"代码通过所有测试\",{\"1\":{\"9\":1}}],[\"查看输出结果\",{\"0\":{\"126\":1}}],[\"查看浏览器地址栏\",{\"1\":{\"122\":1}}],[\"查看\",{\"1\":{\"9\":1,\"204\":1}}],[\"查看帮助\",{\"1\":{\"6\":1}}],[\"请升级\",{\"1\":{\"168\":1,\"169\":1}}],[\"请求\",{\"1\":{\"207\":1}}],[\"请求的\",{\"1\":{\"200\":1}}],[\"请求的路径\",{\"1\":{\"200\":4}}],[\"请求体类型\",{\"1\":{\"181\":1}}],[\"请求参数类型\",{\"1\":{\"178\":1}}],[\"请求失败\",{\"1\":{\"152\":1}}],[\"请求超时时间\",{\"1\":{\"83\":1,\"97\":1}}],[\"请检查以下项目\",{\"1\":{\"174\":1}}],[\"请检查项目访问权限\",{\"1\":{\"30\":1}}],[\"请检查访问令牌\",{\"1\":{\"30\":1}}],[\"请给我们一个\",{\"1\":{\"12\":1}}],[\"请确保\",{\"1\":{\"9\":1}}],[\"请\",{\"1\":{\"9\":1}}],[\"建议或发现了\",{\"1\":{\"9\":1}}],[\"我们欢迎所有形式的贡献\",{\"1\":{\"9\":1}}],[\"我们提供了详细的文档来帮助你快速上手\",{\"1\":{\"7\":1}}],[\"用户资料组件\",{\"1\":{\"194\":1}}],[\"用户登录\",{\"1\":{\"191\":1}}],[\"用户相关\",{\"1\":{\"184\":1}}],[\"用户管理\",{\"1\":{\"108\":2}}],[\"用户模块类型\",{\"1\":{\"206\":1}}],[\"用户模块导出完成\",{\"1\":{\"55\":1}}],[\"用户模块\",{\"1\":{\"8\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"46\":1,\"51\":2,\"53\":1,\"55\":1,\"62\":1,\"69\":1,\"70\":1,\"71\":1,\"80\":1,\"92\":1,\"93\":1,\"94\":1,\"99\":2,\"100\":2,\"101\":2,\"107\":1,\"158\":1}}],[\"用户设计的\",{\"1\":{\"2\":1}}],[\"e\",{\"1\":{\"177\":1}}],[\"eq\",{\"1\":{\"63\":1}}],[\"extends\",{\"1\":{\"190\":2,\"193\":2,\"199\":4,\"200\":3,\"208\":1}}],[\"example\",{\"1\":{\"166\":1,\"190\":1}}],[\"existssync\",{\"1\":{\"104\":1,\"153\":2}}],[\"exit\",{\"1\":{\"63\":1,\"103\":1}}],[\"executionpolicy\",{\"1\":{\"162\":2}}],[\"execsync\",{\"1\":{\"100\":2}}],[\"exec\",{\"1\":{\"57\":1,\"209\":1}}],[\"expose\",{\"1\":{\"163\":1}}],[\"exports\",{\"1\":{\"33\":1}}],[\"exportswagger\",{\"0\":{\"18\":1},\"1\":{\"15\":2,\"16\":2,\"22\":2,\"23\":1,\"24\":1,\"25\":1,\"27\":3,\"28\":3,\"30\":1,\"31\":1,\"33\":2,\"34\":2,\"35\":2,\"38\":1,\"39\":1,\"125\":2,\"151\":2}}],[\"exportwithlogging\",{\"1\":{\"38\":1}}],[\"exportwithretry\",{\"1\":{\"31\":1}}],[\"exportwitherrorhandling\",{\"1\":{\"30\":1}}],[\"exportwithconfig\",{\"1\":{\"27\":1}}],[\"exporter\",{\"1\":{\"28\":2}}],[\"exportall\",{\"1\":{\"28\":2}}],[\"exportapi\",{\"1\":{\"16\":2}}],[\"exportmodule\",{\"1\":{\"28\":2}}],[\"exportmultiplemodules\",{\"1\":{\"24\":1}}],[\"exportproject\",{\"1\":{\"28\":2}}],[\"exportfolder\",{\"1\":{\"23\":1}}],[\"exportresult\",{\"1\":{\"20\":1}}],[\"exportoptions\",{\"1\":{\"19\":1}}],[\"export\",{\"1\":{\"6\":1,\"8\":1,\"27\":1,\"33\":1,\"35\":2,\"37\":1,\"38\":1,\"39\":1,\"52\":2,\"53\":6,\"55\":3,\"56\":4,\"57\":1,\"60\":1,\"63\":1,\"69\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"99\":1,\"100\":1,\"101\":1,\"104\":1,\"106\":1,\"107\":1,\"108\":1,\"124\":1,\"125\":2,\"136\":1,\"139\":1,\"140\":1,\"143\":1,\"145\":1,\"151\":2,\"156\":1,\"157\":2,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"165\":2,\"166\":1,\"173\":1,\"196\":7,\"209\":4,\"211\":2}}],[\"express\",{\"0\":{\"33\":1},\"1\":{\"33\":3}}],[\"echo\",{\"1\":{\"55\":5,\"63\":4,\"136\":1}}],[\"encoding\",{\"1\":{\"100\":1}}],[\"entries\",{\"1\":{\"28\":1,\"100\":1,\"190\":3}}],[\"environment\",{\"1\":{\"163\":1}}],[\"env\",{\"1\":{\"8\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"33\":1,\"34\":1,\"35\":1,\"37\":5,\"56\":1,\"67\":1,\"69\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"99\":5,\"100\":1,\"101\":1,\"103\":1,\"106\":1,\"107\":1,\"108\":3,\"139\":2,\"151\":1,\"153\":4,\"154\":1,\"156\":1,\"158\":1,\"161\":1,\"165\":1}}],[\"else\",{\"1\":{\"25\":1,\"30\":3,\"103\":1,\"190\":1}}],[\"element\",{\"1\":{\"10\":1}}],[\"errors\",{\"1\":{\"103\":10}}],[\"error\",{\"1\":{\"16\":3,\"24\":5,\"25\":5,\"28\":6,\"30\":10,\"31\":2,\"33\":3,\"34\":3,\"35\":4,\"38\":5,\"39\":1,\"103\":4,\"125\":3,\"152\":4,\"154\":8,\"190\":1,\"193\":9,\"194\":9,\"208\":4}}],[\"es6\",{\"1\":{\"15\":1}}],[\"email\",{\"1\":{\"12\":1,\"56\":1,\"165\":1,\"166\":1,\"194\":1}}],[\"故障排除指南\",{\"1\":{\"40\":1,\"64\":1,\"109\":1,\"132\":1,\"210\":1}}],[\"故障排除\",{\"0\":{\"133\":1},\"1\":{\"7\":1}}],[\"完整的\",{\"1\":{\"178\":1}}],[\"完整的配置选项说明\",{\"1\":{\"7\":1}}],[\"完全支持\",{\"1\":{\"168\":1,\"169\":2}}],[\"完美支持各种持续集成环境\",{\"1\":{\"3\":1}}],[\"t\",{\"1\":{\"193\":1,\"199\":2,\"200\":6,\"208\":3}}],[\"tee\",{\"1\":{\"173\":1}}],[\"testconnection\",{\"1\":{\"154\":2}}],[\"test\",{\"1\":{\"154\":1}}],[\"temp\",{\"1\":{\"33\":1}}],[\"tostring\",{\"1\":{\"190\":1}}],[\"touppercase\",{\"1\":{\"152\":1}}],[\"token=$\",{\"1\":{\"163\":1}}],[\"token=\",{\"1\":{\"136\":1}}],[\"token=your\",{\"1\":{\"52\":1,\"67\":1,\"124\":1}}],[\"token\",{\"0\":{\"75\":1},\"1\":{\"6\":2,\"8\":2,\"16\":2,\"19\":1,\"22\":2,\"23\":2,\"24\":2,\"25\":2,\"27\":2,\"28\":2,\"30\":2,\"33\":2,\"34\":2,\"35\":2,\"37\":2,\"45\":2,\"50\":2,\"52\":1,\"56\":2,\"67\":1,\"69\":2,\"75\":2,\"91\":2,\"92\":2,\"93\":2,\"94\":2,\"95\":1,\"97\":2,\"99\":2,\"100\":2,\"101\":2,\"103\":3,\"106\":2,\"107\":2,\"108\":2,\"124\":3,\"125\":2,\"136\":2,\"139\":2,\"151\":2,\"153\":2,\"154\":1,\"156\":2,\"158\":2,\"161\":2,\"163\":1,\"165\":2,\"166\":2,\"190\":1,\"191\":2}}],[\"tls\",{\"1\":{\"140\":1}}],[\"tsx\",{\"1\":{\"206\":3}}],[\"tsconfig\",{\"1\":{\"145\":1}}],[\"ts\",{\"1\":{\"126\":1,\"180\":1,\"196\":1,\"206\":7}}],[\"timeout\",{\"0\":{\"83\":1},\"1\":{\"69\":1,\"93\":1,\"94\":1,\"95\":1,\"97\":2,\"99\":1,\"104\":1,\"108\":1,\"139\":1,\"154\":1}}],[\"time\",{\"1\":{\"63\":5}}],[\"time=$\",{\"1\":{\"63\":2}}],[\"tapasync\",{\"1\":{\"35\":1}}],[\"typeof\",{\"1\":{\"203\":2}}],[\"type\",{\"1\":{\"28\":4,\"127\":5,\"146\":3,\"181\":7,\"184\":8,\"185\":6,\"190\":6,\"193\":4,\"196\":13,\"197\":5,\"199\":2,\"200\":4,\"202\":1,\"203\":2,\"204\":2,\"207\":5}}],[\"types\",{\"1\":{\"8\":2,\"22\":1,\"23\":1,\"24\":3,\"25\":3,\"27\":3,\"28\":2,\"34\":1,\"35\":1,\"37\":1,\"53\":3,\"55\":3,\"56\":1,\"62\":4,\"67\":1,\"69\":3,\"70\":2,\"71\":1,\"76\":1,\"91\":1,\"92\":5,\"93\":1,\"94\":1,\"95\":1,\"99\":2,\"100\":1,\"101\":1,\"106\":1,\"107\":3,\"108\":6,\"127\":1,\"139\":1,\"142\":2,\"143\":2,\"145\":3,\"151\":1,\"156\":1,\"158\":2,\"161\":1,\"163\":2,\"165\":6,\"166\":6,\"180\":2,\"181\":2,\"184\":2,\"187\":1,\"190\":2,\"193\":2,\"196\":2,\"197\":1,\"202\":1,\"206\":2,\"209\":1}}],[\"typescript\",{\"0\":{\"144\":1,\"169\":1,\"175\":1},\"1\":{\"0\":2,\"2\":2,\"3\":1,\"7\":1,\"40\":1,\"64\":1,\"87\":2,\"109\":1,\"118\":1,\"119\":1,\"126\":1,\"132\":1,\"145\":1,\"169\":2,\"171\":1,\"174\":2,\"175\":1,\"177\":2,\"180\":1}}],[\"throw\",{\"1\":{\"30\":1,\"31\":1,\"38\":1,\"190\":1,\"208\":1}}],[\"this\",{\"1\":{\"28\":5,\"35\":2,\"39\":8}}],[\"then\",{\"1\":{\"25\":1,\"63\":3,\"166\":1}}],[\"trim\",{\"1\":{\"100\":1}}],[\"transports\",{\"1\":{\"38\":3}}],[\"true\",{\"1\":{\"24\":1,\"25\":1,\"28\":2,\"33\":1,\"39\":1,\"78\":1,\"95\":1,\"108\":1,\"142\":1,\"151\":1,\"156\":1,\"193\":1,\"199\":2}}],[\"try\",{\"1\":{\"16\":1,\"24\":1,\"28\":2,\"30\":1,\"31\":1,\"33\":1,\"34\":1,\"35\":1,\"38\":1,\"39\":1,\"125\":1,\"154\":1,\"193\":1,\"208\":1}}],[\"yml\",{\"1\":{\"56\":1,\"163\":1,\"165\":1,\"166\":1}}],[\"your\",{\"1\":{\"6\":2,\"8\":1,\"16\":1,\"50\":1,\"75\":1,\"106\":1,\"107\":1,\"108\":1,\"124\":1,\"125\":1,\"136\":1,\"139\":1,\"145\":1,\"151\":2,\"156\":1,\"158\":1,\"161\":1,\"162\":1,\"173\":1}}],[\"yarn\",{\"0\":{\"114\":1},\"1\":{\"5\":2,\"111\":1,\"114\":1}}],[\"item\",{\"1\":{\"194\":5}}],[\"items\",{\"1\":{\"194\":1}}],[\"immediate\",{\"1\":{\"193\":2}}],[\"image\",{\"1\":{\"166\":1}}],[\"import\",{\"1\":{\"15\":1,\"16\":1,\"22\":1,\"27\":2,\"28\":1,\"33\":2,\"34\":2,\"35\":2,\"37\":1,\"38\":1,\"39\":3,\"100\":1,\"101\":1,\"103\":1,\"125\":1,\"127\":2,\"142\":2,\"151\":1,\"152\":1,\"153\":2,\"154\":1,\"161\":1,\"181\":2,\"184\":2,\"187\":1,\"190\":2,\"193\":3,\"194\":1,\"196\":3,\"197\":1,\"202\":1}}],[\"isauthrequired\",{\"1\":{\"199\":1}}],[\"isauthrequired<u\",{\"1\":{\"199\":1}}],[\"isprod\",{\"1\":{\"99\":1}}],[\"isdev\",{\"1\":{\"99\":5,\"108\":2}}],[\"issue\",{\"1\":{\"9\":1}}],[\"issues\",{\"1\":{\"9\":1,\"172\":1}}],[\"i++\",{\"1\":{\"31\":1}}],[\"i\",{\"1\":{\"31\":4}}],[\"if\",{\"1\":{\"25\":1,\"27\":1,\"30\":3,\"31\":1,\"39\":2,\"63\":3,\"100\":2,\"103\":7,\"104\":3,\"108\":1,\"154\":1,\"166\":1,\"190\":6,\"193\":1,\"194\":8,\"199\":1}}],[\"in\",{\"1\":{\"200\":2}}],[\"infermethodfrompaths<paths\",{\"1\":{\"190\":1,\"193\":1,\"199\":1}}],[\"infermethodfrompaths\",{\"1\":{\"190\":1,\"193\":1,\"196\":1}}],[\"info\",{\"1\":{\"38\":3}}],[\"interceptors\",{\"1\":{\"152\":2}}],[\"interface\",{\"1\":{\"19\":1,\"20\":1,\"89\":1,\"193\":1,\"208\":1}}],[\"index\",{\"1\":{\"103\":2}}],[\"includes\",{\"1\":{\"30\":3,\"100\":1,\"108\":1,\"199\":1}}],[\"install\",{\"1\":{\"5\":1,\"56\":2,\"57\":1,\"113\":1,\"116\":1,\"165\":1}}],[\"id=$\",{\"1\":{\"163\":1}}],[\"id=2364643\",{\"1\":{\"52\":1,\"67\":1}}],[\"id\",{\"0\":{\"122\":1,\"130\":1},\"1\":{\"6\":2,\"8\":2,\"19\":2,\"37\":1,\"44\":1,\"46\":1,\"51\":2,\"52\":1,\"59\":2,\"74\":1,\"79\":1,\"89\":1,\"97\":2,\"106\":1,\"107\":3,\"108\":6,\"122\":2,\"130\":1,\"139\":1,\"145\":2,\"146\":3,\"149\":1,\"151\":3,\"156\":2,\"158\":3,\"161\":1,\"162\":2,\"163\":3,\"165\":2,\"166\":2,\"173\":2,\"174\":1,\"184\":1,\"187\":2,\"188\":3,\"191\":2,\"193\":2,\"194\":4,\"204\":7}}],[\"phone\",{\"1\":{\"211\":1}}],[\"p>\",{\"1\":{\"194\":9}}],[\"price\",{\"1\":{\"194\":1}}],[\"prev\",{\"1\":{\"193\":2}}],[\"profileurl\",{\"1\":{\"187\":1}}],[\"profile\",{\"1\":{\"184\":2,\"187\":2,\"191\":1,\"193\":1,\"196\":1,\"199\":1,\"207\":1}}],[\"proxy\",{\"1\":{\"139\":2}}],[\"prod\",{\"1\":{\"94\":1}}],[\"productlist\",{\"1\":{\"197\":1,\"206\":1}}],[\"productlistapi\",{\"1\":{\"196\":1,\"197\":1}}],[\"productpaths\",{\"1\":{\"196\":2}}],[\"production\",{\"1\":{\"99\":1}}],[\"product\",{\"1\":{\"24\":1,\"25\":1,\"55\":1,\"62\":1,\"92\":2,\"108\":2,\"196\":2,\"197\":3,\"206\":1}}],[\"promise<any>>\",{\"1\":{\"208\":1}}],[\"promise<void>\",{\"1\":{\"193\":1}}],[\"promise<makeresponse<paths\",{\"1\":{\"190\":1,\"200\":1}}],[\"promise\",{\"1\":{\"25\":1,\"31\":1,\"152\":1}}],[\"promises\",{\"1\":{\"25\":2,\"39\":1}}],[\"promax\",{\"1\":{\"10\":1}}],[\"process\",{\"1\":{\"8\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"33\":1,\"34\":1,\"35\":1,\"37\":4,\"69\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"99\":3,\"100\":2,\"101\":1,\"103\":2,\"106\":1,\"107\":1,\"108\":2,\"139\":2,\"151\":1,\"153\":2,\"154\":1,\"156\":1,\"158\":1,\"161\":2}}],[\"projects\",{\"1\":{\"148\":1,\"154\":1}}],[\"projectid\",{\"0\":{\"74\":1},\"1\":{\"8\":1,\"16\":1,\"19\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"33\":2,\"34\":1,\"35\":1,\"37\":1,\"44\":2,\"49\":1,\"50\":1,\"51\":3,\"52\":1,\"53\":3,\"55\":3,\"56\":1,\"60\":1,\"62\":4,\"63\":1,\"69\":1,\"70\":1,\"71\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"97\":1,\"99\":1,\"100\":3,\"101\":1,\"103\":2,\"106\":1,\"107\":1,\"108\":1,\"124\":3,\"125\":1,\"139\":1,\"151\":1,\"156\":1,\"158\":1,\"161\":1,\"180\":1,\"209\":1}}],[\"project\",{\"1\":{\"6\":2,\"8\":1,\"37\":1,\"52\":2,\"67\":1,\"97\":1,\"106\":1,\"107\":1,\"108\":1,\"122\":1,\"139\":1,\"145\":2,\"151\":3,\"156\":1,\"158\":1,\"161\":1,\"162\":2,\"163\":3,\"165\":2,\"166\":1,\"173\":2}}],[\"p\",{\"1\":{\"142\":1,\"194\":4}}],[\"page\",{\"1\":{\"191\":2,\"193\":3,\"194\":4}}],[\"password\",{\"1\":{\"191\":2}}],[\"pattern\",{\"1\":{\"100\":3}}],[\"pathparams\",{\"1\":{\"185\":1,\"190\":2,\"191\":1,\"193\":1,\"199\":1,\"204\":4}}],[\"paths\",{\"1\":{\"127\":1,\"145\":1,\"178\":1,\"181\":2,\"184\":1,\"190\":2,\"193\":2,\"196\":3,\"199\":1,\"202\":2}}],[\"path\",{\"1\":{\"39\":4,\"142\":1,\"161\":2,\"188\":2}}],[\"payment\",{\"1\":{\"62\":1,\"92\":1,\"108\":2}}],[\"package\",{\"0\":{\"53\":1,\"71\":1},\"1\":{\"96\":1,\"163\":1}}],[\"parse\",{\"1\":{\"39\":1}}],[\"parallel\",{\"1\":{\"62\":2,\"156\":1}}],[\"parallelexport\",{\"1\":{\"25\":1}}],[\"params\",{\"1\":{\"35\":1}}],[\"plugins\",{\"1\":{\"35\":1}}],[\"plugin\",{\"1\":{\"35\":2}}],[\"porcelain\",{\"1\":{\"166\":1}}],[\"postpaths<paths>\",{\"1\":{\"200\":1}}],[\"postpaths<t>\",{\"1\":{\"200\":1}}],[\"post\",{\"1\":{\"33\":1,\"127\":3,\"181\":3,\"184\":2,\"187\":4,\"191\":2,\"196\":2,\"197\":6,\"200\":3,\"202\":3,\"203\":5,\"207\":2}}],[\"powershell\",{\"0\":{\"162\":1}}],[\"pow\",{\"1\":{\"31\":1}}],[\"public\",{\"1\":{\"199\":1}}],[\"put\",{\"1\":{\"184\":1}}],[\"push\",{\"1\":{\"24\":2,\"28\":4,\"56\":1,\"103\":5,\"104\":3,\"165\":1,\"166\":1}}],[\"pull\",{\"1\":{\"9\":1}}],[\"pnpm\",{\"0\":{\"115\":1},\"1\":{\"5\":2,\"111\":1,\"115\":1}}],[\"args\",{\"1\":{\"208\":3}}],[\"amount\",{\"1\":{\"194\":2}}],[\"auth\",{\"1\":{\"190\":1,\"191\":1}}],[\"authorization\",{\"1\":{\"154\":1,\"190\":1,\"199\":1}}],[\"any\",{\"1\":{\"190\":1,\"191\":1,\"193\":1,\"199\":1,\"200\":2,\"208\":3}}],[\"as\",{\"1\":{\"190\":3,\"193\":1,\"196\":3,\"208\":1}}],[\"async\",{\"1\":{\"16\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":3,\"30\":1,\"31\":1,\"33\":1,\"34\":1,\"35\":1,\"38\":1,\"39\":3,\"125\":1,\"154\":1,\"190\":1,\"191\":5,\"193\":1,\"200\":1,\"208\":1}}],[\"a\",{\"1\":{\"177\":1}}],[\"alpine\",{\"1\":{\"163\":1,\"166\":1}}],[\"allpostpaths\",{\"1\":{\"200\":1}}],[\"allpaths\",{\"1\":{\"196\":1,\"197\":1}}],[\"allgetpaths\",{\"1\":{\"200\":1}}],[\"all\",{\"1\":{\"25\":1,\"55\":3,\"86\":1,\"126\":2,\"127\":1,\"180\":2,\"181\":1,\"184\":1,\"190\":1,\"193\":1,\"202\":1}}],[\"axios\",{\"1\":{\"152\":4,\"154\":3}}],[\"action\",{\"1\":{\"56\":2,\"165\":2}}],[\"actions\",{\"0\":{\"165\":1},\"1\":{\"56\":3,\"165\":2}}],[\"access\",{\"1\":{\"6\":1,\"8\":1,\"16\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"33\":1,\"34\":1,\"35\":1,\"37\":1,\"50\":1,\"52\":2,\"56\":2,\"67\":2,\"69\":1,\"75\":2,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"97\":1,\"99\":1,\"100\":1,\"101\":1,\"103\":1,\"106\":1,\"107\":1,\"108\":1,\"124\":3,\"125\":1,\"136\":2,\"139\":1,\"151\":1,\"153\":2,\"154\":1,\"156\":1,\"158\":1,\"161\":1,\"163\":2,\"165\":2,\"166\":2}}],[\"abc123\",{\"1\":{\"45\":1}}],[\"age\",{\"1\":{\"39\":2}}],[\"application\",{\"1\":{\"190\":1}}],[\"apply\",{\"1\":{\"35\":1}}],[\"append\",{\"1\":{\"190\":2}}],[\"app\",{\"1\":{\"33\":3,\"163\":3}}],[\"apierror\",{\"1\":{\"208\":1}}],[\"apiexporter\",{\"1\":{\"28\":2}}],[\"apistate<makeresponse<paths\",{\"1\":{\"193\":1}}],[\"apistate<t>\",{\"1\":{\"193\":1}}],[\"apicall\",{\"1\":{\"191\":5,\"193\":1,\"200\":1,\"204\":2,\"208\":1}}],[\"apicall<\",{\"1\":{\"190\":1}}],[\"api\",{\"0\":{\"17\":1,\"184\":1,\"189\":1,\"190\":1,\"193\":1},\"1\":{\"0\":3,\"2\":2,\"7\":1,\"13\":1,\"33\":1,\"34\":1,\"35\":3,\"37\":1,\"38\":3,\"49\":1,\"51\":1,\"53\":6,\"55\":1,\"56\":4,\"57\":1,\"63\":4,\"67\":1,\"82\":3,\"86\":1,\"91\":1,\"92\":3,\"97\":1,\"118\":1,\"121\":1,\"125\":2,\"127\":4,\"148\":2,\"154\":2,\"165\":4,\"166\":2,\"174\":1,\"175\":1,\"177\":2,\"178\":2,\"180\":1,\"181\":4,\"184\":8,\"185\":1,\"187\":8,\"188\":3,\"190\":2,\"191\":5,\"193\":5,\"196\":7,\"197\":11,\"199\":4,\"200\":1,\"202\":3,\"203\":7,\"204\":5,\"206\":4,\"207\":5,\"208\":1,\"209\":5}}],[\"apifoxwebpackplugin\",{\"1\":{\"35\":5}}],[\"apifox\",{\"0\":{\"69\":1,\"70\":1,\"121\":1},\"1\":{\"0\":3,\"2\":3,\"5\":3,\"6\":3,\"8\":2,\"10\":2,\"13\":1,\"15\":2,\"16\":1,\"19\":1,\"22\":2,\"23\":1,\"24\":1,\"25\":1,\"27\":4,\"28\":2,\"30\":1,\"33\":2,\"34\":2,\"35\":4,\"37\":5,\"41\":1,\"42\":1,\"44\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":3,\"52\":3,\"53\":3,\"55\":3,\"56\":3,\"57\":2,\"60\":1,\"62\":4,\"63\":1,\"65\":1,\"67\":4,\"69\":1,\"71\":1,\"74\":1,\"75\":2,\"76\":1,\"78\":1,\"82\":3,\"91\":2,\"92\":2,\"93\":2,\"94\":2,\"95\":1,\"96\":3,\"97\":3,\"99\":2,\"100\":2,\"101\":2,\"103\":2,\"106\":2,\"107\":2,\"108\":2,\"113\":1,\"114\":1,\"115\":1,\"116\":2,\"117\":1,\"119\":2,\"121\":1,\"122\":2,\"124\":4,\"125\":1,\"127\":1,\"133\":1,\"136\":2,\"139\":2,\"143\":1,\"145\":1,\"148\":4,\"149\":1,\"151\":3,\"153\":3,\"154\":2,\"156\":1,\"157\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":3,\"165\":3,\"166\":2,\"173\":3,\"175\":1,\"177\":1,\"180\":1,\"181\":1,\"184\":1,\"187\":1,\"190\":1,\"193\":1,\"196\":1,\"209\":2}}],[\"await\",{\"1\":{\"16\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":2,\"28\":5,\"30\":1,\"31\":2,\"33\":1,\"34\":1,\"35\":1,\"38\":1,\"39\":7,\"125\":1,\"151\":1,\"154\":1,\"190\":1,\"191\":5,\"193\":1,\"204\":2,\"208\":1}}],[\"add\",{\"1\":{\"5\":2,\"56\":1,\"114\":1,\"115\":1,\"165\":1,\"166\":1}}],[\"graph\",{\"1\":{\"177\":1}}],[\"goodurl\",{\"1\":{\"146\":1}}],[\"gnu\",{\"1\":{\"62\":1}}],[\"getrequest<u\",{\"1\":{\"200\":1}}],[\"getpaths<paths>>\",{\"1\":{\"200\":1}}],[\"getpaths<paths>\",{\"1\":{\"200\":1}}],[\"getpaths<t>\",{\"1\":{\"200\":1}}],[\"getorderdetail\",{\"1\":{\"191\":1}}],[\"getorderlist\",{\"1\":{\"191\":1}}],[\"getuserprofile\",{\"1\":{\"191\":1}}],[\"getitem\",{\"1\":{\"190\":1}}],[\"gettoken\",{\"1\":{\"190\":2}}],[\"gettime\",{\"1\":{\"39\":1}}],[\"get\",{\"1\":{\"146\":3,\"154\":1,\"184\":3,\"187\":4,\"188\":2,\"191\":3,\"193\":3,\"196\":3,\"197\":3,\"199\":1,\"200\":7,\"204\":3,\"207\":1}}],[\"getbranchconfig\",{\"1\":{\"100\":2}}],[\"getcachedresult\",{\"1\":{\"39\":2}}],[\"getcachekey\",{\"1\":{\"39\":3}}],[\"guoguo\",{\"1\":{\"10\":4}}],[\"gitlab\",{\"0\":{\"166\":1},\"1\":{\"166\":3}}],[\"github\",{\"0\":{\"165\":1},\"1\":{\"12\":1,\"56\":4,\"165\":3,\"172\":1}}],[\"git\",{\"1\":{\"10\":1,\"56\":6,\"100\":1,\"165\":6,\"166\":6}}],[\"global\",{\"1\":{\"5\":1}}],[\"g\",{\"1\":{\"5\":2,\"57\":1,\"116\":1,\"140\":1}}],[\"使用正确的类型\",{\"1\":{\"204\":1}}],[\"使用模块化导出\",{\"1\":{\"156\":1}}],[\"使用生成的类型\",{\"0\":{\"127\":1}}],[\"使用环境变量设置令牌\",{\"1\":{\"124\":1}}],[\"使用类型安全的\",{\"1\":{\"118\":1}}],[\"使用缓存的\",{\"1\":{\"63\":1}}],[\"使用缓存的结果\",{\"1\":{\"39\":1}}],[\"使用文件夹名称\",{\"1\":{\"51\":1}}],[\"使用文件夹\",{\"1\":{\"51\":1}}],[\"使用访问令牌\",{\"0\":{\"50\":1}}],[\"使用配置文件\",{\"0\":{\"27\":1},\"1\":{\"27\":1}}],[\"使用示例\",{\"0\":{\"21\":1,\"48\":1,\"191\":1},\"1\":{\"28\":1,\"199\":1,\"200\":1,\"208\":1}}],[\"使用\",{\"0\":{\"113\":1,\"114\":1,\"115\":1},\"1\":{\"5\":3,\"57\":1,\"62\":1,\"161\":1,\"202\":1}}],[\"使用指南\",{\"0\":{\"7\":1},\"1\":{\"1\":1}}],[\"灵活的配置选项满足不同需求\",{\"1\":{\"3\":1}}],[\"丰富配置\",{\"1\":{\"3\":1}}],[\"集成示例\",{\"0\":{\"32\":1}}],[\"集成\",{\"0\":{\"33\":1,\"56\":1,\"192\":1},\"1\":{\"3\":1}}],[\"c\",{\"1\":{\"177\":2}}],[\"cmd\",{\"1\":{\"163\":1}}],[\"cwd\",{\"1\":{\"161\":1}}],[\"curl\",{\"1\":{\"148\":1}}],[\"currentuser\",{\"1\":{\"162\":1}}],[\"currentbranch\",{\"1\":{\"100\":4}}],[\"current\",{\"1\":{\"63\":2,\"100\":1}}],[\"chore\",{\"1\":{\"165\":1,\"166\":1}}],[\"child\",{\"1\":{\"100\":1}}],[\"changes\",{\"1\":{\"56\":1,\"165\":1}}],[\"checkout\",{\"1\":{\"56\":1,\"165\":1}}],[\"chmod\",{\"1\":{\"55\":1,\"143\":1}}],[\"createdat\",{\"1\":{\"194\":1}}],[\"createorder\",{\"1\":{\"191\":1}}],[\"create\",{\"1\":{\"184\":1,\"191\":1,\"196\":1,\"197\":3,\"207\":1}}],[\"createhash\",{\"1\":{\"39\":1}}],[\"createlogger\",{\"1\":{\"38\":1}}],[\"crypto\",{\"1\":{\"39\":3}}],[\"cron\",{\"1\":{\"34\":3,\"56\":1,\"165\":1}}],[\"cn\",{\"1\":{\"37\":1,\"67\":1,\"82\":2,\"122\":1,\"154\":1}}],[\"cat\",{\"1\":{\"63\":1}}],[\"catch\",{\"1\":{\"16\":1,\"24\":1,\"25\":1,\"28\":2,\"30\":1,\"31\":1,\"33\":1,\"34\":1,\"35\":1,\"38\":1,\"39\":1,\"125\":1,\"154\":1,\"193\":1,\"208\":1}}],[\"cachepath\",{\"1\":{\"39\":5}}],[\"cachekey\",{\"1\":{\"39\":4}}],[\"cache\",{\"1\":{\"39\":1,\"63\":6,\"165\":1}}],[\"cached\",{\"1\":{\"39\":5}}],[\"cachedir\",{\"1\":{\"39\":6}}],[\"cachedexporter\",{\"1\":{\"39\":1}}],[\"callback\",{\"1\":{\"35\":3}}],[\"class\",{\"1\":{\"28\":1,\"35\":1,\"39\":1}}],[\"client\",{\"1\":{\"206\":1}}],[\"cli\",{\"1\":{\"3\":1,\"7\":1,\"174\":1}}],[\"code\",{\"1\":{\"208\":1}}],[\"copy\",{\"1\":{\"163\":2}}],[\"core\",{\"1\":{\"156\":1}}],[\"content\",{\"1\":{\"190\":2}}],[\"connection\",{\"1\":{\"154\":1}}],[\"console\",{\"1\":{\"16\":2,\"22\":1,\"24\":3,\"25\":2,\"30\":4,\"31\":1,\"34\":3,\"35\":3,\"38\":1,\"39\":1,\"103\":3,\"125\":2,\"152\":3,\"153\":7,\"154\":5,\"187\":1,\"199\":1,\"208\":1}}],[\"constructor\",{\"1\":{\"28\":1,\"35\":1,\"39\":1}}],[\"const\",{\"1\":{\"15\":1,\"16\":1,\"22\":1,\"23\":1,\"24\":4,\"25\":3,\"27\":1,\"28\":7,\"30\":1,\"31\":2,\"33\":3,\"34\":1,\"37\":1,\"38\":2,\"39\":10,\"99\":2,\"100\":3,\"101\":2,\"103\":2,\"104\":1,\"108\":1,\"125\":1,\"127\":1,\"142\":1,\"151\":1,\"154\":1,\"181\":1,\"187\":3,\"188\":2,\"190\":5,\"191\":5,\"193\":3,\"194\":4,\"197\":3,\"202\":2,\"203\":1,\"204\":2,\"208\":1,\"211\":1}}],[\"configuration\",{\"1\":{\"174\":1}}],[\"config\",{\"0\":{\"69\":1,\"70\":1},\"1\":{\"8\":1,\"27\":7,\"28\":2,\"35\":1,\"37\":3,\"56\":2,\"57\":2,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":2,\"99\":1,\"100\":3,\"101\":1,\"103\":12,\"104\":6,\"106\":1,\"107\":1,\"108\":1,\"139\":1,\"153\":5,\"165\":2,\"166\":2,\"209\":1}}],[\"components\",{\"1\":{\"206\":1}}],[\"compose\",{\"1\":{\"163\":1}}],[\"compileroptions\",{\"1\":{\"145\":1}}],[\"compiler\",{\"1\":{\"35\":2}}],[\"commit\",{\"1\":{\"56\":2,\"165\":2,\"166\":2}}],[\"commonjs\",{\"1\":{\"15\":1}}],[\"com\",{\"1\":{\"12\":1,\"56\":1,\"165\":1,\"166\":1,\"190\":1}}],[\"cz\",{\"1\":{\"10\":1}}],[\"cd\",{\"0\":{\"56\":1,\"164\":1},\"1\":{\"3\":1}}],[\"ci\",{\"0\":{\"56\":1,\"164\":1,\"166\":1},\"1\":{\"3\":1,\"163\":1,\"165\":1,\"166\":4}}],[\"⚡\",{\"1\":{\"3\":1}}],[\"🎯\",{\"1\":{\"3\":1}}],[\"never\",{\"0\":{\"202\":1},\"1\":{\"200\":2}}],[\"new\",{\"1\":{\"28\":1,\"31\":1,\"35\":1,\"38\":2,\"136\":1,\"190\":3}}],[\"n\",{\"1\":{\"166\":1}}],[\"n文件系统\",{\"1\":{\"153\":1}}],[\"n环境变量\",{\"1\":{\"153\":1}}],[\"number\",{\"1\":{\"83\":1,\"84\":1,\"191\":2,\"193\":2,\"211\":1}}],[\"null\",{\"1\":{\"39\":2,\"69\":2,\"79\":2,\"80\":2,\"153\":1,\"193\":7}}],[\"npx\",{\"1\":{\"56\":1,\"143\":1,\"145\":1,\"151\":1,\"162\":2,\"163\":1,\"165\":1,\"166\":1,\"173\":2}}],[\"npm\",{\"0\":{\"113\":1},\"1\":{\"0\":1,\"5\":2,\"53\":5,\"56\":1,\"57\":2,\"111\":1,\"113\":1,\"116\":1,\"140\":3,\"163\":3,\"165\":2,\"166\":1,\"173\":2,\"209\":3}}],[\"not\",{\"1\":{\"212\":1}}],[\"notification\",{\"1\":{\"108\":2}}],[\"notes\",{\"1\":{\"10\":1}}],[\"now\",{\"1\":{\"39\":1}}],[\"nodemon\",{\"1\":{\"57\":4,\"209\":1}}],[\"node\",{\"0\":{\"168\":1},\"1\":{\"3\":1,\"7\":1,\"13\":1,\"34\":1,\"56\":3,\"99\":2,\"108\":1,\"111\":1,\"125\":1,\"140\":2,\"153\":2,\"157\":3,\"163\":1,\"165\":3,\"166\":1,\"168\":2,\"173\":2,\"174\":1}}],[\"name\",{\"1\":{\"8\":1,\"24\":9,\"25\":6,\"27\":2,\"28\":4,\"56\":6,\"69\":2,\"70\":1,\"71\":1,\"89\":1,\"92\":4,\"93\":1,\"94\":5,\"99\":4,\"100\":4,\"101\":5,\"103\":3,\"107\":2,\"108\":6,\"156\":1,\"158\":2,\"165\":6,\"166\":2,\"194\":2}}],[\"编程接口完整指南\",{\"1\":{\"132\":1}}],[\"编程接口使用\",{\"1\":{\"64\":1,\"109\":1,\"174\":1,\"210\":1}}],[\"编程接口文档\",{\"1\":{\"7\":1}}],[\"编程接口\",{\"0\":{\"13\":1,\"125\":1},\"1\":{\"3\":1,\"7\":1,\"118\":1}}],[\"工具类\",{\"1\":{\"10\":1}}],[\"工具的完整使用说明\",{\"1\":{\"7\":1}}],[\"工具\",{\"1\":{\"3\":1,\"118\":1,\"177\":1}}],[\"便于大型项目管理\",{\"1\":{\"3\":1}}],[\"📝\",{\"1\":{\"3\":1}}],[\"🔄\",{\"1\":{\"3\":1}}],[\"💻\",{\"1\":{\"3\":1}}],[\"🔧\",{\"1\":{\"3\":1}}],[\"📦\",{\"1\":{\"3\":1}}],[\"🚀\",{\"1\":{\"3\":1}}],[\"是必需的\",{\"1\":{\"103\":3}}],[\"是\",{\"1\":{\"74\":1,\"75\":1}}],[\"是否已经运行了代码生成命令\",{\"1\":{\"202\":1}}],[\"是否已有相关问题\",{\"1\":{\"9\":1}}],[\"是否有路径参数\",{\"1\":{\"199\":1}}],[\"是否需要认证\",{\"1\":{\"199\":1}}],[\"是否查看了相关文档\",{\"1\":{\"174\":1}}],[\"是否尝试了最新版本\",{\"1\":{\"174\":1}}],[\"是否正确导入了\",{\"1\":{\"202\":1}}],[\"是否正确\",{\"1\":{\"130\":1,\"149\":1,\"174\":1}}],[\"是否使用本地模式\",{\"1\":{\"97\":1}}],[\"是否使用本地客户端\",{\"1\":{\"19\":1}}],[\"是否从本地\",{\"1\":{\"78\":1}}],[\"是否成功\",{\"1\":{\"20\":1}}],[\"是现代前端开发的理想选择\",{\"1\":{\"2\":1}}],[\"是一个专为\",{\"1\":{\"2\":1}}],[\"类型命名\",{\"1\":{\"207\":1}}],[\"类型命名约定\",{\"0\":{\"207\":1}}],[\"类型错误\",{\"1\":{\"202\":1}}],[\"类型不能赋给类型\",{\"0\":{\"202\":1}}],[\"类型守卫函数\",{\"1\":{\"199\":1}}],[\"类型推断错误\",{\"0\":{\"203\":1}}],[\"类型推断也会正常工作\",{\"1\":{\"197\":1}}],[\"类型推断失败或路径参数不匹配\",{\"1\":{\"146\":1}}],[\"类型中提取具体的请求和响应类型\",{\"1\":{\"185\":1}}],[\"类型生成流程\",{\"0\":{\"177\":1}}],[\"类型文件未生成或路径错误\",{\"1\":{\"145\":1}}],[\"类型\",{\"1\":{\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"74\":1,\"75\":1,\"76\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"84\":1,\"86\":1,\"87\":1,\"89\":1,\"118\":1,\"127\":1,\"177\":1,\"181\":2,\"202\":1}}],[\"类型安全工具\",{\"0\":{\"175\":1},\"1\":{\"40\":1,\"132\":1,\"175\":1,\"177\":1}}],[\"类型安全的\",{\"1\":{\"7\":1,\"177\":1}}],[\"类型工具\",{\"1\":{\"2\":1,\"7\":1,\"64\":1,\"109\":1,\"171\":1,\"174\":1}}],[\"类型定义文件\",{\"1\":{\"2\":1,\"126\":1}}],[\"类型定义具有完整的类型安全保障\",{\"1\":{\"0\":1}}],[\"类型定义\",{\"0\":{\"183\":1,\"184\":1},\"1\":{\"0\":1,\"119\":1,\"177\":1,\"180\":1}}],[\"格式和\",{\"1\":{\"2\":1}}],[\"项目结构\",{\"0\":{\"206\":1}}],[\"项目过大或网络延迟\",{\"1\":{\"156\":1}}],[\"项目数量\",{\"1\":{\"154\":1}}],[\"项目未在本地客户端中打开\",{\"1\":{\"149\":1}}],[\"项目或文件夹不存在\",{\"1\":{\"30\":1,\"59\":1}}],[\"项目\",{\"0\":{\"130\":1},\"1\":{\"6\":1,\"19\":1,\"44\":1,\"74\":1,\"97\":1,\"174\":1}}],[\"项目中编程调用\",{\"1\":{\"3\":1}}],[\"项目中的\",{\"1\":{\"2\":1}}],[\"项目导出为\",{\"1\":{\"0\":1}}],[\"它可以将\",{\"1\":{\"2\":1}}],[\"作者\",{\"0\":{\"12\":1},\"1\":{\"1\":1}}],[\"许可证开源\",{\"1\":{\"11\":1}}],[\"许可证\",{\"0\":{\"11\":1},\"1\":{\"1\":1}}],[\"贡献\",{\"0\":{\"9\":1},\"1\":{\"1\":1}}],[\"配置模板\",{\"0\":{\"105\":1}}],[\"配置验证通过\",{\"1\":{\"103\":1}}],[\"配置验证失败\",{\"1\":{\"103\":1}}],[\"配置验证\",{\"0\":{\"102\":1}}],[\"配置示例\",{\"0\":{\"90\":1}}],[\"配置选项详解\",{\"0\":{\"72\":1}}],[\"配置方式\",{\"0\":{\"66\":1}}],[\"配置文件语法是否正确\",{\"1\":{\"174\":1}}],[\"配置文件使用\",{\"1\":{\"132\":1}}],[\"配置文件的加载优先级\",{\"1\":{\"96\":1}}],[\"配置文件优先级\",{\"0\":{\"96\":1}}],[\"配置文件\",{\"0\":{\"68\":1},\"1\":{\"173\":1}}],[\"配置文件详解\",{\"1\":{\"40\":1,\"64\":1,\"210\":1}}],[\"配置文件集成\",{\"0\":{\"26\":1}}],[\"配置参考\",{\"0\":{\"65\":1},\"1\":{\"7\":1,\"8\":1,\"171\":1,\"174\":1}}],[\"配置\",{\"0\":{\"8\":1,\"71\":1},\"1\":{\"1\":1,\"145\":1}}],[\"安装依赖\",{\"1\":{\"163\":1}}],[\"安装完成后\",{\"1\":{\"117\":1,\"118\":1}}],[\"安装方式\",{\"0\":{\"112\":1}}],[\"安装\",{\"0\":{\"5\":1,\"110\":1},\"1\":{\"1\":1,\"57\":1}}],[\"安装指南\",{\"1\":{\"0\":1,\"7\":1,\"171\":1}}],[\"特性\",{\"0\":{\"3\":1},\"1\":{\"1\":1}}],[\"目录\",{\"0\":{\"1\":1},\"1\":{\"1\":1}}],[\"提取所有\",{\"1\":{\"200\":2}}],[\"提取具体类型\",{\"0\":{\"185\":1},\"1\":{\"181\":1}}],[\"提取请求和响应类型\",{\"1\":{\"127\":1}}],[\"提交问题\",{\"1\":{\"172\":1}}],[\"提交规范\",{\"1\":{\"10\":1}}],[\"提交\",{\"0\":{\"173\":1},\"1\":{\"9\":1,\"173\":1}}],[\"提供了强大的\",{\"1\":{\"175\":1}}],[\"提供了强大的命令行工具\",{\"1\":{\"41\":1}}],[\"提供了灵活的配置选项和强大的\",{\"1\":{\"2\":1}}],[\"提供简单易用的\",{\"1\":{\"3\":1}}],[\"提供命令行工具和编程接口\",{\"1\":{\"0\":1}}],[\"提出新特性\",{\"1\":{\"0\":1}}],[\"报告模板\",{\"1\":{\"173\":1}}],[\"报告\",{\"0\":{\"173\":1},\"1\":{\"0\":1}}],[\"包管理器\",{\"1\":{\"111\":1}}],[\"包\",{\"1\":{\"0\":1}}],[\"让浏览器自动设置\",{\"1\":{\"190\":1}}],[\"让你可以灵活地定制导出行为\",{\"1\":{\"65\":1}}],[\"让你可以在编译时就发现\",{\"1\":{\"175\":1}}],[\"让你可以在\",{\"1\":{\"13\":1}}],[\"让前端开发者能够享受完整的类型安全保障\",{\"1\":{\"2\":1}}],[\"让前端开发更加可靠\",{\"1\":{\"0\":1}}],[\"让类型安全成为开发标准\",{\"1\":{\"0\":1}}],[\"让\",{\"1\":{\"0\":2}}],[\"和文件夹\",{\"1\":{\"59\":1}}],[\"和名称\",{\"1\":{\"51\":1}}],[\"和\",{\"1\":{\"0\":1,\"95\":1,\"140\":1}}],[\"一个强大的\",{\"1\":{\"0\":1}}],[\"safeapicall\",{\"1\":{\"208\":1}}],[\"span>\",{\"1\":{\"194\":1}}],[\"space\",{\"1\":{\"157\":1}}],[\"size\",{\"1\":{\"191\":2,\"193\":3}}],[\"size=4096\",{\"1\":{\"157\":1}}],[\"sudo\",{\"1\":{\"143\":2}}],[\"success\",{\"1\":{\"20\":1,\"24\":2,\"25\":3,\"28\":4,\"33\":2}}],[\"ssl\",{\"1\":{\"140\":2}}],[\"s\",{\"1\":{\"63\":1}}],[\"searchparams\",{\"1\":{\"190\":3}}],[\"services\",{\"1\":{\"163\":1}}],[\"secrets\",{\"1\":{\"56\":1,\"165\":1}}],[\"setpage\",{\"1\":{\"194\":3}}],[\"setstate\",{\"1\":{\"193\":4}}],[\"setitem\",{\"1\":{\"191\":1}}],[\"set\",{\"1\":{\"162\":1}}],[\"setup\",{\"1\":{\"56\":2,\"165\":2}}],[\"setcachedresult\",{\"1\":{\"39\":2}}],[\"settimeout\",{\"1\":{\"31\":1}}],[\"show\",{\"1\":{\"100\":1}}],[\"sh\",{\"1\":{\"55\":3,\"63\":1}}],[\"shixinde\",{\"1\":{\"0\":1,\"2\":1,\"5\":3,\"10\":1,\"12\":2,\"13\":1,\"15\":2,\"16\":1,\"22\":1,\"27\":1,\"28\":1,\"33\":1,\"34\":1,\"35\":1,\"65\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"119\":1,\"125\":1,\"127\":1,\"133\":1,\"151\":1,\"173\":1,\"175\":1,\"181\":1,\"184\":1,\"187\":1,\"190\":1,\"193\":1,\"196\":1}}],[\"script\",{\"1\":{\"166\":1}}],[\"scripts\",{\"1\":{\"53\":2,\"103\":1,\"153\":1,\"154\":1,\"209\":1}}],[\"scope\",{\"1\":{\"162\":1}}],[\"schedules\",{\"1\":{\"166\":1}}],[\"schedule\",{\"1\":{\"34\":1,\"56\":1,\"165\":1}}],[\"stage\",{\"1\":{\"166\":1}}],[\"stages\",{\"1\":{\"166\":1}}],[\"staged\",{\"1\":{\"56\":1,\"165\":1}}],[\"start\",{\"1\":{\"163\":1}}],[\"startswith\",{\"1\":{\"100\":1}}],[\"state\",{\"1\":{\"193\":2}}],[\"stat\",{\"1\":{\"39\":1}}],[\"stats\",{\"1\":{\"39\":2}}],[\"statustext\",{\"1\":{\"152\":1,\"190\":1}}],[\"status\",{\"1\":{\"33\":1,\"152\":1,\"154\":2,\"166\":1,\"190\":1,\"194\":2}}],[\"steps\",{\"1\":{\"56\":1,\"165\":1}}],[\"stringify\",{\"1\":{\"39\":2,\"153\":1,\"190\":1,\"193\":1}}],[\"string\",{\"1\":{\"19\":5,\"20\":3,\"44\":2,\"45\":1,\"46\":2,\"74\":1,\"75\":1,\"76\":1,\"79\":1,\"80\":1,\"82\":1,\"86\":1,\"89\":5,\"188\":1,\"190\":5,\"191\":3,\"193\":1,\"194\":1,\"199\":1,\"208\":2,\"211\":1}}],[\"src\",{\"1\":{\"8\":2,\"22\":1,\"23\":1,\"24\":3,\"25\":3,\"27\":3,\"28\":2,\"34\":1,\"35\":1,\"37\":1,\"53\":3,\"55\":3,\"56\":1,\"67\":1,\"69\":3,\"70\":2,\"71\":1,\"76\":1,\"91\":1,\"92\":5,\"93\":1,\"95\":1,\"99\":1,\"100\":1,\"101\":1,\"104\":1,\"106\":1,\"107\":3,\"108\":6,\"139\":1,\"142\":2,\"143\":2,\"145\":2,\"151\":1,\"156\":1,\"158\":2,\"161\":1,\"163\":2,\"165\":1,\"166\":2,\"180\":2,\"196\":1,\"206\":1,\"209\":1}}],[\"swagger文档生成与ts类型解析工具\",{\"1\":{\"10\":1}}],[\"swagger\",{\"1\":{\"0\":2,\"2\":2,\"5\":3,\"6\":2,\"10\":1,\"13\":1,\"15\":2,\"16\":1,\"18\":1,\"22\":1,\"27\":1,\"28\":1,\"33\":2,\"34\":1,\"35\":1,\"41\":1,\"42\":1,\"49\":1,\"50\":1,\"51\":3,\"52\":1,\"53\":3,\"55\":3,\"56\":1,\"60\":2,\"62\":4,\"63\":1,\"65\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":2,\"117\":1,\"119\":2,\"124\":3,\"125\":1,\"126\":2,\"127\":2,\"133\":1,\"143\":1,\"145\":1,\"151\":2,\"157\":1,\"162\":1,\"163\":1,\"165\":1,\"166\":1,\"173\":3,\"175\":1,\"177\":2,\"178\":1,\"180\":3,\"181\":2,\"184\":2,\"187\":1,\"190\":2,\"193\":2,\"196\":4,\"202\":2,\"206\":1,\"209\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
